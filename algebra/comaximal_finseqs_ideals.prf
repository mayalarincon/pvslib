(comaximal_finseqs_ideals
 (IMP_ring_cosets_lemmas_TCC1 0
  (IMP_ring_cosets_lemmas_TCC1-1 nil 3796722785
   ("" (lemma "fullset_is_ring_with_one")
    (("" (expand "ring_with_one?") (("" (assert) nil nil)) nil)) nil)
   ((ring_with_one? const-decl "bool" ring_with_one_def nil)
    (fullset_is_ring_with_one formula-decl nil comaximal_finseqs_ideals
     nil))
   nil
   (IMP_ring_cosets_lemmas assuming
    "ring_cosets_lemmas[comaximal_finseqs_ideals.T, comaximal_finseqs_ideals.+, comaximal_finseqs_ideals.*, comaximal_finseqs_ideals.zero].ring_cosets_lemmas"
    "fullset_is_ring: ASSUMPTION ring_def[ring_cosets_lemmas.T, ring_cosets_lemmas.+, ring_cosets_lemmas.*, ring_cosets_lemmas.zero].ring?(sets[ring_cosets_lemmas.T].fullset)")))
 (IMP_ring_with_one_TCC1 0
  (IMP_ring_with_one_TCC1-1 nil 3793464364
   ("" (rewrite "fullset_is_ring_with_one") nil nil)
   ((fullset_is_ring_with_one formula-decl nil comaximal_finseqs_ideals
     nil))
   nil
   (IMP_ring_with_one assuming
    "ring_with_one[comaximal_finseqs_ideals.T, comaximal_finseqs_ideals.+, comaximal_finseqs_ideals.*, comaximal_finseqs_ideals.zero, comaximal_finseqs_ideals.one].ring_with_one"
    "fullset_is_ring_with_one: ASSUMPTION ring_with_one_def[ring_with_one.T, ring_with_one.+, ring_with_one.*, ring_with_one.zero, ring_with_one.one].ring_with_one?(sets[ring_with_one.T].fullset)")))
 (comaximal_ideals_equiv 0
  (comaximal_ideals_equiv-1 nil 3782489792
   ("" (skosimp)
    (("" (prop)
      (("1" (expand "comaximal_ideals?")
        (("1" (decompose-equality -1)
          (("1" (inst -1 "one")
            (("1" (iff)
              (("1" (prop)
                (("1" (expand "sum")
                  (("1" (skosimp)
                    (("1" (inst?)
                      (("1" (assert) nil nil)
                       ("2" (typepred "k!1")
                        (("2" (typepred "N!1")
                          (("2" (expand "ideal?")
                            (("2" (expand "left_ideal?")
                              (("2"
                                (expand "subring?")
                                (("2"
                                  (expand "subset?")
                                  (("2"
                                    (expand "member")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (inst?)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (typepred "h!1")
                        (("3" (typepred "M!1")
                          (("3" (expand "ideal?")
                            (("3" (expand "left_ideal?")
                              (("3"
                                (expand "subring?")
                                (("3"
                                  (expand "subset?")
                                  (("3"
                                    (expand "member")
                                    (("3"
                                      (flatten)
                                      (("3"
                                        (inst?)
                                        (("3" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide (2 3))
                  (("2" (typepred "R!1")
                    (("2" (expand "ring_with_one?")
                      (("2" (expand "monoid?")
                        (("2" (expand "monad?")
                          (("2" (expand "member")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "comaximal_ideals?")
        (("2" (decompose-equality 1)
          (("2" (iff)
            (("2" (skosimp)
              (("2" (prop)
                (("1" (hide (-2 -3 -4))
                  (("1" (lemma "sum_ideal_ideal")
                    (("1" (inst -1 "M!1" "N!1" "R!1")
                      (("1" (assert)
                        (("1" (expand "ideal?")
                          (("1" (expand "left_ideal?")
                            (("1" (expand "subring?")
                              (("1"
                                (flatten)
                                (("1"
                                  (hide (-2 -3 -4))
                                  (("1"
                                    (expand "subset?")
                                    (("1"
                                      (expand "member")
                                      (("1"
                                        (inst?)
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "sum")
                  (("2" (inst 1 "x!1*x!2" "x!1*y!1")
                    (("1" (typepred "R!1")
                      (("1" (expand "ring_with_one?")
                        (("1" (expand "ring?")
                          (("1" (flatten)
                            (("1" (hide (-1 -2 -3 -4 -6 -7))
                              (("1"
                                (expand "right_distributive?")
                                (("1"
                                  (expand "restrict")
                                  (("1"
                                    (inst?)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -4 -1)
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (reveal -7)
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide (-2 -4 2))
                      (("2" (typepred "N!1")
                        (("2" (expand "ideal?")
                          (("2" (expand "left_ideal?")
                            (("2" (expand "left_swallow?")
                              (("2"
                                (flatten)
                                (("2"
                                  (hide (-1 -3))
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (expand "member")
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (hide (-3 -4))
                      (("3" (typepred "M!1")
                        (("3" (expand "ideal?")
                          (("3" (expand "left_ideal?")
                            (("3" (expand "left_swallow?")
                              (("3"
                                (flatten)
                                (("3"
                                  (hide (-1 -3))
                                  (("3"
                                    (inst?)
                                    (("3"
                                      (expand "member")
                                      (("3" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-type-decl nil comaximal_finseqs_ideals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (+ formal-const-decl "[T, T -> T]" comaximal_finseqs_ideals nil)
    (sum const-decl "set[T]" cosets_def nil)
    (* formal-const-decl "[T, T -> T]" comaximal_finseqs_ideals nil)
    (zero formal-const-decl "T" comaximal_finseqs_ideals nil) nil
    (ideal? const-decl "bool" ring_ideal_def nil)
    (one formal-const-decl "T" comaximal_finseqs_ideals nil) nil nil
    (ideal type-eq-decl nil ring_ideal_def nil) nil nil nil nil nil nil
    nil (member const-decl "bool" sets nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil)
    (subset? const-decl "bool" sets nil) nil
    (NOT const-decl "[bool -> bool]" booleans nil)
    (comaximal_ideals? const-decl "bool" comaximal_finseqs_ideals nil)
    (left_swallow? const-decl "bool" ring_ideal_def nil)
    (restrict const-decl "R" restrict nil) nil nil nil nil nil nil
    (sum_ideal_ideal formula-decl nil ring_cosets_lemmas nil))
   shostak)))

