(ring_prime_element_def
 (R_prime_element?_TCC1 0
  (R_prime_element?_TCC1-1 nil 3823969126
   ("" (skosimp)
    (("" (skosimp)
      (("" (expand "remove")
        (("" (assert)
          (("" (expand "member") (("" (propax) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil)
    (remove const-decl "set" sets nil))
   nil
   (R_prime_element? subtype "ring_prime_element_def.x"
    "(sets[ring_prime_element_def.T].remove(ring_prime_element_def.zero, ring_prime_element_def.R))")))
 (R_prime_element?_TCC2 0
  (R_prime_element?_TCC2-1 nil 3823969126
   ("" (skosimp)
    (("" (skosimp)
      (("" (hide 1 2)
        (("" (typepred "R!1")
          (("" (expand "ring_with_one?")
            (("" (expand "ring?")
              (("" (expand "star_closed?")
                (("" (flatten)
                  (("" (hide-all-but (-2 1))
                    (("" (inst -1 "a!1" "b!1")
                      (("" (expand "member") (("" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ring_with_one? const-decl "bool" ring_with_one_def nil)
    (one formal-const-decl "T" ring_prime_element_def nil)
    (zero formal-const-decl "T" ring_prime_element_def nil)
    (* formal-const-decl "[T, T -> T]" ring_prime_element_def nil)
    (+ formal-const-decl "[T, T -> T]" ring_prime_element_def nil)
    (set type-eq-decl nil sets nil)
    (T formal-nonempty-type-decl nil ring_prime_element_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (ring? const-decl "bool" ring_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil))
   nil
   (R_prime_element? subtype
    "ring_prime_element_def.*(ring_prime_element_def.a, ring_prime_element_def.b)"
    "(ring_prime_element_def.R)"))))

