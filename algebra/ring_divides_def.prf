(ring_divides_def
 (associates?_TCC1 0
  (associates?_TCC1-1 nil 3840809765 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil ring_divides_def nil)
    (set type-eq-decl nil sets nil)
    (+ formal-const-decl "[T, T -> T]" ring_divides_def nil)
    (* formal-const-decl "[T, T -> T]" ring_divides_def nil)
    (zero formal-const-decl "T" ring_divides_def nil)
    (ring? const-decl "bool" ring_def nil)
    (remove const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (restrict const-decl "R" restrict nil)
    (identity? const-decl "bool" operator_defs nil)
    (monad? const-decl "bool" monad_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (monoid? const-decl "bool" monoid_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (group? const-decl "bool" group_def nil)
    (commutative? const-decl "bool" operator_defs nil)
    (abelian_group? const-decl "bool" group_def nil)
    (left_distributive? const-decl "bool" operator_defs_more nil)
    (right_distributive? const-decl "bool" operator_defs_more nil)
    (/= const-decl "boolean" notequal nil))
   nil
   (associates? subtype "ring_divides_def.b" "(ring_divides_def.R)")))
 (associates?_TCC2 0
  (associates?_TCC2-1 nil 3840809765 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil ring_divides_def nil)
    (set type-eq-decl nil sets nil)
    (+ formal-const-decl "[T, T -> T]" ring_divides_def nil)
    (* formal-const-decl "[T, T -> T]" ring_divides_def nil)
    (zero formal-const-decl "T" ring_divides_def nil)
    (ring? const-decl "bool" ring_def nil)
    (remove const-decl "set" sets nil)
    (/= const-decl "boolean" notequal nil)
    (right_distributive? const-decl "bool" operator_defs_more nil)
    (left_distributive? const-decl "bool" operator_defs_more nil)
    (abelian_group? const-decl "bool" group_def nil)
    (commutative? const-decl "bool" operator_defs nil)
    (group? const-decl "bool" group_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (monoid? const-decl "bool" monoid_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (monad? const-decl "bool" monad_def nil)
    (identity? const-decl "bool" operator_defs nil)
    (restrict const-decl "R" restrict nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (member const-decl "bool" sets nil)
    (divides? const-decl "bool" ring_divides_def nil))
   nil
   (associates? subtype "ring_divides_def.a" "(ring_divides_def.R)"))))

