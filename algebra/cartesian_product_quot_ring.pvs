%%
%% Authors:	
%% 		Thaynara Arielly de Lima
%% 		Universidade Federal de Goiás - Brasil
%%
%%  		Andréia Borges Avelar da Silva
%%		Universidade de Brasília - Brasil
%%			
%%		André Luiz Galdino
%%		Universidade Federal de Catalão - Brasil
%%
%%		Mauricio Ayala-Rincón
%%		Universidade de Brasília - Brasil
%%----------------------------------------------------------------------------
%%
%%	Formalization of the result: Cartesian product of rings is a ring
%%
%%	Last version: June 25, 2020
%%
%%----------------------------------------------------------------------------

cartesian_product_quot_ring[T:Type+,+,*:[T,T->T],zero:T]: THEORY

BEGIN

    ASSUMING IMPORTING ring_def[T,+,*,zero]
    
        fullset_is_ring: ASSUMPTION ring?(fullset[T])
	
    ENDASSUMING
  

IMPORTING cartesian_product_finite,
	  quotient_rings[T,+,*,zero]


            R: VAR ring[T,+,*,zero]
          fsA: VAR finseq[set[T]]
   
%-------------------------------------------------

  fsQ(R)(fsA: fsI(R)): finseq[setof[set[T]]] =
          IF length(fsA) = 0
           THEN empty_seq
           ELSE
	     (# length := length(fsA),
                   seq := (LAMBDA (i:below[length(fsA)]): R/fsA(i)) #)
          ENDIF


  Sfs(R)(fsA: fsI(R))(fsx,fsy:(cartesian_product_n[set[T]](fsQ(R)(fsA)))): finseq[set[T]] =
   IF length(fsA) = 0
    THEN empty_seq
    ELSE
     (# length := length(fsA),
           seq := (LAMBDA (i: below[length(fsA)]): add(R,fsA(i))(fsx(i), fsy(i))) #)
   ENDIF


  Pfs(R)(fsA: fsI(R))(fsx,fsy:(cartesian_product_n[set[T]](fsQ(R)(fsA)))): finseq[set[T]] =
   IF length(fsA) = 0
    THEN empty_seq
    ELSE
     (# length := length(fsA),
           seq := (LAMBDA (i: below[length(fsA)]): product(R,fsA(i))(fsx(i), fsy(i))) #)
   ENDIF

 %-------------------------------------------------

  cartesian_product_quot_ring_is_ring: LEMMA
     FORALL (fsA: fsI(R)):
      length(fsA) /= 0
        IMPLIES
         ring?[(cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA), Pfs(R)(fsA),fsA]
	     (cartesian_product_n[set[T]](fsQ(R)(fsA)))


END cartesian_product_quot_ring
