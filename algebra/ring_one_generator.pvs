%% Authors:	
%% 		Thaynara Arielly de Lima
%% 		Universidade Federal de Goiás - Brasil
%%
%%  		Andréia Borges Avelar da Silva
%%		Universidade de Brasília - Brasil
%%			
%%		André Luiz Galdino
%%		Universidade Federal de Catalão - Brasil
%%
%%		André Camapum Carvalho de Freitas
%%		Universidade Federal de Goiás - Brasil
%%
%%		Mauricio Ayala-Rincón
%%		Universidade de Brasília - Brasil
%%----------------------------------------------------------------------------
%%
%%	Specification of the set "one_gen(R)(a)" generated by a specific
%%	"a" of a ring "R" and formalization of some properties 
%%
%%	Last version: June 25, 2020
%%
%%----------------------------------------------------------------------------
ring_one_generator [T:TYPE+, +:[T,T -> T] , *:[T,T -> T], zero:T]: THEORY
	

 BEGIN

   ASSUMING IMPORTING ring_def[T,+,*,zero]
    
	fullset_is_ring: ASSUMPTION ring?(fullset[T])

   ENDASSUMING

  IMPORTING ring_basic_properties[T,+,*,zero],
	    ring_ideal[T,+,*,zero],
	    cosets_def,
	    center_def

  R: VAR ring
  a, b, r, s, x, y: VAR T
  i : VAR nat
  n : VAR int

  F_one_gen(R : ring, a : (R), F,G: [nat -> (R)]): [nat -> (R)] =
    LAMBDA (i : nat) : F(i)*a*G(i)
              


  one_gen(R)(a:(R)): set[(R)] =
     {t : (R) | EXISTS (r,s: (R), n:int, F,G: [nat -> (R)], m:nat) :
                t = r*a+a*s+times(a,n) + R_sigma(0,m, F_one_gen(R,a,F,G))}


  gen_is_member_one_gen: LEMMA
  FORALL(a:(R)): member(a, (one_gen(R)(a)))

  one_gen_is_sum_closed : LEMMA
     FORALL (R: ring,a:(R), (x : (R) | one_gen(R)(a)(x)), (y : (R) | one_gen(R)(a)(y)))  : one_gen(R)(a)(x+y)

  inv_one_gen: LEMMA
    FORALL (R: ring,a:(R), (x : (R) | one_gen(R)(a)(x)))  : one_gen(R)(a)(inv(x))

  one_gen_is_ideal:LEMMA
    FORALL(R: ring,a:(R)):
     ideal?(one_gen(R)(a),R)

  R_sigma_of_comm_factor_of_gen : LEMMA
   FORALL(R:(commutative_ring?), a:(R), F,G: [nat -> (R)], m:nat) : 
     EXISTS (b:(R)) :  R_sigma(0, m, F_one_gen(R, a, F, G)) = b * a  

  commutative_one_gen(R)(a:(R)): set[(R)] =
      {t: (R) | EXISTS (r:(R), n:int): t = r*a+times(a,n)}

  commutative_one_gen_charac: LEMMA
     FORALL(R:(commutative_ring?),a:(R)):
     one_gen(R)(a) = commutative_one_gen(R)(a)

  commutative_one_gen_is_ideal: COROLLARY
     FORALL(R:(commutative_ring?),a:(R)):
     ideal?(commutative_one_gen(R)(a),R)


  F_one_gen_r_comm: LEMMA
     FORALL(R:(ring?), a:(R), F,G: [nat -> (R)]):
     member(a, center[T,*](R)) IMPLIES F_one_gen(R, a, F,G) = LAMBDA (i : nat) : F(i)*G(i)*a

  R_sigma_over_center_l: COROLLARY
     FORALL(R:(ring?), a:(R), F,G: [nat -> (R)], low,high: nat) : 
      member(a, center[T,*](R)) IMPLIES
      R_sigma(low, high, F_one_gen(R, a, F, G)) = R_sigma(low, high, LAMBDA (i : nat) : F(i)*G(i)*a)

  F_one_gen_l_comm: LEMMA
     FORALL(R:(ring?), a:(R), F,G: [nat -> (R)]):
      member(a,center[T,*](R)) IMPLIES F_one_gen(R, a, F,G) = LAMBDA (i : nat) : a*F(i)*G(i)

  R_sigma_over_center_r: COROLLARY
     FORALL(R:(ring?), a:(R), F,G: [nat -> (R)], low,high: nat) : 
      member(a, center[T,*](R)) IMPLIES
      R_sigma(low, high, F_one_gen(R, a, F, G)) = R_sigma(low, high, LAMBDA (i : nat) : a*F(i)*G(i))

  subset_product_one_gen: LEMMA
     FORALL(R:(commutative_ring?), a,b:(R)):
     subset?(sum[T,*](commutative_one_gen(R)(a), commutative_one_gen(R)(b)), commutative_one_gen(R)(a*b))

  subset_prod_one_gen_ideal_prop1: LEMMA
      FORALL(R:(commutative_ring?), a,b:(R), M:set[T]): ideal?(M,R) AND member(a*b,M) IMPLIES
      subset?(sum[T,*](commutative_one_gen(R)(a), commutative_one_gen(R)(b)), M)

  subset_prod_one_gen_ideal_prop2: LEMMA
      FORALL(R:(commutative_ring?), a,b:(R), M:set[T]): ideal?(M,R) AND member(a*b,M) IMPLIES
      subset?(sum[T,*](sum[T,+](M,commutative_one_gen(R)(a)), sum[T,+](M,commutative_one_gen(R)(b))), M)

  sum_strict_subset_one_gen: LEMMA 
     FORALL(R:(ring?),a:(R), M:set[T]): member(zero,M) AND NOT member(a,M) IMPLIES
     strict_subset?(M, sum[T,+](M,one_gen(R)(a)))

 END ring_one_generator
 

 
