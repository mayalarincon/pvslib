%%----------------------------------------------------------------------------
%%
%% Authors:	
%% 		Thaynara Arielly de Lima
%% 		Universidade Federal de Goiás - Brasil
%%			
%%		André Luiz Galdino
%%		Universidade Federal de Catalão - Brasil
%%
%%              Andréia Borges Avelar da Silva
%%		Universidade de Brasília - Brasil
%%
%%		Mauricio Ayala-Rincón
%%		Universidade de Brasília - Brasil
%%
%%		Bruno Berto de Oliveira Ribeiro
%%		Universidade de Brasília - Brasil
%%----------------------------------------------------------------------------
%%
%%	Last version: October 27, 2023
%%
%%----------------------------------------------------------------------------



quaternions_Hamilton_extra: THEORY

BEGIN
IMPORTING quaternions[real,+,*,0,1,-1,-1],
          ring_nz_closed,
          reals,
          reals@sqrt,
	  vectors@vectors_3D,
          trig@trig_types,
          trig@trig_inverses


q: VAR quat
t: VAR nnreal_quad1_closed


sc_part_red_norm_nnegreal: LEMMA
     red_norm(q)`x >= 0

QH_norm(q): nnreal = sqrt(red_norm(q)`x) 

sq_QHnorm(q): nnreal = reals@sq.sq(QH_norm(q))  

QH_1: set[quat] = {q: quat | QH_norm(q) = 1}

sq_QHnorm_charac: LEMMA 
     sq_QHnorm(q) = red_norm(q)`x

red_norm_QH1: LEMMA
     FORALL (q: (QH_1)): red_norm(q)`x = 1

norm_decomp: LEMMA
     sq_QHnorm(q) =  sq_QHnorm(sc_part(q)) + sq_QHnorm(pure_part(q))

norm_decomp_1: LEMMA
     red_norm(q)`x = reals@sq.sq(q`x) + sq_QHnorm(pure_part(q))

QH_nzquat_nznorm: LEMMA 
     FORALL(q: nz_quat): red_norm(q) /= zero_q

QH_times_is_zero_q: LEMMA
     FORALL(p,q: nz_quat): p * q = zero_q IMPLIES p = zero_q OR q = zero_q

QH_inv_red_norm: LEMMA
     FORALL(q: nz_quat): inv[nz_quat,*,one_q](red_norm(q)) = 1/(red_norm(q)`x) * one_q

QH_inv_q_prod_charac: LEMMA
     FORALL (q: nz_quat): 
   inv[nz_quat,*,one_q](q) = (1/(red_norm(q)`x)) * conjugate(q)

quat_trig_form_aux: LEMMA
     FORALL (q: (QH_1)): EXISTS(t: real): cos(t) = q`x AND sin(t) = QH_norm(pure_part(q))

quat_trig_form: LEMMA
     FORALL (q: (QH_1)): EXISTS(t: nnreal_lt_2pi): cos(t) = q`x AND sin(t) = QH_norm(pure_part(q))
  	   
QH_norm_is_norm: LEMMA
     FORALL (q:(pure_quat)): QH_norm(q) = norm((# x := q`y, y:= q`z, z:= q`t #))


     
END quaternions_Hamilton_extra
