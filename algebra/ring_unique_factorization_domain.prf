(ring_unique_factorization_domain
 (IMP_ring_principal_ideal_domain_TCC1 0
  (IMP_ring_principal_ideal_domain_TCC1-1 nil 3855391338
   ("" (lemma "fullset_is_ring_with_one") (("" (propax) nil nil)) nil)
   ((fullset_is_ring_with_one formula-decl nil
     ring_unique_factorization_domain nil))
   nil
   (IMP_ring_principal_ideal_domain assuming
    "ring_principal_ideal_domain[ring_unique_factorization_domain.T, ring_unique_factorization_domain.+, ring_unique_factorization_domain.*, ring_unique_factorization_domain.zero, ring_unique_factorization_domain.one].ring_principal_ideal_domain"
    "fullset_is_ring_with_one: ASSUMPTION ring_with_one_def[ring_principal_ideal_domain.T, ring_principal_ideal_domain.+, ring_principal_ideal_domain.*, ring_principal_ideal_domain.zero, ring_principal_ideal_domain.one].ring_with_one?(sets[ring_principal_ideal_domain.T].fullset)")))
 (UFD_prime_iff_irreducible 0
  (UFD_prime_iff_irreducible-1 nil 3839511702
   ("" (skeep)
    (("" (prop)
      (("1" (expand "R_prime_element?")
        (("1" (expand "R_irreducible_element?")
          (("1" (flatten)
            (("1" (assert)
              (("1" (skeep)
                (("1" (typepred R)
                  (("1" (expand "unique_factorization_domain?")
                    (("1" (flatten)
                      (("1" (inst-cp -3 a)
                        (("1" (inst-cp -3 b)
                          (("1" (expand "divides?" -7)
                            (("1" (skeep)
                              (("1"
                                (inst-cp -3 x)
                                (("1"
                                  (case
                                   (a /= zero AND NOT unit? (R) (a)))
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (case
                                           "b /= zero AND NOT unit?(R)(b)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (case
                                                     "x /= zero AND NOT unit?(R)(x)")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (inst
                                                             -3
                                                             "a*b")
                                                            (("1"
                                                              (case
                                                               "a * b /= zero AND NOT unit?(R)(a * b)")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (replace
                                                                       -3
                                                                       -12)
                                                                      (("1"
                                                                        (replace
                                                                         -5
                                                                         -12)
                                                                        (("1"
                                                                          (inst-cp
                                                                           -4
                                                                           "fsI o fsI!1")
                                                                          (("1"
                                                                            (lemma
                                                                             "op_fseq_composition[T,*,one]")
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "fsI"
                                                                               "fsI!1")
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -4
                                                                                         "add_first(c,fsI!2)")
                                                                                        (("1"
                                                                                          (case
                                                                                           "a * b = op_fseq(add_first(c, fsI!2))")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -7
                                                                                                   "inverse[below[length(fsI!3)], below[length(fsI!3)]](phi!1)(0)")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "comp_inverse_right[below[length(fsI!3)],below[length(fsI!3)]]")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "0"
                                                                                                       "phi!1")
                                                                                                      (("1"
                                                                                                        (replaces
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "finseq_appl")
                                                                                                          (("1"
                                                                                                            (name-replace
                                                                                                             "inv_phi!1"
                                                                                                             "inverse[below[length(fsI!3)], below[length(fsI!3)]] (phi!1)(0)")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "add_first"
                                                                                                               -7)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "insert?")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -10
                                                                                                                   "inv_phi!1")
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "associates_equiv_relation")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "R")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "equivalence?")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "transitive?")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "symmetric?")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "o[(R)](fsI, fsI!1)`seq(phi(inv_phi!1))"
                                                                                                                                   "fsI!3`seq(inv_phi!1)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -2
                                                                                                                                       "c"
                                                                                                                                       "fsI!3`seq(inv_phi!1)"
                                                                                                                                       " o[(R)](fsI, fsI!1)`seq(phi(inv_phi!1))")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "associates?"
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "o"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (lift-if
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (prop)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "div_member_fseq_div_op_finseq")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "finseq_appl")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -1
                                                                                                                                                             "R"
                                                                                                                                                             "fsI"
                                                                                                                                                             "c"
                                                                                                                                                             "phi(inv_phi!1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "div_member_fseq_div_op_finseq")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "finseq_appl")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -1
                                                                                                                                                             "R"
                                                                                                                                                             "fsI!1"
                                                                                                                                                             "c"
                                                                                                                                                             "phi(inv_phi!1) - fsI`length")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "inv_phi!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 (-6
                                                                                                                                                                  -7
                                                                                                                                                                  -9
                                                                                                                                                                  -10
                                                                                                                                                                  1
                                                                                                                                                                  2))
                                                                                                                                                                (("2"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "0")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "0")
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       (-5
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (hide-all-but
                                                                                                     (-5
                                                                                                      1))
                                                                                                    (("3"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "op_fseq"
                                                                                               1)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (prop)
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (expand
                                                                                                     "add_first"
                                                                                                     2
                                                                                                     1)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "insert?"
                                                                                                       2)
                                                                                                      (("3"
                                                                                                        (case-replace
                                                                                                         "add_first(c, fsI!2) ^ (1, length(add_first(c, fsI!2)) - 1) = fsI!2")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            2))
                                                                                                          (("2"
                                                                                                            (decompose-equality)
                                                                                                            (("1"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (decompose-equality)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "x!1")
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("3"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("4"
                                                                                                    (expand
                                                                                                     "add_first"
                                                                                                     2
                                                                                                     1)
                                                                                                    (("4"
                                                                                                      (expand
                                                                                                       "insert?"
                                                                                                       2)
                                                                                                      (("4"
                                                                                                        (case-replace
                                                                                                         "add_first(c, fsI!2) ^ (1, length(add_first(c, fsI!2)) - 1) = fsI!2")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            2))
                                                                                                          (("2"
                                                                                                            (decompose-equality
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (decompose-equality
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "x!1")
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("3"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "fsI!2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "fsIr?")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "x1")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "x1 = 0")
                                                                                                        (("1"
                                                                                                          (replaces
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "add_first")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "insert?")
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "add_first")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "insert?")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "finseq_appl")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "R_irreducible_element?")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "fsIr?")
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (case-replace
                                                                                                 "i=0")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "add_first")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "insert?")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "finseq_appl")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "R_irreducible_element?")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "i")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "finseq_appl")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "add_first")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "insert?")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "finseq_appl")
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "fsI!2")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "fsIr?")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "i-1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "finseq_appl")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (split)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "x1"
                                                                                   "fsI"
                                                                                   "fsI!1")
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "fsIr?")
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "finseq_appl")
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "i"
                                                                                       "fsI"
                                                                                       "fsI!1")
                                                                                      (("2"
                                                                                        (case
                                                                                         "i < length(fsI)")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "o")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -3
                                                                                                1))
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "o")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (split)
                                                                (("1"
                                                                  (hide-all-but
                                                                   (-1
                                                                    -2
                                                                    1
                                                                    4
                                                                    6))
                                                                  (("1"
                                                                    (expand
                                                                     "integral_domain_w_one?")
                                                                    (("1"
                                                                      (expand
                                                                       "integral_domain?")
                                                                      (("1"
                                                                        (expand
                                                                         "nz_closed?")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand
                                                                             "star_closed?")
                                                                            (("1"
                                                                              (inst?
                                                                               -4)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -4))
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "remove")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "remove")
                                                                                (("3"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   -4
                                                                   -5
                                                                   -6
                                                                   -7
                                                                   -8
                                                                   -9
                                                                   -10)
                                                                  (("2"
                                                                    (expand
                                                                     "unit?"
                                                                     -1)
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (expand
                                                                         "l_invertible?")
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (rewrite
                                                                             "times_associative"
                                                                             :dir
                                                                             rl)
                                                                            (("2"
                                                                              (expand
                                                                               "unit?"
                                                                               4)
                                                                              (("2"
                                                                                (split)
                                                                                (("1"
                                                                                  (expand
                                                                                   "l_invertible?")
                                                                                  (("1"
                                                                                    (inst
                                                                                     1
                                                                                     "y * a")
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "R_prod_star_closed")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "R")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "integral_domain_w_one?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "integral_domain?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "commutative_ring?")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "commutative?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -5
                                                                                             "y * a"
                                                                                             "b")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "restrict")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -5
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "r_invertible?")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "y * a")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "R_prod_star_closed")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "R"
                                                                                                         "y"
                                                                                                         "a")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "R_prod_star_closed")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "R"
                                                                                                 "y"
                                                                                                 "a")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (prop)
                                                                (("1"
                                                                  (lemma
                                                                   "R_prod_star_closed")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "R"
                                                                     "a"
                                                                     "b")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "R_prod_star_closed")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "R"
                                                                     "a"
                                                                     "b")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (lemma
                                                               "R_prod_star_closed")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "R"
                                                                 "a"
                                                                 "b")
                                                                (("2"
                                                                  (expand
                                                                   "member")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide
                                                       -3
                                                       -4
                                                       -5
                                                       -6
                                                       -7
                                                       -8)
                                                      (("2"
                                                        (split)
                                                        (("1"
                                                          (prop)
                                                          (("1"
                                                            (replaces
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "integral_domain_w_one?")
                                                                (("1"
                                                                  (expand
                                                                   "integral_domain?")
                                                                  (("1"
                                                                    (expand
                                                                     "nz_closed?")
                                                                    (("1"
                                                                      (expand
                                                                       "star_closed?")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (case
                                                                           "R(a * b)")
                                                                          (("1"
                                                                            (inst
                                                                             -4
                                                                             "a"
                                                                             "b")
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (expand
                                                                                 "remove")
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "remove")
                                                                              (("2"
                                                                                (expand
                                                                                 "member")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (expand
                                                                               "remove")
                                                                              (("3"
                                                                                (expand
                                                                                 "member")
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "R_prod_star_closed")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "R")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "unit?"
                                                           -1)
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (expand
                                                               "r_invertible?")
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (case
                                                                   "c * (x * y) = a * (b * y)")
                                                                  (("1"
                                                                    (replace
                                                                     -3
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         -6
                                                                         "a"
                                                                         "b * y")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "unit?"
                                                                             -6)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (expand
                                                                                 "unit?"
                                                                                 2)
                                                                                (("1"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "l_invertible?")
                                                                                    (("1"
                                                                                      (skeep
                                                                                       -6)
                                                                                      (("1"
                                                                                        (case
                                                                                         " y_1 * (b * y) = (y_1 * y) * b")
                                                                                        (("1"
                                                                                          (inst
                                                                                           1
                                                                                           "y_1 * y")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "R_prod_star_closed")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "R")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "integral_domain_w_one?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "integral_domain?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "commutative_ring?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "commutative?")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -6
                                                                                                     "b"
                                                                                                     "y")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "restrict")
                                                                                                      (("2"
                                                                                                        (replaces
                                                                                                         -6)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "times_associative"
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "r_invertible?")
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (inst
                                                                                         1
                                                                                         " y * y_1")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "times_associative")
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "R_prod_star_closed")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "R")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "R_prod_star_closed")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "R")
                                                                              (("2"
                                                                                (expand
                                                                                 "member")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (rewrite
                                                                     "times_associative"
                                                                     :dir
                                                                     rl)
                                                                    (("2"
                                                                      (rewrite
                                                                       "times_associative"
                                                                       :dir
                                                                       rl)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "b")
                                            (("2"
                                              (split)
                                              (("1"
                                                (hide -4 -5 -6 -7 -8)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 6))
                                                      (("1"
                                                        (expand
                                                         "divides?")
                                                        (("1"
                                                          (inst
                                                           1
                                                           "zero")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -5 -6 -7 -8 -9)
                                                (("2"
                                                  (expand "unit? " -1)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand
                                                       "r_invertible?")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (case
                                                           "c * (x * y) = a * (b * y)")
                                                          (("1"
                                                            (replace
                                                             -3
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "divides?")
                                                                (("1"
                                                                  (inst
                                                                   5
                                                                   "x * y")
                                                                  (("1"
                                                                    (lemma
                                                                     "R_prod_star_closed")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "R")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-4 -7 1))
                                                            (("2"
                                                              (rewrite
                                                               "times_associative"
                                                               :dir
                                                               rl)
                                                              (("2"
                                                                (rewrite
                                                                 "times_associative"
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide -3 -4 -5 -6)
                                    (("2"
                                      (prop)
                                      (("1"
                                        (replace -1 3)
                                        (("1"
                                          (expand "divides?" 3)
                                          (("1"
                                            (inst 3 "zero")
                                            (("1" (assert) nil nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "unit?" -1)
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand "l_invertible?")
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (case
                                                 "c * (y * x) = y * a * b")
                                                (("1"
                                                  (replace -2 -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "divides?"
                                                       4)
                                                      (("1"
                                                        (inst
                                                         4
                                                         "y * x")
                                                        (("1"
                                                          (lemma
                                                           "R_prod_star_closed")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "R")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "integral_domain_w_one?")
                                                  (("2"
                                                    (expand
                                                     "integral_domain?")
                                                    (("2"
                                                      (expand
                                                       "commutative_ring?")
                                                      (("2"
                                                        (expand
                                                         "commutative?")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (rewrite
                                                             "times_associative"
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (inst
                                                               -5
                                                               "c"
                                                               "y")
                                                              (("2"
                                                                (expand
                                                                 "restrict")
                                                                (("2"
                                                                  (replace
                                                                   -5
                                                                   1)
                                                                  (("2"
                                                                    (rewrite
                                                                     "times_associative")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (rewrite
                                                                         "times_associative")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (rewrite "prime_el_is_irreducible") nil nil))
      nil))
    nil)
   ((R_irreducible_element? const-decl "bool"
     ring_irreducible_element_def nil)
    (unique_factorization_domain? const-decl "bool"
     ring_unique_factorization_domain_def nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (one formal-const-decl "T" ring_unique_factorization_domain nil)
    (zero formal-const-decl "T" ring_unique_factorization_domain nil)
    (* formal-const-decl "[T, T -> T]" ring_unique_factorization_domain
       nil)
    (+ formal-const-decl "[T, T -> T]" ring_unique_factorization_domain
       nil)
    (set type-eq-decl nil sets nil)
    (T formal-nonempty-type-decl nil ring_unique_factorization_domain
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (unit? const-decl "bool" ring_unit_def nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (times_one formula-decl nil ring_with_one nil) nil nil nil
    (times_zero formula-decl nil ring nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil) nil nil
    (fsIr? const-decl "bool" ring_irreducible_element_def nil)
    (O const-decl "finseq" finite_sequences nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (below type-eq-decl nil nat_types nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (fsIr type-eq-decl nil ring_irreducible_element_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (op_fseq def-decl "T" op_finseq_def nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    nil (inverse const-decl "D" function_inverse nil)
    (bijective? const-decl "bool" functions nil) nil
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (commutative_ring? const-decl "bool" ring_def nil)
    (ring_with_one nonempty-type-eq-decl nil ring_with_one nil)
    (transitive? const-decl "bool" relations nil)
    (remove const-decl "set" sets nil)
    (commutative_ring_with_one? const-decl "bool" ring_with_one_def
     nil)
    (div_member_fseq_div_op_finseq formula-decl nil ring_divides nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    nil nil
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (associates? const-decl "bool" ring_divides_def nil)
    (symmetric? const-decl "bool" relations nil)
    (equivalence? const-decl "bool" relations nil)
    (associates_equiv_relation formula-decl nil ring_divides nil)
    (insert? const-decl "finseq" seq_extras structures)
    (comp_inverse_right formula-decl nil function_inverse nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_min application-judgement "{k: int | k <= i AND k <= j}"
     real_defs nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (^ const-decl "finseq" finite_sequences nil) nil nil
    (add_first const-decl "finseq" seq_extras structures)
    (TRUE const-decl "bool" booleans nil)
    (op_fseq_composition formula-decl nil op_finseq nil) nil
    (r_invertible? const-decl "bool" ring_unit_def nil)
    (l_invertible? const-decl "bool" ring_unit_def nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (commutative? const-decl "bool" operator_defs nil)
    (restrict const-decl "R" restrict nil)
    (R_prod_star_closed formula-decl nil ring_basic_properties nil)
    (ring? const-decl "bool" ring_def nil) nil
    (times_associative formula-decl nil ring nil)
    (integral_domain? const-decl "bool" integral_domain_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (integral_domain_w_one? const-decl "bool"
     integral_domain_with_one_def nil)
    nil nil nil nil nil nil
    (one_times formula-decl nil ring_with_one nil)
    (divides? const-decl "bool" ring_divides_def nil)
    (R_prime_element? const-decl "bool" ring_prime_element_def nil)
    (prime_el_is_irreducible formula-decl nil ring_prime_element nil))
   shostak))
 (PID_is_UFD_TCC1 0
  (PID_is_UFD_TCC1-1 nil 3854116179 ("" (subtype-tcc) nil nil)
   ((principal_ideal_domain type-eq-decl nil
     ring_principal_ideal_domain_def nil)
    (principal_ideal_domain? const-decl "bool"
     ring_principal_ideal_domain_def nil)
    (set type-eq-decl nil sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (commutative_ring? const-decl "bool" ring_def nil)
    (/= const-decl "boolean" notequal nil)
    (remove const-decl "set" sets nil)
    (nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (integral_domain? const-decl "bool" integral_domain_def nil)
    (integral_domain_w_one? const-decl "bool"
     integral_domain_with_one_def nil)
    (subset? const-decl "bool" sets nil)
    (subring? const-decl "bool" ring_def nil)
    (left_swallow? const-decl "bool" ring_ideal_def nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil)
    (right_swallow? const-decl "bool" ring_ideal_def nil)
    (right_ideal? const-decl "bool" ring_ideal_def nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (fam_ideal const-decl "setof[set[T]]" ring_principal_ideal_def nil)
    (principal_ideal const-decl "set[T]" ring_principal_ideal_def nil)
    (principal_ideal_ring? const-decl "bool" ring_principal_ideal_def
     nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (zero formal-const-decl "T" ring_unique_factorization_domain nil)
    (+ formal-const-decl "[T, T -> T]" ring_unique_factorization_domain
       nil)
    (T formal-nonempty-type-decl nil ring_unique_factorization_domain
     nil)
    (one_member formula-decl nil monad nil)
    (right_identity formula-decl nil monad nil)
    (restrict const-decl "R" restrict nil)
    (left_identity formula-decl nil monad nil)
    (identity? const-decl "bool" operator_defs nil)
    (monad? const-decl "bool" monad_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (monoid? const-decl "bool" monoid_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (group? const-decl "bool" group_def nil)
    (commutative? const-decl "bool" operator_defs nil)
    (abelian_group? const-decl "bool" group_def nil)
    (left_distributive? const-decl "bool" operator_defs_more nil)
    (right_distributive? const-decl "bool" operator_defs_more nil)
    (ring? const-decl "bool" ring_def nil)
    (one formal-const-decl "T" ring_unique_factorization_domain nil)
    (* formal-const-decl "[T, T -> T]" ring_unique_factorization_domain
       nil)
    (times_one formula-decl nil ring_with_one nil)
    (one_times formula-decl nil ring_with_one nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil))
   nil
   (PID_is_UFD subtype "ring_unique_factorization_domain.R"
    "(ring_with_one_def[ring_unique_factorization_domain.T, ring_unique_factorization_domain.+, ring_unique_factorization_domain.*, ring_unique_factorization_domain.zero, ring_unique_factorization_domain.one].ring_with_one?)")))
 (PID_is_UFD 0
  (PID_is_UFD-1 nil 3855391360
   ("" (skeep)
    (("" (expand "unique_factorization_domain?")
      (("" (split)
        (("1" (typepred "R")
          (("1" (expand "principal_ideal_domain?")
            (("1" (assert) nil nil)) nil))
          nil)
         ("2" (lemma "PID_factorization_uniqueness")
          (("2" (skeep)
            (("2" (lemma "PID_factorization_existence")
              (("2" (inst -1 "R" "a")
                (("2" (assert)
                  (("2" (skeep)
                    (("2" (inst 3 "fsI")
                      (("2" (assert)
                        (("2" (skeep)
                          (("2" (inst -2 "R" "a" "fsIp" "fsI")
                            (("2" (assert)
                              (("2"
                                (flatten)
                                (("2"
                                  (assert)
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (inst 3 "phi")
                                      (("1"
                                        (expand "finseq_appl")
                                        (("1"
                                          (split)
                                          (("1"
                                            (expand "bijective?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (hide-all-but
                                                 (-2 -3 -4 1))
                                                (("1"
                                                  (split)
                                                  (("1"
                                                    (expand
                                                     "injective?")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (inst
                                                         -3
                                                         "x1"
                                                         "x2")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -2)
                                                    (("2"
                                                      (expand
                                                       "surjective?")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (inst -2 "y")
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (inst
                                                               1
                                                               "x")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skeep)
                                            (("2"
                                              (inst -4 "i")
                                              (("2"
                                                (lemma
                                                 "associates_equiv_relation")
                                                (("2"
                                                  (inst?)
                                                  (("1"
                                                    (expand
                                                     "equivalence?")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand
                                                         "symmetric?")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "R")
                                                    (("2"
                                                      (expand
                                                       "principal_ideal_domain?")
                                                      (("2"
                                                        (expand
                                                         "integral_domain_w_one?")
                                                        (("2"
                                                          (expand
                                                           "integral_domain?")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (prop)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (prop)
                                            (("1" (assert) nil nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((unique_factorization_domain? const-decl "bool"
     ring_unique_factorization_domain_def nil)
    (PID_factorization_uniqueness formula-decl nil
     ring_principal_ideal_domain nil)
    (PID_factorization_existence formula-decl nil
     ring_principal_ideal_domain nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (fsIr? const-decl "bool" ring_irreducible_element_def nil) nil nil
    nil nil (< const-decl "bool" reals nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bijective? const-decl "bool" functions nil)
    (commutative_ring? const-decl "bool" ring_def nil)
    (ring_with_one nonempty-type-eq-decl nil ring_with_one nil)
    (remove const-decl "set" sets nil)
    (symmetric? const-decl "bool" relations nil)
    (equivalence? const-decl "bool" relations nil)
    (integral_domain? const-decl "bool" integral_domain_def nil)
    (integral_domain_w_one? const-decl "bool"
     integral_domain_with_one_def nil)
    (associates_equiv_relation formula-decl nil ring_divides nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (fsIr type-eq-decl nil ring_irreducible_element_def nil)
    (principal_ideal_domain type-eq-decl nil
     ring_principal_ideal_domain_def nil)
    (principal_ideal_domain? const-decl "bool"
     ring_principal_ideal_domain_def nil)
    (one formal-const-decl "T" ring_unique_factorization_domain nil)
    (zero formal-const-decl "T" ring_unique_factorization_domain nil)
    (* formal-const-decl "[T, T -> T]" ring_unique_factorization_domain
       nil)
    (+ formal-const-decl "[T, T -> T]" ring_unique_factorization_domain
       nil)
    (set type-eq-decl nil sets nil)
    (T formal-nonempty-type-decl nil ring_unique_factorization_domain
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak)))

