(ring_def
 (ring?_TCC1 0
  (ring?_TCC1-2 "" 3790093371
   ("" (skosimp*)
    (("" (expand "star_closed?")
      (("" (expand "member")
        (("" (inst - "x1!1`1" "x1!1`2") (("" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((star_closed? const-decl "bool" groupoid_def nil)
    (T formal-nonempty-type-decl nil ring_def nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (member const-decl "bool" sets nil))
   shostak
   (ring? subtype
    "restrict[[ring_def.T, ring_def.T], [(ring_def.S), (ring_def.S)], ring_def.T].restrict(ring_def.*)"
    "[[(ring_def.S), (ring_def.S)] -> (ring_def.S)]"))
  (ring?_TCC1-1 nil 3301145269
   ("" (expand "semigroup?")
    (("" (skosimp*)
      (("" (expand "groupoid?")
        (("" (expand "star_closed?")
          (("" (expand "member")
            (("" (inst - "x1!1`1" "x1!1`2") (("" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((star_closed? const-decl "bool" groupoid_def nil)
    (T formal-nonempty-type-decl nil ring_def nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (member const-decl "bool" sets nil))
   shostak
   (ring? subtype
    "restrict[[ring_def.T, ring_def.T], [(ring_def.S), (ring_def.S)], ring_def.T].restrict(ring_def.*)"
    "[[(ring_def.S), (ring_def.S)] -> (ring_def.S)]")))
 (ring?_TCC2 0
  (ring?_TCC2-2 "" 3790093371
   ("" (expand "abelian_group?")
    (("" (expand "group?")
      (("" (expand "monoid?")
        (("" (expand "monad?")
          (("" (expand "star_closed?")
            (("" (expand "member") (("" (skosimp*) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((group? const-decl "bool" group_def nil)
    (monad? const-decl "bool" monad_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (monoid? const-decl "bool" monoid_def nil)
    (abelian_group? const-decl "bool" group_def nil))
   shostak
   (ring? subtype
    "restrict[[ring_def.T, ring_def.T], [(ring_def.S), (ring_def.S)], ring_def.T].restrict(ring_def.+)"
    "[[(ring_def.S), (ring_def.S)] -> (ring_def.S)]"))
  (ring?_TCC2-1 nil 3301145269
   ("" (expand "abelian_group?")
    (("" (expand "group?")
      (("" (expand "monoid?")
        (("" (expand "monad?")
          (("" (expand "groupoid?")
            (("" (expand "star_closed?")
              (("" (expand "member") (("" (skosimp*) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((group? const-decl "bool" group_def nil)
    (monad? const-decl "bool" monad_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (monoid? const-decl "bool" monoid_def nil)
    (abelian_group? const-decl "bool" group_def nil))
   shostak
   (ring? subtype
    "restrict[[ring_def.T, ring_def.T], [(ring_def.S), (ring_def.S)], ring_def.T].restrict(ring_def.+)"
    "[[(ring_def.S), (ring_def.S)] -> (ring_def.S)]")))
 (commutative_ring?_TCC1 0
  (commutative_ring?_TCC1-2 "" 3790093371
   ("" (expand "ring?")
    (("" (expand "star_closed?")
      (("" (expand "member") (("" (skosimp*) nil nil)) nil)) nil))
    nil)
   ((star_closed? const-decl "bool" groupoid_def nil)
    (member const-decl "bool" sets nil)
    (ring? const-decl "bool" ring_def nil))
   shostak
   (commutative_ring? subtype
    "restrict[[ring_def.T, ring_def.T], [(ring_def.S), (ring_def.S)], ring_def.T].restrict(ring_def.*)"
    "[[(ring_def.S), (ring_def.S)] -> (ring_def.S)]"))
  (commutative_ring?_TCC1-1 nil 3301145269
   ("" (expand "ring?")
    (("" (expand "semigroup?")
      (("" (expand "groupoid?")
        (("" (expand "star_closed?")
          (("" (expand "member") (("" (skosimp*) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((star_closed? const-decl "bool" groupoid_def nil)
    (member const-decl "bool" sets nil)
    (ring? const-decl "bool" ring_def nil))
   shostak
   (commutative_ring? subtype
    "restrict[[ring_def.T, ring_def.T], [(ring_def.S), (ring_def.S)], ring_def.T].restrict(ring_def.*)"
    "[[(ring_def.S), (ring_def.S)] -> (ring_def.S)]")))
 (finite_commutative_ring?_TCC1 0
  (finite_commutative_ring?_TCC1-2 "" 3790093372
   ("" (expand "finite_ring?")
    (("" (expand "ring?")
      (("" (expand "star_closed?")
        (("" (expand "member") (("" (skosimp*) nil nil)) nil)) nil))
      nil))
    nil)
   ((ring? const-decl "bool" ring_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (finite_ring? const-decl "bool" ring_def nil))
   shostak
   (finite_commutative_ring? subtype
    "restrict[[ring_def.T, ring_def.T], [(ring_def.S), (ring_def.S)], ring_def.T].restrict(ring_def.*)"
    "[[(ring_def.S), (ring_def.S)] -> (ring_def.S)]"))
  (finite_commutative_ring?_TCC1-1 nil 3301145269
   ("" (expand "finite_ring?")
    (("" (expand "ring?")
      (("" (expand "semigroup?")
        (("" (expand "groupoid?")
          (("" (expand "star_closed?")
            (("" (expand "member") (("" (skosimp*) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ring? const-decl "bool" ring_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (finite_ring? const-decl "bool" ring_def nil))
   shostak
   (finite_commutative_ring? subtype
    "restrict[[ring_def.T, ring_def.T], [(ring_def.S), (ring_def.S)], ring_def.T].restrict(ring_def.*)"
    "[[(ring_def.S), (ring_def.S)] -> (ring_def.S)]"))))

