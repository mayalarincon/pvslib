(ring_cosets_lemmas
 (IMP_ring_ideal_TCC1 0
  (IMP_ring_ideal_TCC1-1 nil 3758790457
   ("" (rewrite "fullset_is_ring") nil nil)
   ((fullset_is_ring formula-decl nil ring_cosets_lemmas nil)) nil
   (IMP_ring_ideal assuming
    "ring_ideal[ring_cosets_lemmas.T, ring_cosets_lemmas.+, ring_cosets_lemmas.*, ring_cosets_lemmas.zero].ring_ideal"
    "fullset_is_ring: ASSUMPTION ring_def[ring_ideal.T, ring_ideal.+, ring_ideal.*, ring_ideal.zero].ring?(sets[ring_ideal.T].fullset)")))
 (lcoset_iff_rcoset 0
  (lcoset_iff_rcoset-1 nil 3744107755
   ("" (skosimp)
    (("" (prop)
      (("1" (expand "left_coset?")
        (("1" (expand "right_coset?")
          (("1" (skosimp)
            (("1" (inst 1 "a!1")
              (("1" (replaces -1)
                (("1" (decompose-equality)
                  (("1" (iff)
                    (("1" (prop)
                      (("1" (expand "+")
                        (("1" (skosimp)
                          (("1" (inst 1 "h!1")
                            (("1" (rewrite "plus_commutative") nil
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "+")
                        (("2" (skosimp)
                          (("2" (inst 1 "h!1")
                            (("2" (rewrite "plus_commutative") nil
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "left_coset?")
        (("2" (expand "right_coset?")
          (("2" (skosimp)
            (("2" (inst 1 "a!1")
              (("2" (replaces -1)
                (("2" (decompose-equality)
                  (("2" (iff)
                    (("2" (prop)
                      (("1" (expand "+")
                        (("1" (skosimp)
                          (("1" (inst 1 "h!1")
                            (("1" (rewrite "plus_commutative") nil
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "+")
                        (("2" (skosimp)
                          (("2" (inst 1 "h!1")
                            (("2" (rewrite "plus_commutative") nil
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((right_coset? const-decl "bool" cosets_def nil) nil nil
    (plus_commutative formula-decl nil ring nil)
    (left_coset? const-decl "bool" cosets_def nil))
   shostak))
 (lcoset_iff_coset 0
  (lcoset_iff_coset-1 nil 3748885060
   ("" (skosimp)
    (("" (expand "coset?")
      (("" (prop) (("" (rewrite "lcoset_iff_rcoset") nil nil)) nil))
      nil))
    nil)
   ((coset? const-decl "bool" cosets_def nil)) shostak))
 (lcos_eq_rcos 0
  (lcos_eq_rcos-1 nil 3744107928
   ("" (skosimp)
    (("" (expand "lcos")
      (("" (expand "rcos")
        (("" (expand "+")
          (("" (decompose-equality)
            (("" (iff)
              (("" (prop)
                (("1" (skosimp)
                  (("1" (inst 1 "h!1")
                    (("1" (rewrite "plus_commutative") nil nil)) nil))
                  nil)
                 ("2" (skosimp)
                  (("2" (inst 1 "h!1")
                    (("2" (rewrite "plus_commutative") nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((lcos const-decl "set[T]" cosets_def nil) nil nil
    (plus_commutative formula-decl nil ring nil)
    (rcos const-decl "set[T]" cosets_def nil))
   nil))
 (self_coset 0
  (self_coset-1 nil 3744108322
   ("" (skosimp)
    (("" (expand "subring?")
      (("" (flatten)
        (("" (copy -2)
          (("" (expand "ring?" -1)
            (("" (expand "abelian_group?")
              (("" (flatten)
                (("" (copy -1)
                  (("" (expand "group?" -1)
                    (("" (expand "monoid?")
                      (("" (expand "monad?")
                        (("" (flatten)
                          (("" (hide-all-but (-2 -6 -13 1))
                            (("" (prop)
                              (("1"
                                (decompose-equality)
                                (("1"
                                  (inst -1 "zero")
                                  (("1"
                                    (iff)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "+" -1)
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (case
                                             "zero + inv(h!1) = a!1")
                                            (("1"
                                              (lemma
                                               "R_sum_star_closed")
                                              (("1"
                                                (inst
                                                 -1
                                                 "I!1"
                                                 "zero"
                                                 "inv(h!1)")
                                                (("1"
                                                  (replaces -2)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide -1 2)
                                                      (("1"
                                                        (typepred
                                                         "h!1")
                                                        (("1"
                                                          (lemma
                                                           "inv_member")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "I!1"
                                                             "h!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (replaces -1)
                                                (("2"
                                                  (rewrite
                                                   "plus_associative")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (decompose-equality)
                                (("2"
                                  (expand "+")
                                  (("2"
                                    (iff)
                                    (("2"
                                      (prop)
                                      (("1"
                                        (skosimp)
                                        (("1"
                                          (lemma "R_sum_star_closed")
                                          (("1"
                                            (inst -1 "I!1" "a!1" "h!1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (inst 1 "inv(a!1) + x!1")
                                        (("1"
                                          (rewrite
                                           "plus_associative"
                                           :dir
                                           rl)
                                          nil
                                          nil)
                                         ("2"
                                          (lemma "R_sum_star_closed")
                                          (("2"
                                            (inst
                                             -1
                                             "I!1"
                                             "inv(a!1)"
                                             "x!1")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide -1 2)
                                                (("2"
                                                  (lemma "inv_member")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "I!1"
                                                     "a!1")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subring? const-decl "bool" ring_def nil)
    (abelian_group? const-decl "bool" group_def nil)
    (monoid? const-decl "bool" monoid_def nil)
    (inv_right formula-decl nil group nil)
    (right_identity formula-decl nil monad nil)
    (plus_associative formula-decl nil ring nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (inv_member formula-decl nil group nil)
    (group nonempty-type-eq-decl nil group nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil) nil
    (left_identity formula-decl nil monad nil)
    (monad? const-decl "bool" monad_def nil)
    (group? const-decl "bool" group_def nil)
    (ring? const-decl "bool" ring_def nil))
   shostak))
 (gen_is_any 0
  (gen_is_any-2 nil 3807093439
   ("" (skosimp)
    (("" (prop)
      (("1" (expand "lc_gen")
        (("1" (typepred "choose({a: T | R!1(a) AND A!1 = a + I!1})")
          (("1" (propax) nil nil)
           ("2" (hide 2)
            (("2" (expand "nonempty?")
              (("2" (expand "empty?")
                (("2" (typepred "A!1")
                  (("2" (expand "left_coset?")
                    (("2" (skosimp)
                      (("2" (inst -2 "a!2")
                        (("2" (expand "member")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (typepred "a!1")
        (("2" (decompose-equality)
          (("2" (iff)
            (("2" (prop)
              (("1" (typepred "A!1")
                (("1" (expand "left_coset?")
                  (("1" (skosimp)
                    (("1" (typepred "a!2")
                      (("1" (expand "+" 1)
                        (("1" (replace -2 -3)
                          (("1" (expand "+" -3)
                            (("1" (skosimp)
                              (("1"
                                (replace -2 -4)
                                (("1"
                                  (expand "+" -4)
                                  (("1"
                                    (skosimp)
                                    (("1"
                                      (replace -4 1)
                                      (("1"
                                        (inst 1 "inv(h!2) + h!1")
                                        (("1"
                                          (rewrite "plus_associative")
                                          (("1"
                                            (rewrite
                                             "plus_associative"
                                             :dir
                                             rl)
                                            nil
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "h!2" "h!1")
                                          (("2"
                                            (hide -3 -4 -5 -6)
                                            (("2"
                                              (typepred "I!1")
                                              (("2"
                                                (lemma
                                                 "R_sum_star_closed")
                                                (("2"
                                                  (inst
                                                   -1
                                                   "I!1"
                                                   "inv(h!2)"
                                                   "h!1")
                                                  (("2"
                                                    (expand "member")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (hide -3 2)
                                                        (("2"
                                                          (lemma
                                                           "inv_is_member_R")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "I!1"
                                                             "h!2")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "+")
                (("2" (skosimp)
                  (("2" (typepred "A!1")
                    (("2" (expand "left_coset?")
                      (("2" (skosimp)
                        (("2" (replace -1 -3)
                          (("2" (expand "+" -3)
                            (("2" (skosimp)
                              (("2"
                                (replaces -3)
                                (("2"
                                  (replace -1 1)
                                  (("2"
                                    (expand "+" 1)
                                    (("2"
                                      (inst 1 "h!2 + h!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (rewrite "plus_associative")
                                          nil
                                          nil))
                                        nil)
                                       ("2"
                                        (hide -)
                                        (("2"
                                          (typepred "h!2" "h!1")
                                          (("2"
                                            (lemma "R_sum_star_closed")
                                            (("2"
                                              (inst
                                               -1
                                               "I!1"
                                               "h!2"
                                               "h!1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   (nil (left_coset type-eq-decl nil cosets_def nil)
    (ideal type-eq-decl nil ring_ideal_def nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (left_coset? const-decl "bool" cosets_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ring? const-decl "bool" ring_def nil)
    (lc_gen const-decl "T" cosets_def nil)
    (inv_is_member_R formula-decl nil ring_basic_properties nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (plus_associative formula-decl nil ring nil)
    (inv_right formula-decl nil group nil)
    (left_identity formula-decl nil monad nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil))
   nil)
  (gen_is_any-1 nil 3744108035
   ("" (skosimp)
    (("" (prop)
      (("1" (expand "lc_gen")
        (("1" (typepred "choose({a: T | R!1(a) AND A!1 = a + I!1})")
          (("1" (propax) nil nil)
           ("2" (hide 2)
            (("2" (expand "nonempty?")
              (("2" (expand "empty?")
                (("2" (typepred "A!1")
                  (("2" (expand "left_coset?")
                    (("2" (skosimp)
                      (("2" (inst -2 "a!2")
                        (("2" (expand "member")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (typepred "a!1")
        (("2" (decompose-equality)
          (("2" (iff)
            (("2" (prop)
              (("1" (typepred "A!1")
                (("1" (expand "left_coset?")
                  (("1" (skosimp)
                    (("1" (typepred "a!2")
                      (("1" (expand "+" 1)
                        (("1" (replace -2 -3)
                          (("1" (expand "+" -3)
                            (("1" (skosimp)
                              (("1"
                                (replace -2 -4)
                                (("1"
                                  (expand "+" -4)
                                  (("1"
                                    (skosimp)
                                    (("1"
                                      (replace -4 1)
                                      (("1"
                                        (inst 1 "-h!2 + h!1")
                                        (("1"
                                          (rewrite "plus_associative")
                                          (("1"
                                            (rewrite
                                             "plus_associative"
                                             :dir
                                             rl)
                                            nil
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "h!2" "h!1")
                                          (("2"
                                            (hide -3 -4 -5 -6)
                                            (("2"
                                              (typepred "I!1")
                                              (("2"
                                                (lemma
                                                 "R_sum_star_closed")
                                                (("2"
                                                  (inst
                                                   -1
                                                   "I!1"
                                                   "inv(h!2)"
                                                   "h!1")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (hide -3 2)
                                                        (("1"
                                                          (lemma
                                                           "inv_is_member_R")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "I!1"
                                                             "h!2")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (hide
                                                               -2
                                                               2)
                                                              (("2"
                                                                (expand
                                                                 "ideal?")
                                                                (("2"
                                                                  (expand
                                                                   "left_ideal?")
                                                                  (("2"
                                                                    (expand
                                                                     "subring?")
                                                                    (("2"
                                                                      (flatten)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -2 -3 2)
                                                    (("2"
                                                      (expand "ideal?")
                                                      (("2"
                                                        (expand
                                                         "left_ideal?")
                                                        (("2"
                                                          (expand
                                                           "subring?")
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "+")
                (("2" (skosimp)
                  (("2" (typepred "A!1")
                    (("2" (expand "left_coset?")
                      (("2" (skosimp)
                        (("2" (replace -1 -3)
                          (("2" (expand "+" -3)
                            (("2" (skosimp)
                              (("2"
                                (replaces -3)
                                (("2"
                                  (replace -1 1)
                                  (("2"
                                    (expand "+" 1)
                                    (("2"
                                      (inst 1 "h!2 + h!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (rewrite "plus_associative")
                                          nil
                                          nil))
                                        nil)
                                       ("2"
                                        (hide -)
                                        (("2"
                                          (typepred "h!2" "h!1")
                                          (("2"
                                            (lemma "R_sum_star_closed")
                                            (("2"
                                              (inst
                                               -1
                                               "I!1"
                                               "h!2"
                                               "h!1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (typepred "I!1")
                                                  (("2"
                                                    (expand "ideal?")
                                                    (("2"
                                                      (expand
                                                       "left_ideal?")
                                                      (("2"
                                                        (expand
                                                         "subring?")
                                                        (("2"
                                                          (flatten)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((left_coset type-eq-decl nil cosets_def nil)
    (ideal type-eq-decl nil ring_ideal_def nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (left_coset? const-decl "bool" cosets_def nil)
    (lc_gen const-decl "T" cosets_def nil)
    (inv_is_member_R formula-decl nil ring_basic_properties nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil))
   nil))
 (lcos_eq 0
  (lcos_eq-1 nil 3748885483
   ("" (skosimp)
    (("" (decompose-equality)
      (("" (inst -1 "a!1")
        (("" (iff)
          (("" (prop)
            (("1" (hide -1)
              (("1" (expand "+" -1) (("1" (propax) nil nil)) nil)) nil)
             ("2" (hide 1 3)
              (("2" (expand "+")
                (("2" (inst 1 "zero") (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   (nil (right_identity formula-decl nil monad nil)) shostak))
 (lcos_eq2 0
  (lcos_eq2-1 nil 3757928832
   ("" (skosimp)
    (("" (skosimp)
      (("" (decompose-equality)
        (("" (iff)
          (("" (prop)
            (("1" (expand "+")
              (("1" (skosimp)
                (("1" (replace -2 -1)
                  (("1" (inst 1 "h!1+h!2")
                    (("1" (rewrite "plus_associative") nil nil)
                     ("2" (hide -1 -2)
                      (("2" (expand "group?")
                        (("2" (expand "monoid?")
                          (("2" (expand "monad?")
                            (("2" (flatten)
                              (("2"
                                (hide-all-but (-1 1))
                                (("2"
                                  (expand "star_closed?")
                                  (("2"
                                    (inst -1 "h!1" "h!2")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "+")
              (("2" (skosimp)
                (("2" (lemma "cancel_right_minus")
                  (("2" (inst -1 "a!1" "b!1+h!1" "h!1")
                    (("2" (rewrite "plus_associative" -1)
                      (("2" (assert)
                        (("2" (replace -1 -2 rl)
                          (("2" (inst 1 "inv(h!1)+h!2")
                            (("1" (rewrite "plus_associative" -2) nil
                              nil)
                             ("2" (hide -1 -2 -3)
                              (("2"
                                (rewrite "product_in")
                                (("2" (rewrite "inv_in") nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cancel_right_minus formula-decl nil ring nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (inv_right formula-decl nil group nil)
    (right_identity formula-decl nil monad nil)
    (inv_in formula-decl nil group nil)
    (product_in formula-decl nil group nil)
    (group nonempty-type-eq-decl nil group nil)
    (monoid? const-decl "bool" monoid_def nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (monad? const-decl "bool" monad_def nil)
    (group? const-decl "bool" group_def nil)
    (plus_associative formula-decl nil ring nil) nil)
   shostak))
 (lc_gen_eq_TCC1 0
  (lc_gen_eq_TCC1-1 nil 3758019687
   ("" (skosimp*)
    (("" (expand "left_coset?") (("" (inst 1 "a!1") nil nil)) nil))
    nil)
   ((left_coset? const-decl "bool" cosets_def nil)
    (R!1 skolem-const-decl "ring[T, +, *, zero]" ring_cosets_lemmas
     nil)
    (a!1 skolem-const-decl "T" ring_cosets_lemmas nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ring? const-decl "bool" ring_def nil)
    (zero formal-const-decl "T" ring_cosets_lemmas nil)
    (* formal-const-decl "[T, T -> T]" ring_cosets_lemmas nil)
    (+ formal-const-decl "[T, T -> T]" ring_cosets_lemmas nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-nonempty-type-decl nil ring_cosets_lemmas nil))
   nil
   (lc_gen_eq subtype
    "(cosets_def[ring_cosets_lemmas.T, ring_cosets_lemmas.+].+)(ring_cosets_lemmas.a, ring_cosets_lemmas.I)"
    "cosets_def[ring_cosets_lemmas.T, ring_cosets_lemmas.+].left_coset(ring_cosets_lemmas.R, ring_cosets_lemmas.I)")))
 (lc_gen_eq 0
  (lc_gen_eq-1 nil 3758019695
   ("" (skosimp)
    (("" (lemma "gen_is_any")
      (("" (inst -1 "R!1" "I!1" "a!1+I!1" "a!1")
        (("1" (rewrite "lcos_eq")
          (("1" (hide-all-but (-2 1))
            (("1" (expand "ideal?")
              (("1" (expand "left_ideal?")
                (("1" (expand "subring?")
                  (("1" (flatten)
                    (("1" (hide -1 -3 -4)
                      (("1" (lemma "zero_is_member_R[T,+,*,zero]")
                        (("1" (inst?) (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (expand "+")
            (("2" (inst 1 "zero")
              (("1" (assert) nil nil)
               ("2" (expand "ideal?")
                (("2" (expand "left_ideal?")
                  (("2" (expand "subring?")
                    (("2" (flatten)
                      (("2" (hide -1 -3 -4 -5)
                        (("2" (lemma "zero_is_member_R[T,+,*,zero]")
                          (("2" (inst?) (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (expand "left_coset?") (("3" (inst 1 "a!1") nil nil))
          nil))
        nil))
      nil))
    nil)
   ((right_identity formula-decl nil monad nil)
    (lc_gen const-decl "T" cosets_def nil)
    (subring? const-decl "bool" ring_def nil)
    (zero_is_member_R formula-decl nil ring_basic_properties nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil)
    (left_coset type-eq-decl nil cosets_def nil)
    (ideal type-eq-decl nil ring_ideal_def nil)
    (left_coset? const-decl "bool" cosets_def nil) nil
    (ring? const-decl "bool" ring_def nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (ring nonempty-type-eq-decl nil ring nil))
   shostak))
 (ring_lcos_subset 0
  (ring_lcos_subset-1 nil 3739526191
   ("" (skosimp)
    (("" (expand "subset?")
      (("" (skosimp)
        (("" (expand "member")
          (("" (typepred "I!1" "R!1" "a!1")
            (("" (expand "ideal?")
              (("" (flatten)
                (("" (expand "left_ideal?")
                  (("" (flatten)
                    (("" (hide -2 -3)
                      (("" (expand "subring?")
                        (("" (flatten)
                          (("" (expand "+" -5)
                            (("" (skosimp)
                              ((""
                                (expand "subset?")
                                ((""
                                  (inst -1 "h!1")
                                  ((""
                                    (assert)
                                    ((""
                                      (lemma "R_sum_star_closed")
                                      ((""
                                        (inst -1 "R!1" "a!1" "h!1")
                                        (("" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((left_ideal? const-decl "bool" ring_ideal_def nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil) nil
    (subring? const-decl "bool" ring_def nil)
    (ring? const-decl "bool" ring_def nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ideal type-eq-decl nil ring_ideal_def nil))
   shostak))
 (ring_rcos_subset 0
  (ring_rcos_subset-1 nil 3739526866
   ("" (skosimp)
    (("" (expand "subset?")
      (("" (skosimp)
        (("" (typepred "I!1" "a!1" "R!1")
          (("" (expand "ideal?")
            (("" (expand "left_ideal?")
              (("" (flatten)
                (("" (hide -2 -3 -5)
                  (("" (expand "subring?")
                    (("" (flatten)
                      (("" (hide -2)
                        (("" (expand "subset?")
                          (("" (expand "+" -3)
                            (("" (expand "member")
                              ((""
                                (skosimp)
                                ((""
                                  (inst -1 "h!1")
                                  ((""
                                    (assert)
                                    ((""
                                      (lemma "R_sum_star_closed")
                                      ((""
                                        (inst -1 "R!1" "h!1" "a!1")
                                        (("" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ideal type-eq-decl nil ring_ideal_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (ring? const-decl "bool" ring_def nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil) nil
    (subring? const-decl "bool" ring_def nil))
   shostak))
 (left_zero 0
  (left_zero-1 nil 3743538329
   ("" (skosimp)
    (("" (expand "+")
      (("" (decompose-equality)
        (("" (iff)
          (("" (prop)
            (("1" (skosimp) (("1" (assert) nil nil)) nil)
             ("2" (inst 1 "x!1") nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   (nil (left_identity formula-decl nil monad nil)) shostak))
 (right_zero 0
  (right_zero-1 nil 3743538383
   ("" (skosimp)
    (("" (decompose-equality)
      (("" (iff)
        (("" (prop)
          (("1" (expand "+")
            (("1" (skosimp) (("1" (assert) nil nil)) nil)) nil)
           ("2" (expand "+")
            (("2" (inst 1 "x!1") (("2" (assert) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   (nil (right_identity formula-decl nil monad nil)) shostak))
 (ideal_is_coset 0
  (ideal_is_coset-1 nil 3758033742
   ("" (skosimp)
    (("" (rewrite "lcoset_iff_coset" :dir rl)
      (("" (expand "left_coset?")
        (("" (inst 1 "zero")
          (("1" (rewrite "left_zero") nil nil)
           ("2" (lemma "zero_is_member_R[T,+,*,zero]")
            (("2" (inst?)
              (("2" (expand "member") (("2" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ring? const-decl "bool" ring_def nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ideal type-eq-decl nil ring_ideal_def nil)
    (zero_is_member_R formula-decl nil ring_basic_properties nil)
    (left_coset? const-decl "bool" cosets_def nil))
   shostak))
 (sum_subring_ideal 0
  (sum_subring_ideal-3 nil 3807093359
   ("" (skosimp)
    (("" (lemma "subring_equiv[T, +, *, zero]")
      (("" (inst -1 "R!1" "sum(H!1, I!1)")
        (("" (assert)
          (("" (hide 2)
            (("" (split)
              (("1" (expand "nonempty?")
                (("1" (expand "empty?")
                  (("1" (inst -1 "zero")
                    (("1" (expand* "member" "sum")
                      (("1" (lemma "zero_is_member_R")
                        (("1"
                          (expand* "ideal?" "left_ideal?" "subring?")
                          (("1" (flatten)
                            (("1" (hide -2 -4 -6 -7)
                              (("1"
                                (inst-cp -1 "H!1")
                                (("1"
                                  (inst -1 "I!1")
                                  (("1"
                                    (expand "member")
                                    (("1"
                                      (inst 1 "zero" "zero")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand* "ideal?" "left_ideal?" "subring?")
                (("2" (flatten)
                  (("2" (hide -2 -4 -5 -6)
                    (("2" (expand "subset?")
                      (("2" (skosimp)
                        (("2" (expand* "member" "sum")
                          (("2" (skosimp)
                            (("2" (inst -2 "h!1")
                              (("2"
                                (inst -3 "k!1")
                                (("2"
                                  (lemma "R_sum_star_closed")
                                  (("2"
                                    (inst -1 "R!1" "h!1" "k!1")
                                    (("2"
                                      (assert)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp)
                (("3" (split)
                  (("1" (typepred "x!1" "y!1")
                    (("1" (expand "sum")
                      (("1" (skosimp*)
                        (("1" (inst 1 "h!1+ inv(h!2)" "k!1+ inv(k!2)")
                          (("1" (rewrite "plus_associative")
                            (("1" (rewrite "plus_associative" :dir rl)
                              (("1"
                                (rewrite
                                 "plus_commutative"
                                 1
                                 ("x" "inv(h!2)" "y" "k!1"))
                                (("1"
                                  (rewrite "plus_associative")
                                  (("1"
                                    (rewrite "negate_plus" :dir rl)
                                    (("1"
                                      (rewrite
                                       "plus_associative"
                                       :dir
                                       rl)
                                      (("1"
                                        (rewrite
                                         "plus_commutative"
                                         1
                                         ("x" "k!2" "y" "h!2"))
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (typepred "k!1" "k!2")
                            (("2" (hide -3 -4 -5)
                              (("2"
                                (expand "ideal?")
                                (("2"
                                  (expand "left_ideal?")
                                  (("2"
                                    (expand "subring?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (hide -3 -5 -6)
                                        (("2"
                                          (lemma "R_sum_star_closed")
                                          (("2"
                                            (inst
                                             -1
                                             "I!1"
                                             "k!1"
                                             "inv(k!2)")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide -1 2)
                                                (("2"
                                                  (lemma
                                                   "inv_is_member_R")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "I!1"
                                                     "k!2")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (typepred "h!1" "h!2")
                            (("3" (expand "subring?")
                              (("3"
                                (flatten)
                                (("3"
                                  (hide -3 -4 -5 -7)
                                  (("3"
                                    (lemma "R_sum_star_closed")
                                    (("3"
                                      (inst -1 "H!1" "h!1" "inv(h!2)")
                                      (("3"
                                        (assert)
                                        (("3"
                                          (hide -1 2)
                                          (("3"
                                            (lemma "inv_is_member_R")
                                            (("3"
                                              (inst -1 "H!1" "h!2")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "x!1" "y!1")
                    (("2" (expand "sum")
                      (("2" (skosimp*)
                        (("2"
                          (inst 1 "h!1*h!2" "h!1*k!2+k!1*h!2+k!1*k!2")
                          (("1" (rewrite "plus_associative" :dir rl)
                            (("1" (rewrite "plus_associative" :dir rl)
                              (("1"
                                (rewrite "times_plus" :dir rl)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "ideal?")
                            (("2" (expand "left_ideal?")
                              (("2"
                                (expand "right_ideal?")
                                (("2"
                                  (expand "subring?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -4 -5 -8 -9)
                                      (("2"
                                        (lemma "R_sum_star_closed")
                                        (("2"
                                          (inst-cp
                                           -1
                                           "I!1"
                                           "h!1 * k!2 + k!1 * h!2"
                                           "k!1 * k!2")
                                          (("2"
                                            (inst
                                             -1
                                             "I!1"
                                             "h!1 * k!2"
                                             "k!1 * h!2")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (split 1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 1)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (typepred
                                                           "h!1"
                                                           "k!2")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst
                                                               -5
                                                               "h!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (hide
                                                                   -1
                                                                   -3
                                                                   -4
                                                                   -8)
                                                                  (("1"
                                                                    (expand
                                                                     "left_swallow?")
                                                                    (("1"
                                                                      (inst
                                                                       -4
                                                                       "h!1"
                                                                       "k!2")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (typepred
                                                           "k!1"
                                                           "h!2")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (inst
                                                               -5
                                                               "h!2")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   -2
                                                                   -3
                                                                   -4
                                                                   -7)
                                                                  (("2"
                                                                    (expand
                                                                     "right_swallow?")
                                                                    (("2"
                                                                      (inst
                                                                       -4
                                                                       "h!2"
                                                                       "k!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred
                                                     "k!1"
                                                     "k!2")
                                                    (("2"
                                                      (hide
                                                       -3
                                                       -4
                                                       -5
                                                       -6
                                                       -8
                                                       -9)
                                                      (("2"
                                                        (lemma
                                                         "R_prod_star_closed")
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "I!1"
                                                           "k!1"
                                                           "k!2")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (expand "subring?")
                            (("3" (flatten)
                              (("3"
                                (typepred "h!1" "h!2")
                                (("3"
                                  (hide -3 -4 -5 -7)
                                  (("3"
                                    (lemma "R_prod_star_closed")
                                    (("3"
                                      (inst -1 "H!1" "h!1" "h!2")
                                      (("3" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subring_equiv formula-decl nil ring_basic_properties nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil)
    (subring? const-decl "bool" ring_def nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (left_identity formula-decl nil monad nil)
    (zero_is_member_R formula-decl nil ring_basic_properties nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (negate_plus formula-decl nil ring nil)
    (plus_commutative formula-decl nil ring nil)
    (plus_associative formula-decl nil ring nil)
    (inv_is_member_R formula-decl nil ring_basic_properties nil)
    (times_plus formula-decl nil ring nil)
    (right_swallow? const-decl "bool" ring_ideal_def nil)
    (left_swallow? const-decl "bool" ring_ideal_def nil)
    (R_prod_star_closed formula-decl nil ring_basic_properties nil)
    (right_ideal? const-decl "bool" ring_ideal_def nil)
    (sum const-decl "set[T]" cosets_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ring? const-decl "bool" ring_def nil))
   nil)
  (sum_subring_ideal-2 nil 3807093300
   ("" (skosimp)
    (("" (lemma "subring_equiv[T, +, *, zero]")
      (("" (inst -1 "R!1" "sum(H!1, I!1)")
        (("" (assert)
          (("" (hide 2)
            (("" (split)
              (("1" (expand "nonempty?")
                (("1" (expand "empty?")
                  (("1" (inst -1 "zero")
                    (("1" (expand* "member" "sum")
                      (("1" (lemma "zero_is_member_R")
                        (("1"
                          (expand* "ideal?" "left_ideal?" "subring?")
                          (("1" (flatten)
                            (("1" (hide -2 -4 -6 -7)
                              (("1"
                                (inst-cp -1 "H!1")
                                (("1"
                                  (inst -1 "I!1")
                                  (("1"
                                    (expand "member")
                                    (("1"
                                      (inst 1 "zero" "zero")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand* "ideal?" "left_ideal?" "subring?")
                (("2" (flatten)
                  (("2" (hide -2 -4 -5 -6)
                    (("2" (expand "subset?")
                      (("2" (skosimp)
                        (("2" (expand* "member" "sum")
                          (("2" (skosimp)
                            (("2" (inst -2 "h!1")
                              (("2"
                                (inst -3 "k!1")
                                (("2"
                                  (lemma "R_sum_star_closed")
                                  (("2"
                                    (inst -1 "R!1" "h!1" "k!1")
                                    (("2"
                                      (assert)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp)
                (("3" (split)
                  (("1" (typepred "x!1" "y!1")
                    (("1" (expand "sum")
                      (("1" (skosimp*)
                        (("1" (inst 1 "h!1+ inv(h!2)" "k!1+ inv(k!2)")
                          (("1" (rewrite "plus_associative")
                            (("1" (rewrite "plus_associative" :dir rl)
                              (("1"
                                (rewrite
                                 "plus_commutative"
                                 1
                                 ("x" "inv(h!2)" "y" "k!1"))
                                (("1"
                                  (rewrite "plus_associative")
                                  (("1"
                                    (rewrite "negate_plus" :dir rl)
                                    (("1"
                                      (rewrite
                                       "plus_associative"
                                       :dir
                                       rl)
                                      (("1"
                                        (rewrite
                                         "plus_commutative"
                                         1
                                         ("x" "k!2" "y" "h!2"))
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (typepred "k!1" "k!2")
                            (("2" (hide -3 -4 -5)
                              (("2"
                                (expand "ideal?")
                                (("2"
                                  (expand "left_ideal?")
                                  (("2"
                                    (expand "subring?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (hide -3 -5 -6)
                                        (("2"
                                          (lemma "R_sum_star_closed")
                                          (("2"
                                            (inst
                                             -1
                                             "I!1"
                                             "k!1"
                                             "inv(k!2)")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide -1 2)
                                                (("2"
                                                  (lemma
                                                   "inv_is_member_R")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "I!1"
                                                     "k!2")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (typepred "h!1" "h!2")
                            (("3" (expand "subring?")
                              (("3"
                                (flatten)
                                (("3"
                                  (hide -3 -4 -5 -7)
                                  (("3"
                                    (lemma "R_sum_star_closed")
                                    (("3"
                                      (inst -1 "H!1" "h!1" "inv(h!2)")
                                      (("3"
                                        (assert)
                                        (("3"
                                          (hide -1 2)
                                          (("3"
                                            (lemma "inv_is_member_R")
                                            (("3"
                                              (inst -1 "H!1" "h!2")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "x!1" "y!1")
                    (("2" (expand "sum")
                      (("2" (skosimp*)
                        (("2"
                          (inst 1 "h!1*h!2" "h!1*k!2+k!1*h!2+k!1*k!2")
                          (("1" (rewrite "plus_associative" :dir rl)
                            (("1" (rewrite "plus_associative" :dir rl)
                              (("1"
                                (rewrite "times_plus" :dir rl)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "ideal?")
                            (("2" (expand "left_ideal?")
                              (("2"
                                (expand "right_ideal?")
                                (("2"
                                  (expand "subring?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -4 -5 -8 -9)
                                      (("2"
                                        (lemma "R_sum_star_closed")
                                        (("2"
                                          (inst-cp
                                           -1
                                           "I!1"
                                           "h!1 * k!2 + k!1 * h!2"
                                           "k!1 * k!2")
                                          (("2"
                                            (inst
                                             -1
                                             "I!1"
                                             "h!1 * k!2"
                                             "k!1 * h!2")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (split 1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 1)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (typepred
                                                           "h!1"
                                                           "k!2")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst
                                                               -5
                                                               "h!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (hide
                                                                   -1
                                                                   -3
                                                                   -4
                                                                   -8)
                                                                  (("1"
                                                                    (expand
                                                                     "left_swallow?")
                                                                    (("1"
                                                                      (inst
                                                                       -4
                                                                       "h!1"
                                                                       "k!2")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (typepred
                                                           "k!1"
                                                           "h!2")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (inst
                                                               -5
                                                               "h!2")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   -2
                                                                   -3
                                                                   -4
                                                                   -7)
                                                                  (("2"
                                                                    (expand
                                                                     "right_swallow?")
                                                                    (("2"
                                                                      (inst
                                                                       -4
                                                                       "h!2"
                                                                       "k!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred
                                                     "k!1"
                                                     "k!2")
                                                    (("2"
                                                      (hide
                                                       -3
                                                       -4
                                                       -5
                                                       -6
                                                       -8
                                                       -9)
                                                      (("2"
                                                        (lemma
                                                         "R_prod_star_closed")
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "I!1"
                                                           "k!1"
                                                           "k!2")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (expand "subring?")
                            (("3" (flatten)
                              (("3"
                                (typepred "h!1" "h!2")
                                (("3"
                                  (hide -3 -4 -5 -7)
                                  (("3"
                                    (lemma "R_prod_star_closed")
                                    (("3"
                                      (inst -1 "H!1" "h!1" "h!2")
                                      (("3" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ring? const-decl "bool" ring_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (sum const-decl "set[T]" cosets_def nil)
    (right_ideal? const-decl "bool" ring_ideal_def nil)
    (R_prod_star_closed formula-decl nil ring_basic_properties nil)
    (left_swallow? const-decl "bool" ring_ideal_def nil)
    (right_swallow? const-decl "bool" ring_ideal_def nil)
    (times_plus formula-decl nil ring nil)
    (inv_is_member_R formula-decl nil ring_basic_properties nil)
    (plus_associative formula-decl nil ring nil)
    (plus_commutative formula-decl nil ring nil)
    (negate_plus formula-decl nil ring nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (zero_is_member_R formula-decl nil ring_basic_properties nil)
    (left_identity formula-decl nil monad nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (subring? const-decl "bool" ring_def nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil)
    (subring_equiv formula-decl nil ring_basic_properties nil))
   nil)
  (sum_subring_ideal-1 nil 3749915380
   ("" (skosimp)
    (("" (lemma "subring_equiv[T, +, *, zero]")
      (("" (inst -1 "R!1" "sum(H!1, I!1)")
        (("" (assert)
          (("" (hide 2)
            (("" (split)
              (("1" (expand "nonempty?")
                (("1" (expand "empty?")
                  (("1" (inst -1 "zero")
                    (("1" (expand* "member" "sum")
                      (("1" (lemma "zero_is_member_R")
                        (("1"
                          (expand* "ideal?" "left_ideal?" "subring?")
                          (("1" (flatten)
                            (("1" (hide -2 -4 -6 -7)
                              (("1"
                                (inst-cp -1 "H!1")
                                (("1"
                                  (inst -1 "I!1")
                                  (("1"
                                    (expand "member")
                                    (("1"
                                      (inst 1 "zero" "zero")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand* "ideal?" "left_ideal?" "subring?")
                (("2" (flatten)
                  (("2" (hide -2 -4 -5 -6)
                    (("2" (expand "subset?")
                      (("2" (skosimp)
                        (("2" (expand* "member" "sum")
                          (("2" (skosimp)
                            (("2" (inst -2 "h!1")
                              (("2"
                                (inst -3 "k!1")
                                (("2"
                                  (lemma "R_sum_star_closed")
                                  (("2"
                                    (inst -1 "R!1" "h!1" "k!1")
                                    (("2"
                                      (assert)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp)
                (("3" (split)
                  (("1" (typepred "x!1" "y!1")
                    (("1" (expand "sum")
                      (("1" (skosimp*)
                        (("1" (inst 1 "h!1-h!2" "k!1-k!2")
                          (("1" (rewrite "plus_associative")
                            (("1" (rewrite "plus_associative" :dir rl)
                              (("1"
                                (rewrite
                                 "plus_commutative"
                                 1
                                 ("x" "-h!2" "y" "k!1"))
                                (("1"
                                  (rewrite "plus_associative")
                                  (("1"
                                    (rewrite "negate_plus" :dir rl)
                                    (("1"
                                      (rewrite
                                       "plus_associative"
                                       :dir
                                       rl)
                                      (("1"
                                        (rewrite
                                         "plus_commutative"
                                         1
                                         ("x" "k!2" "y" "h!2"))
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (typepred "k!1" "k!2")
                            (("2" (hide -3 -4 -5)
                              (("2"
                                (expand "ideal?")
                                (("2"
                                  (expand "left_ideal?")
                                  (("2"
                                    (expand "subring?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (hide -3 -5 -6)
                                        (("2"
                                          (lemma "R_sum_star_closed")
                                          (("2"
                                            (inst
                                             -1
                                             "I!1"
                                             "k!1"
                                             "-k!2")
                                            (("2"
                                              (expand "-" 1)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (hide -1 2)
                                                  (("2"
                                                    (lemma
                                                     "inv_is_member_R")
                                                    (("2"
                                                      (inst
                                                       -1
                                                       "I!1"
                                                       "k!2")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (typepred "h!1" "h!2")
                            (("3" (expand "subring?")
                              (("3"
                                (flatten)
                                (("3"
                                  (hide -3 -4 -5 -7)
                                  (("3"
                                    (lemma "R_sum_star_closed")
                                    (("3"
                                      (inst -1 "H!1" "h!1" "-h!2")
                                      (("3"
                                        (expand "-" 1)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (hide -1 2)
                                            (("3"
                                              (lemma "inv_is_member_R")
                                              (("3"
                                                (inst -1 "H!1" "h!2")
                                                (("3"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "x!1" "y!1")
                    (("2" (expand "sum")
                      (("2" (skosimp*)
                        (("2"
                          (inst 1 "h!1*h!2" "h!1*k!2+k!1*h!2+k!1*k!2")
                          (("1" (rewrite "plus_associative" :dir rl)
                            (("1" (rewrite "plus_associative" :dir rl)
                              (("1"
                                (rewrite "times_plus" :dir rl)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "ideal?")
                            (("2" (expand "left_ideal?")
                              (("2"
                                (expand "right_ideal?")
                                (("2"
                                  (expand "subring?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide -4 -5 -8 -9)
                                      (("2"
                                        (lemma "R_sum_star_closed")
                                        (("2"
                                          (inst-cp
                                           -1
                                           "I!1"
                                           "h!1 * k!2 + k!1 * h!2"
                                           "k!1 * k!2")
                                          (("2"
                                            (inst
                                             -1
                                             "I!1"
                                             "h!1 * k!2"
                                             "k!1 * h!2")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (split 1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 1)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (typepred
                                                           "h!1"
                                                           "k!2")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst
                                                               -5
                                                               "h!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (hide
                                                                   -1
                                                                   -3
                                                                   -4
                                                                   -8)
                                                                  (("1"
                                                                    (expand
                                                                     "left_swallow?")
                                                                    (("1"
                                                                      (inst
                                                                       -4
                                                                       "h!1"
                                                                       "k!2")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (typepred
                                                           "k!1"
                                                           "h!2")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (inst
                                                               -5
                                                               "h!2")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   -2
                                                                   -3
                                                                   -4
                                                                   -7)
                                                                  (("2"
                                                                    (expand
                                                                     "right_swallow?")
                                                                    (("2"
                                                                      (inst
                                                                       -4
                                                                       "h!2"
                                                                       "k!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred
                                                     "k!1"
                                                     "k!2")
                                                    (("2"
                                                      (hide
                                                       -3
                                                       -4
                                                       -5
                                                       -6
                                                       -8
                                                       -9)
                                                      (("2"
                                                        (lemma
                                                         "R_prod_star_closed")
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "I!1"
                                                           "k!1"
                                                           "k!2")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (expand "subring?")
                            (("3" (flatten)
                              (("3"
                                (typepred "h!1" "h!2")
                                (("3"
                                  (hide -3 -4 -5 -7)
                                  (("3"
                                    (lemma "R_prod_star_closed")
                                    (("3"
                                      (inst -1 "H!1" "h!1" "h!2")
                                      (("3" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subring_equiv formula-decl nil ring_basic_properties nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil)
    (ideal? const-decl "bool" ring_ideal_def nil)
    (zero_is_member_R formula-decl nil ring_basic_properties nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (inv_is_member_R formula-decl nil ring_basic_properties nil)
    (right_swallow? const-decl "bool" ring_ideal_def nil)
    (left_swallow? const-decl "bool" ring_ideal_def nil)
    (R_prod_star_closed formula-decl nil ring_basic_properties nil)
    (right_ideal? const-decl "bool" ring_ideal_def nil)
    (sum const-decl "set[T]" cosets_def nil))
   shostak))
 (sum_ideal_ideal 0
  (sum_ideal_ideal-1 nil 3777913102
   ("" (skosimp)
    (("" (expand "ideal?" 1)
      (("" (expand "left_ideal?")
        (("" (expand "right_ideal?")
          (("" (expand "ideal?" -1)
            (("" (expand "left_ideal?")
              (("" (flatten)
                (("" (rewrite "sum_subring_ideal")
                  (("" (split)
                    (("1" (expand "left_swallow?")
                      (("1" (skosimp)
                        (("1" (typepred "x!1")
                          (("1" (expand "sum" -1)
                            (("1" (skosimp)
                              (("1"
                                (replace -1 1)
                                (("1"
                                  (rewrite "right_distributive")
                                  (("1"
                                    (expand "member")
                                    (("1"
                                      (expand "sum")
                                      (("1"
                                        (inst 1 "r!1*h!1" "r!1*k!1")
                                        (("1"
                                          (expand "ideal?")
                                          (("1"
                                            (expand "left_ideal?")
                                            (("1"
                                              (expand "left_swallow?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (hide-all-but (-6 1))
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "r!1"
                                                     "k!1")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but (-3 1))
                                          (("2"
                                            (typepred "h!1" "r!1")
                                            (("2"
                                              (inst -3 "r!1" "h!1")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "right_swallow?")
                      (("2" (skosimp)
                        (("2" (expand "member")
                          (("2" (expand "sum")
                            (("2" (typepred "x!1")
                              (("2"
                                (expand "sum")
                                (("2"
                                  (skosimp)
                                  (("2"
                                    (replaces -1)
                                    (("2"
                                      (rewrite "left_distributive")
                                      (("2"
                                        (inst 1 "h!1*r!1" "k!1*r!1")
                                        (("1"
                                          (expand "ideal?")
                                          (("1"
                                            (expand "right_ideal?")
                                            (("1"
                                              (expand "right_swallow?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (hide-all-but (-7 1))
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "r!1"
                                                     "k!1")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "right_ideal?")
                                          (("2"
                                            (expand "right_swallow?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (hide-all-but (-4 1))
                                                (("2"
                                                  (inst -1 "r!1" "h!1")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ideal? const-decl "bool" ring_ideal_def nil)
    (right_ideal? const-decl "bool" ring_ideal_def nil)
    (ring? const-decl "bool" ring_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (right_swallow? const-decl "bool" ring_ideal_def nil)
    (left_distributive formula-decl nil ring nil)
    (left_swallow? const-decl "bool" ring_ideal_def nil)
    (sum const-decl "set[T]" cosets_def nil)
    (right_distributive formula-decl nil ring nil)
    (left_ideal? const-decl "bool" ring_ideal_def nil))
   shostak))
 (sum_is_ideal_TCC1 0
  (sum_is_ideal_TCC1-1 nil 3750670774
   ("" (skosimp)
    (("" (lemma "sum_subring_ideal")
      (("" (inst -1 "H!1" "I!1" "R!1")
        (("" (assert)
          (("" (expand "subring?") (("" (propax) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((sum_subring_ideal formula-decl nil ring_cosets_lemmas nil)
    (subring? const-decl "bool" ring_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ring? const-decl "bool" ring_def nil)
    (zero formal-const-decl "T" ring_cosets_lemmas nil)
    (* formal-const-decl "[T, T -> T]" ring_cosets_lemmas nil)
    (+ formal-const-decl "[T, T -> T]" ring_cosets_lemmas nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-nonempty-type-decl nil ring_cosets_lemmas nil))
   nil
   (sum_is_ideal subtype
    "cosets_def[ring_cosets_lemmas.T, ring_cosets_lemmas.+].sum(ring_cosets_lemmas.H, ring_cosets_lemmas.I)"
    "(ring_def[ring_cosets_lemmas.T, ring_cosets_lemmas.+, ring_cosets_lemmas.*, ring_cosets_lemmas.zero].ring?)")))
 (sum_is_ideal 0
  (sum_is_ideal-1 nil 3750670787
   ("" (skosimp)
    (("" (lemma "sum_subring_ideal")
      (("" (inst -1 "H!1" "I!1" "R!1")
        (("" (assert)
          (("" (rewrite "ideal_equiv")
            (("" (rewrite "ideal_equiv")
              (("" (flatten)
                (("" (assert)
                  (("" (split)
                    (("1" (expand "subset?" 1)
                      (("1" (skosimp)
                        (("1" (expand "sum" 1)
                          (("1" (expand "member")
                            (("1" (inst 1 "zero" "x!1")
                              (("1" (assert) nil nil)
                               ("2"
                                (expand "subring?")
                                (("2"
                                  (flatten)
                                  (("2"
                                    (hide-all-but (-5 1))
                                    (("2"
                                      (lemma "zero_is_member_R")
                                      (("2"
                                        (inst -1 "H!1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skosimp)
                      (("2" (typepred "r!1")
                        (("2" (expand "subring?")
                          (("2" (flatten)
                            (("2" (hide -3 -4 -5 -6 -7)
                              (("2"
                                (expand "subset?")
                                (("2"
                                  (inst -2 "r!1")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (inst -3 "x!1" "y!1" "r!1")
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sum const-decl "set[T]" cosets_def nil)
    (left_identity formula-decl nil monad nil)
    (zero_is_member_R formula-decl nil ring_basic_properties nil)
    (subring? const-decl "bool" ring_def nil)
    (ideal_equiv formula-decl nil ring_ideal nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ring? const-decl "bool" ring_def nil))
   shostak)))

