%%----------------------------------------------------------------------------
%%
%% Authors:	
%%
%%              André Camapum Carvalho de Freitas
%% 		Universidade Federal de Goiás - Brasil
%%
%%  		Andréia Borges Avelar da Silva
%%		Universidade de Brasília - Brasil
%%
%%              Thaynara Arielly de Lima
%% 		Universidade Federal de Goiás - Brasil
%%  	
%%----------------------------------------------------------------------------
%%
%%	Lemmas for rings with the property: "forall x
%%      there's only one y such that x * y * x = x".
%%	Sufficient condition for rings with one and
%%      division rings 
%%
%%
%%	Last version: May 22, 2019
%%
%%----------------------------------------------------------------------------

ring_w_one_xyx_is_x[T:Type+,+,*:[T,T->T],zero,one:T]: THEORY


BEGIN

   ASSUMING IMPORTING ring_with_one_def[T,+,*,zero,one]
    
	fullset_is_ring_with_one: ASSUMPTION ring_with_one?[T,+,*,zero,one](fullset[T])
	
   ENDASSUMING

   IMPORTING ring_xyx_is_x[T,+,*,zero],
   	     ring_with_one_nz_closed[T,+,*,zero,one],
             ring_with_one_basic_properties[T,+,*,zero,one],
	     ring_unit_def[T,+,*,zero,one]
	    

%%----------------------------------------------------------------------------

      S: VAR set[T]
      U: VAR ring_with_one


   xyx_one_is_member: LEMMA
      FORALL(S:xyx_R): (S /= singleton(zero) AND nz_closed?(U) AND subring?(S,U)) IMPLIES member(one,S)
  
   xyx_ring_with_one: COROLLARY
      FORALL(S:xyx_R): (S /= singleton(zero) AND nz_closed?(U) AND subring?(S,U)) IMPLIES ring_with_one?(S)

   xyx_R_unit: LEMMA
      FORALL(S:xyx_R): (S /= singleton(zero) AND nz_closed?(U) AND subring?(S,U)) IMPLIES
         FORALL (x:(remove(zero,S))): EXISTS (y:(S)): x*y = one AND y*x = one

   unit_xyx_R: LEMMA
      (FORALL (x: (remove(zero,U))): unit?(U)(x)) IMPLIES xyx_R?(U)

   unit_nz_closed: COROLLARY
      (FORALL (x: (remove(zero,U))): unit?(U)(x)) IMPLIES nz_closed?(U)	

  
	
  END ring_w_one_xyx_is_x

%%----------------------------------------------------------------------------
