(field_def
 (field?_TCC1 0
  (field?_TCC1-2 "" 3790093388
   ("" (expand "division_ring?")
    (("" (skosimp*)
      (("" (expand "ring_with_one?")
        (("" (expand "monoid?")
          (("" (expand "monad?")
            (("" (expand "star_closed?")
              (("" (flatten)
                (("" (inst - "x1!1`1" "x1!1`2")
                  (("" (expand "member") (("" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((monoid? const-decl "bool" monoid_def nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-nonempty-type-decl nil field_def nil)
    (member const-decl "bool" sets nil)
    (monad? const-decl "bool" monad_def nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (division_ring? const-decl "bool" division_ring_def nil))
   shostak
   (field? subtype
    "restrict[[field_def.T, field_def.T], [(field_def.S), (field_def.S)], field_def.T].restrict(field_def.*)"
    "[[(field_def.S), (field_def.S)] -> (field_def.S)]"))
  (field?_TCC1-1 nil 3301146598
   ("" (expand "division_ring?")
    (("" (skosimp*)
      (("" (expand "ring_with_one?")
        (("" (expand "monoid?")
          (("" (expand "monad?")
            (("" (expand "groupoid?")
              (("" (expand "star_closed?")
                (("" (flatten)
                  (("" (inst - "x1!1`1" "x1!1`2")
                    (("" (expand "member") (("" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((monoid? const-decl "bool" monoid_def nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (monad? const-decl "bool" monad_def nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (division_ring? const-decl "bool" division_ring_def nil))
   shostak
   (field? subtype
    "restrict[[field_def.T, field_def.T], [(field_def.S), (field_def.S)], field_def.T].restrict(field_def.*)"
    "[[(field_def.S), (field_def.S)] -> (field_def.S)]"))))

