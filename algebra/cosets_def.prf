(cosets_def
 (lc_gen_TCC1 0
  (lc_gen_TCC1-1 nil 3748942485
   ("" (skosimp)
    (("" (expand "nonempty?")
      (("" (expand "empty?")
        (("" (grind)
          (("" (typepred "A!1")
            (("" (expand "left_coset?")
              (("" (skosimp)
                (("" (inst -2 "a!1") (("" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nonempty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil cosets_def nil)
    (set type-eq-decl nil sets nil)
    (left_coset? const-decl "bool" cosets_def nil)
    (left_coset type-eq-decl nil cosets_def nil)
    (empty? const-decl "bool" sets nil))
   nil
   (lc_gen subtype
    "{a: cosets_def.T | booleans.AND(cosets_def.G(a), cosets_def.A = (cosets_def.+)(a, cosets_def.H))}"
    "(sets[cosets_def.T].nonempty?)")))
 (rc_gen_TCC1 0
  (rc_gen_TCC1-1 nil 3748942485 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil cosets_def nil)
    (set type-eq-decl nil sets nil)
    (right_coset? const-decl "bool" cosets_def nil)
    (right_coset type-eq-decl nil cosets_def nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (nonempty? const-decl "bool" sets nil))
   nil
   (rc_gen subtype
    "{a: cosets_def.T | booleans.AND(cosets_def.G(a), cosets_def.A = (cosets_def.+)(cosets_def.H, a))}"
    "(sets[cosets_def.T].nonempty?)")))
 (gen_TCC1 0
  (gen_TCC1-1 nil 3748942485 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil cosets_def nil)
    (set type-eq-decl nil sets nil)
    (coset? const-decl "bool" cosets_def nil)
    (coset type-eq-decl nil cosets_def nil)
    (right_coset? const-decl "bool" cosets_def nil)
    (left_coset? const-decl "bool" cosets_def nil))
   nil
   (gen subtype "cosets_def.A"
    "cosets_def.left_coset(cosets_def.G, cosets_def.H)")))
 (lcos_is_left_coset 0
  (lcos_is_left_coset-1 nil 3741002175
   ("" (skosimp)
    (("" (expand "left_coset?")
      (("" (expand "lcos") (("" (inst 1 "g!1") nil nil)) nil)) nil))
    nil)
   nil shostak))
 (rcos_is_right_coset 0
  (rcos_is_right_coset-1 nil 3741002284
   ("" (skosimp)
    (("" (expand "right_coset?")
      (("" (expand "rcos") (("" (inst 1 "g!1") nil nil)) nil)) nil))
    nil)
   nil shostak))
 (add_TCC1 0
  (add_TCC1-1 nil 3808076150 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil cosets_def nil)
    (set type-eq-decl nil sets nil)
    (coset? const-decl "bool" cosets_def nil)
    (coset type-eq-decl nil cosets_def nil)
    (right_coset? const-decl "bool" cosets_def nil)
    (left_coset? const-decl "bool" cosets_def nil))
   nil
   (add subtype "cosets_def.B"
    "cosets_def.left_coset(cosets_def.R, cosets_def.I)"))))

