(ring_unique_factorization_domain_def
 (unique_factorization_domain?_TCC1 0
  (unique_factorization_domain?_TCC1-1 nil 3838996621
   ("" (subtype-tcc) nil nil)
   ((ring_with_one? const-decl "bool" ring_with_one_def nil)
    (set type-eq-decl nil sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (fsIr type-eq-decl nil ring_irreducible_element_def nil)
    (fsIr? const-decl "bool" ring_irreducible_element_def nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (R_irreducible_element? const-decl "bool"
     ring_irreducible_element_def nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (restrict const-decl "R" restrict nil)
    (identity? const-decl "bool" operator_defs nil)
    (monad? const-decl "bool" monad_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (monoid? const-decl "bool" monoid_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (group? const-decl "bool" group_def nil)
    (commutative? const-decl "bool" operator_defs nil)
    (abelian_group? const-decl "bool" group_def nil)
    (left_distributive? const-decl "bool" operator_defs_more nil)
    (right_distributive? const-decl "bool" operator_defs_more nil)
    (ring? const-decl "bool" ring_def nil)
    (commutative_ring? const-decl "bool" ring_def nil)
    (/= const-decl "boolean" notequal nil)
    (remove const-decl "set" sets nil)
    (zero formal-const-decl "T" ring_unique_factorization_domain_def
     nil)
    (* formal-const-decl "[T, T -> T]"
       ring_unique_factorization_domain_def nil)
    (+ formal-const-decl "[T, T -> T]"
       ring_unique_factorization_domain_def nil)
    (T formal-nonempty-type-decl nil
     ring_unique_factorization_domain_def nil)
    (nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (integral_domain? const-decl "bool" integral_domain_def nil)
    (one formal-const-decl "T" ring_unique_factorization_domain_def
     nil)
    (integral_domain_w_one? const-decl "bool"
     integral_domain_with_one_def nil)
    (l_invertible? const-decl "bool" ring_unit_def nil)
    (r_invertible? const-decl "bool" ring_unit_def nil)
    (unit? const-decl "bool" ring_unit_def nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil))
   nil
   (unique_factorization_domain? subtype
    "ring_unique_factorization_domain_def.phi(ring_unique_factorization_domain_def.i)"
    "below[length(fsIp)]")))
 (unique_factorization_domain?_TCC2 0
  (unique_factorization_domain?_TCC2-1 nil 3838996621
   ("" (subtype-tcc) nil nil)
   ((ring_with_one? const-decl "bool" ring_with_one_def nil)
    (set type-eq-decl nil sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (fsIr type-eq-decl nil ring_irreducible_element_def nil)
    (fsIr? const-decl "bool" ring_irreducible_element_def nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (R_irreducible_element? const-decl "bool"
     ring_irreducible_element_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (restrict const-decl "R" restrict nil)
    (identity? const-decl "bool" operator_defs nil)
    (monad? const-decl "bool" monad_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (monoid? const-decl "bool" monoid_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (group? const-decl "bool" group_def nil)
    (commutative? const-decl "bool" operator_defs nil)
    (abelian_group? const-decl "bool" group_def nil)
    (left_distributive? const-decl "bool" operator_defs_more nil)
    (right_distributive? const-decl "bool" operator_defs_more nil)
    (ring? const-decl "bool" ring_def nil)
    (commutative_ring? const-decl "bool" ring_def nil)
    (/= const-decl "boolean" notequal nil)
    (remove const-decl "set" sets nil)
    (zero formal-const-decl "T" ring_unique_factorization_domain_def
     nil)
    (* formal-const-decl "[T, T -> T]"
       ring_unique_factorization_domain_def nil)
    (+ formal-const-decl "[T, T -> T]"
       ring_unique_factorization_domain_def nil)
    (T formal-nonempty-type-decl nil
     ring_unique_factorization_domain_def nil)
    (nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (integral_domain? const-decl "bool" integral_domain_def nil)
    (one formal-const-decl "T" ring_unique_factorization_domain_def
     nil)
    (integral_domain_w_one? const-decl "bool"
     integral_domain_with_one_def nil)
    (l_invertible? const-decl "bool" ring_unit_def nil)
    (r_invertible? const-decl "bool" ring_unit_def nil)
    (unit? const-decl "bool" ring_unit_def nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil))
   nil
   (unique_factorization_domain? subtype
    "finite_sequences[(ring_unique_factorization_domain_def.R)].finseq_appl(ring_unique_factorization_domain_def.fsIp)(ring_unique_factorization_domain_def.phi(ring_unique_factorization_domain_def.i))"
    "(sets[ring_unique_factorization_domain_def.T].remove(ring_unique_factorization_domain_def.zero, ring_unique_factorization_domain_def.R))")))
 (unique_factorization_domain?_TCC3 0
  (unique_factorization_domain?_TCC3-1 nil 3838996621
   ("" (subtype-tcc) nil nil)
   ((ring_with_one? const-decl "bool" ring_with_one_def nil)
    (set type-eq-decl nil sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (fsIr type-eq-decl nil ring_irreducible_element_def nil)
    (fsIr? const-decl "bool" ring_irreducible_element_def nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (R_irreducible_element? const-decl "bool"
     ring_irreducible_element_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (restrict const-decl "R" restrict nil)
    (identity? const-decl "bool" operator_defs nil)
    (monad? const-decl "bool" monad_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (monoid? const-decl "bool" monoid_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (group? const-decl "bool" group_def nil)
    (commutative? const-decl "bool" operator_defs nil)
    (abelian_group? const-decl "bool" group_def nil)
    (left_distributive? const-decl "bool" operator_defs_more nil)
    (right_distributive? const-decl "bool" operator_defs_more nil)
    (ring? const-decl "bool" ring_def nil)
    (commutative_ring? const-decl "bool" ring_def nil)
    (/= const-decl "boolean" notequal nil)
    (remove const-decl "set" sets nil)
    (zero formal-const-decl "T" ring_unique_factorization_domain_def
     nil)
    (* formal-const-decl "[T, T -> T]"
       ring_unique_factorization_domain_def nil)
    (+ formal-const-decl "[T, T -> T]"
       ring_unique_factorization_domain_def nil)
    (T formal-nonempty-type-decl nil
     ring_unique_factorization_domain_def nil)
    (nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (integral_domain? const-decl "bool" integral_domain_def nil)
    (one formal-const-decl "T" ring_unique_factorization_domain_def
     nil)
    (integral_domain_w_one? const-decl "bool"
     integral_domain_with_one_def nil)
    (l_invertible? const-decl "bool" ring_unit_def nil)
    (r_invertible? const-decl "bool" ring_unit_def nil)
    (unit? const-decl "bool" ring_unit_def nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil))
   nil
   (unique_factorization_domain? subtype
    "finite_sequences[(ring_unique_factorization_domain_def.R)].finseq_appl(ring_unique_factorization_domain_def.fsI)(ring_unique_factorization_domain_def.i)"
    "(sets[ring_unique_factorization_domain_def.T].remove(ring_unique_factorization_domain_def.zero, ring_unique_factorization_domain_def.R))"))))

