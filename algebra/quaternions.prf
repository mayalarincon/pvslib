(quaternions
 (IMP_quaternions_def_TCC1 0
  (IMP_quaternions_def_TCC1-1 nil 3907417249
   ("" (lemma "fullset_is_field")
    (("" (expand "field?")
      (("" (expand "division_ring?")
        (("" (expand "ring_with_one?")
          (("" (expand "ring?")
            (("" (expand "abelian_group?") (("" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((field? const-decl "bool" field_def nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (abelian_group? const-decl "bool" group_def nil)
    (ring? const-decl "bool" ring_def nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (fullset_is_field formula-decl nil quaternions nil))
   nil
   (IMP_quaternions_def assuming
    "quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].quaternions_def"
    "fullset_is_group: ASSUMPTION group_def[quaternions_def.T, quaternions_def.+, quaternions_def.zero].group?(sets[quaternions_def.T].fullset)")))
 (IMP_ring_characteristic_def_TCC1 0
  (IMP_ring_characteristic_def_TCC1-1 nil 3907417249
   ("" (lemma "fullset_is_field")
    (("" (expand "field?")
      (("" (expand "division_ring?")
        (("" (expand "ring_with_one?") (("" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((field? const-decl "bool" field_def nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (fullset_is_field formula-decl nil quaternions nil))
   nil
   (IMP_ring_characteristic_def assuming
    "ring_characteristic_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero].ring_characteristic_def"
    "fullset_is_ring: ASSUMPTION ring_def[ring_characteristic_def.T, ring_characteristic_def.+, ring_characteristic_def.*, ring_characteristic_def.zero].ring?(sets[ring_characteristic_def.T].fullset)")))
 (IMP_pvs_strategies_lemmas_TCC1 0
  (IMP_pvs_strategies_lemmas_TCC1-1 nil 3907417249
   ("" (lemma "fullset_is_field") (("" (propax) nil nil)) nil)
   ((fullset_is_field formula-decl nil quaternions nil)) nil
   (IMP_pvs_strategies_lemmas assuming
    "pvs_strategies_lemmas[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one].pvs_strategies_lemmas"
    "fullset_is_field: ASSUMPTION field_def[pvs_strategies_lemmas.T, pvs_strategies_lemmas.+, pvs_strategies_lemmas.*, pvs_strategies_lemmas.zero, pvs_strategies_lemmas.one].field?(sets[pvs_strategies_lemmas.T].fullset)")))
 (nz_quat_TCC1 0
  (nz_quat_TCC1-1 nil 3888076236
   ("" (typepred "a")
    (("" (expand "remove")
      (("" (flatten)
        (("" (hide -1)
          (("" (expand* "a_q" "zero_q") (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((a_q const-decl "quat" quaternions_def nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (zero formal-const-decl "T" quaternions nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil))
   nil
   (nz_quat subtype
    "quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].a_q"
    "nz_quat")))
 (one_sc_times 0
  (one_sc_times-1 nil 3885477903
   ("" (skeep)
    (("" (expand *)
      (("" (rewrite "one_times[T,+,*,zero,one]")
        (("" (rewrite "one_times[T,+,*,zero,one]")
          (("" (rewrite "one_times[T,+,*,zero,one]")
            (("" (rewrite "one_times[T,+,*,zero,one]")
              (("" (grind) (("" (decompose-equality) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((* const-decl "quat" quaternions_def nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one_times formula-decl nil ring_with_one nil))
   SHOSTAK))
 (sc_quat 0
  (sc_quat-1 nil 3885477904
   ("" (skeep)
    (("" (lemma "sc_quat_assoc")
      (("" (lemma "sc_comm")
        (("" (inst -2 "c" "u" "d*v")
          (("" (replace -2 1 rl)
            (("" (inst -1 "d" "u" "v")
              (("" (replace -1 1 rl)
                (("" (lemma "sc_quat_assoc")
                  (("" (inst -1 "c" "d*u" "v")
                    (("" (replaces -1)
                      (("" (rewrite "sc_assoc")
                        (("" (lemma "sc_quat_assoc")
                          (("" (inst -1 "c*d" "u" "v")
                            (("" (replace -1 1 rl)
                              (("" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (* const-decl "quat" quaternions_def nil)
    (TRUE const-decl "bool" booleans nil)
    (sc_assoc formula-decl nil quaternions_def nil)
    (sc_comm formula-decl nil quaternions_def nil))
   SHOSTAK))
 (sc_sqr_i 0
  (sc_sqr_i-1 nil 3885477905
   ("" (skeep)
    (("" (lemma "sqr_i")
      (("" (rewrite "sc_quat") (("" (assert) nil nil)) nil)) nil))
    nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (sqr_i formula-decl nil quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (sc_quat formula-decl nil quaternions nil))
   SHOSTAK))
 (sc_sqr_j 0
  (sc_sqr_j-1 nil 3885477906
   ("" (skeep)
    (("" (lemma "sqr_j")
      (("" (rewrite "sc_quat") (("" (assert) nil nil)) nil)) nil))
    nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (sqr_j formula-decl nil quaternions_def nil)
    (j const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (sc_quat formula-decl nil quaternions nil))
   SHOSTAK))
 (sc_ji_prod 0
  (sc_ji_prod-1 nil 3885477907
   ("" (skeep)
    (("" (lemma "ji_prod")
      (("" (rewrite "sc_quat") (("" (assert) nil nil)) nil)) nil))
    nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (ji_prod formula-decl nil quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (j const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (sc_quat formula-decl nil quaternions nil))
   SHOSTAK))
 (inv_charac 0
  (inv_charac-1 nil 3885477908
   ("" (skeep)
    (("" (expand "*")
      (("" (decompose-equality)
        (("1" (expand "inv" 1 1) (("1" (propax) nil nil)) nil)
         ("2" (expand "inv" 1 1) (("2" (propax) nil nil)) nil)
         ("3" (expand "inv" 1 1) (("3" (propax) nil nil)) nil)
         ("4" (expand "inv" 1 1) (("4" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   ((* const-decl "quat" quaternions_def nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (inv const-decl "quat" quaternions_def nil)
    (minus_one_times formula-decl nil ring_with_one nil))
   SHOSTAK))
 (q_inv_inv 0
  (q_inv_inv-1 nil 3885477909
   ("" (skeep)
    (("" (rewrite "inv_charac")
      (("" (rewrite "inv_charac")
        (("" (rewrite "sc_assoc") (("" (rewrite one_sc_times) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((inv_charac formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (sc_assoc formula-decl nil quaternions_def nil)
    (minus_one_sq_is_one formula-decl nil ring_with_one nil)
    (one_sc_times formula-decl nil quaternions nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "quat" quaternions_def nil))
   SHOSTAK))
 (quat_negative_times 0
  (quat_negative_times-1 nil 3885477909
   ("" (skeep)
    (("" (rewrite "inv_charac")
      (("" (rewrite "inv_charac")
        (("" (rewrite "sc_quat_assoc" :dir rl) nil nil)) nil))
      nil))
    nil)
   ((inv_charac formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil))
   SHOSTAK))
 (quat_times_negative 0
  (quat_times_negative-1 nil 3885477910
   ("" (skeep)
    (("" (rewrite "inv_charac")
      (("" (rewrite "inv_charac")
        (("" (rewrite "sc_comm" :dir rl)
          (("" (rewrite "sc_quat_assoc" :dir rl) nil nil)) nil))
        nil))
      nil))
    nil)
   ((inv_charac formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (sc_comm formula-decl nil quaternions_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil))
   SHOSTAK))
 (ji_prod_lem 0
  (ji_prod_lem-1 nil 3885477911
   ("" (rewrite "ij_is_k") (("" (rewrite "ji_prod") nil nil)) nil)
   ((ji_prod formula-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (ij_is_k formula-decl nil quaternions_def nil))
   SHOSTAK))
 (kk_prod 0
  (kk_prod-1 nil 3885477912
   ("" (rewrite "ij_is_k" :dir rl)
    (("" (lemma "q_assoc")
      (("" (expand "associative?")
        (("" (inst-cp -1 "i" "j" "i*j")
          (("" (replaces -2)
            (("" (inst-cp -1 "j" "i" "j")
              (("" (replace -2 1 rl)
                (("" (hide -2)
                  (("" (rewrite "ji_prod_lem")
                    (("" (inst-cp -1 "i" "inv(i*j)" "j")
                      (("" (replace -2 1 rl)
                        (("" (hide -2)
                          (("" (rewrite "quat_negative_times" :dir rl)
                            (("" (inst-cp -1 "i" "inv(i)" "j")
                              ((""
                                (replace -2 1 rl)
                                ((""
                                  (hide -2)
                                  ((""
                                    (rewrite "quat_negative_times")
                                    ((""
                                      (rewrite "quat_times_negative")
                                      ((""
                                        (rewrite "sqr_i")
                                        ((""
                                          (inst -1 "inv(a_q)" "j" "j")
                                          ((""
                                            (replaces -1)
                                            ((""
                                              (rewrite "sqr_j")
                                              ((""
                                                (rewrite
                                                 "quat_negative_times")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((q_assoc formula-decl nil quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (j const-decl "quat" quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (inv const-decl "quat" quaternions_def nil)
    (quat_times_negative formula-decl nil quaternions nil)
    (sqr_j formula-decl nil quaternions_def nil)
    (sqr_i formula-decl nil quaternions_def nil)
    (a_q const-decl "quat" quaternions_def nil)
    (b_q const-decl "quat" quaternions_def nil)
    (quat_negative_times formula-decl nil quaternions nil)
    (ji_prod_lem formula-decl nil quaternions nil)
    (TRUE const-decl "bool" booleans nil)
    (associative? const-decl "bool" operator_defs nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (ij_is_k formula-decl nil quaternions_def nil))
   SHOSTAK))
 (ki_prod 0
  (ki_prod-1 nil 3885477913
   ("" (rewrite "ij_is_k" :dir rl)
    (("" (lemma "q_assoc")
      (("" (expand "associative?")
        (("" (inst-cp -1 "i" "j" "i")
          (("" (replaces -2)
            (("" (rewrite "ji_prod_lem")
              (("" (rewrite "quat_negative_times" :dir rl)
                (("" (inst -1 "i" "inv(i)" "j")
                  (("" (replace -1 1 rl)
                    (("" (rewrite "quat_times_negative")
                      (("" (rewrite "sqr_i") nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((q_assoc formula-decl nil quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (j const-decl "quat" quaternions_def nil)
    (ji_prod_lem formula-decl nil quaternions nil)
    (inv const-decl "quat" quaternions_def nil)
    (quat_times_negative formula-decl nil quaternions nil)
    (sqr_i formula-decl nil quaternions_def nil)
    (quat_negative_times formula-decl nil quaternions nil)
    (TRUE const-decl "bool" booleans nil)
    (associative? const-decl "bool" operator_defs nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (ij_is_k formula-decl nil quaternions_def nil))
   SHOSTAK))
 (kj_prod 0
  (kj_prod-1 nil 3885477914
   ("" (lemma "q_inv_inv")
    (("" (inst -1 "k")
      (("" (replace -1 1 rl)
        (("" (rewrite "ji_prod" :dir rl)
          (("" (rewrite "inv_charac")
            (("" (rewrite "sc_quat_assoc" :dir rl)
              (("" (lemma "q_assoc")
                (("" (expand "associative?")
                  (("" (inst -1 "j" "i" "j")
                    (("" (replaces -1)
                      (("" (hide -1)
                        (("" (lemma "q_inv_inv")
                          (("" (inst -1 "i*j")
                            (("" (replace -1 1 rl)
                              ((""
                                (hide -1)
                                ((""
                                  (rewrite "ji_prod_lem" :dir rl)
                                  ((""
                                    (rewrite "inv_charac")
                                    ((""
                                      (rewrite "sc_comm" :dir rl)
                                      ((""
                                        (rewrite
                                         "sc_quat_assoc"
                                         :dir
                                         rl)
                                        ((""
                                          (lemma "q_assoc")
                                          ((""
                                            (expand "associative?")
                                            ((""
                                              (inst -1 "j" "j" "i")
                                              ((""
                                                (replace -1 1 rl)
                                                ((""
                                                  (rewrite "sqr_j")
                                                  ((""
                                                    (rewrite
                                                     "inv_charac"
                                                     :dir
                                                     rl)
                                                    ((""
                                                      (rewrite
                                                       "inv_charac"
                                                       :dir
                                                       rl)
                                                      ((""
                                                        (rewrite
                                                         "q_inv_inv")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (k const-decl "quat" quaternions_def nil)
    (ji_prod formula-decl nil quaternions_def nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (associative? const-decl "bool" operator_defs nil)
    (TRUE const-decl "bool" booleans nil)
    (ji_prod_lem formula-decl nil quaternions nil)
    (sc_comm formula-decl nil quaternions_def nil)
    (sqr_j formula-decl nil quaternions_def nil)
    (inv const-decl "quat" quaternions_def nil)
    (b_q const-decl "quat" quaternions_def nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (j const-decl "quat" quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (inv_charac formula-decl nil quaternions nil)
    (q_inv_inv formula-decl nil quaternions nil))
   SHOSTAK))
 (ik_prod 0
  (ik_prod-1 nil 3885477916
   ("" (rewrite "ij_is_k" :dir rl)
    (("" (lemma "q_assoc")
      (("" (expand "associative?")
        (("" (inst -1 "i" "i" "j")
          (("" (replace -1 1 rl) (("" (rewrite "sqr_i") nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((q_assoc formula-decl nil quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (j const-decl "quat" quaternions_def nil)
    (sqr_i formula-decl nil quaternions_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (ij_is_k formula-decl nil quaternions_def nil))
   SHOSTAK))
 (jk_prod 0
  (jk_prod-1 nil 3885477916
   ("" (rewrite "ij_is_k" :dir rl)
    (("" (lemma "q_inv_inv")
      (("" (inst -1 "i*j")
        (("" (replace -1 1 rl)
          (("" (rewrite "ji_prod_lem" :dir rl)
            (("" (rewrite "quat_negative_times")
              (("" (hide -1)
                (("" (rewrite "inv_charac")
                  (("" (rewrite "sc_comm" :dir rl)
                    (("" (rewrite "sc_quat_assoc" :dir rl)
                      (("" (lemma "q_assoc")
                        (("" (expand "associative?")
                          (("" (inst -1 "j" "j" "i")
                            (("" (replace -1 1 rl)
                              ((""
                                (rewrite "sqr_j")
                                ((""
                                  (rewrite "inv_charac" :dir rl)
                                  nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((q_inv_inv formula-decl nil quaternions nil)
    (b_q const-decl "quat" quaternions_def nil)
    (quat_negative_times formula-decl nil quaternions nil)
    (inv_charac formula-decl nil quaternions nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (sqr_j formula-decl nil quaternions_def nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (sc_comm formula-decl nil quaternions_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (ji_prod_lem formula-decl nil quaternions nil)
    (j const-decl "quat" quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (ij_is_k formula-decl nil quaternions_def nil))
   SHOSTAK))
 (basis_quat 0
  (basis_quat-1 nil 3885477918
   ("" (skeep)
    (("" (expand* *)
      (("" (expand* +)
        (("" (expand "one_q")
          (("" (expand "i")
            (("" (expand "j")
              (("" (expand "k") (("" (decompose-equality) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((* const-decl "quat" quaternions_def nil)
    (one_q const-decl "quat" quaternions_def nil)
    (j const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (times_one formula-decl nil ring_with_one nil)
    (zero_plus formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (k const-decl "quat" quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (+ const-decl "quat" quaternions_def nil))
   SHOSTAK))
 (zero_q_plus 0
  (zero_q_plus-1 nil 3885477919
   ("" (skeep)
    (("" (expand +)
      (("" (decompose-equality)
        (("1" (grind) nil nil) ("2" (grind) nil nil)
         ("3" (grind) nil nil) ("4" (grind) nil nil))
        nil))
      nil))
    nil)
   ((+ const-decl "quat" quaternions_def nil)
    (zero_plus formula-decl nil ring nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (zero_q const-decl "quat" quaternions_def nil))
   SHOSTAK))
 (plus_zero_q 0
  (plus_zero_q-1 nil 3885477920
   ("" (skeep)
    (("" (expand +)
      (("" (decompose-equality)
        (("1" (grind) nil nil) ("2" (grind) nil nil)
         ("3" (grind) nil nil) ("4" (grind) nil nil))
        nil))
      nil))
    nil)
   ((+ const-decl "quat" quaternions_def nil)
    (plus_zero formula-decl nil ring nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (zero_q const-decl "quat" quaternions_def nil))
   SHOSTAK))
 (q_is_zero_iff_conj 0
  (q_is_zero_iff_conj-1 nil 3885477921
   ("" (skeep)
    (("" (prop)
      (("1" (grind) nil nil)
       ("2" (grind)
        (("2" (lemma "negate_negate")
          (("2" (inst-cp -1 "q`y")
            (("2" (inst-cp -1 "q`z")
              (("2" (inst -1 "q`t")
                (("2" (replaces -5)
                  (("2" (replaces -5)
                    (("2" (replaces -5)
                      (("2" (rewrite* "negate_zero")
                        (("2" (decompose-equality) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((negate_zero formula-decl nil ring nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (negate_negate formula-decl nil ring nil)
    (TRUE const-decl "bool" booleans nil)
    (quat type-eq-decl nil quaternions_def nil))
   SHOSTAK))
 (sc_one_q 0
  (sc_one_q-1 nil 3885477922
   ("" (skeep)
    (("" (expand* "*" "one_q")
      (("" (rewrite "times_zero[T,+,*,zero]")
        (("" (rewrite "times_one[T,+,*,zero,one]") nil nil)) nil))
      nil))
    nil)
   ((one_q const-decl "quat" quaternions_def nil)
    (* const-decl "quat" quaternions_def nil)
    (one formal-const-decl "T" quaternions nil)
    (times_one formula-decl nil ring_with_one nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (times_zero formula-decl nil ring nil))
   SHOSTAK))
 (sc_one_quat 0
  (sc_one_quat-1 nil 3885477922
   ("" (skeep)
    (("" (rewrite "sc_quat_assoc" :dir rl)
      (("" (rewrite "one_q_times") nil nil)) nil))
    nil)
   ((sc_quat_assoc formula-decl nil quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (one_q const-decl "quat" quaternions_def nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (one_q_times formula-decl nil quaternions_def nil))
   SHOSTAK))
 (q_prod_charac 0
  (q_prod_charac-1 nil 3885477923
   ("" (skeep)
    (("" (name-replace "A" "u")
      (("" (name-replace "B" "v")
        (("" (expand "A" 1 1)
          (("" (expand "B" 1 1)
            (("" (lemma "basis_quat")
              (("" (inst-cp -1 "u")
                (("" (inst -1 "v")
                  (("" (replaces -1)
                    (("" (replaces -1)
                      (("" (lemma "sqr_i")
                        (("" (lemma "sqr_j")
                          (("" (lemma "ji_prod")
                            (("" (lemma "q_distr")
                              ((""
                                (lemma "q_assoc")
                                ((""
                                  (expand* "A" "B")
                                  ((""
                                    (expand "distributive?")
                                    ((""
                                      (inst-cp
                                       -2
                                       "u`x * one_q + u`y * i + u`z * j + u`t * k"
                                       "v`x * one_q + v`y * i + v`z * j"
                                       "v`t * k")
                                      ((""
                                        (replaces -3)
                                        ((""
                                          (inst-cp
                                           -2
                                           "u`x * one_q + u`y * i + u`z * j + u`t * k"
                                           "v`x * one_q + v`y * i"
                                           "v`z * j")
                                          ((""
                                            (replaces -3)
                                            ((""
                                              (inst
                                               -2
                                               "u`x * one_q + u`y * i + u`z * j + u`t * k"
                                               "v`x * one_q"
                                               "v`y * i")
                                              ((""
                                                (replaces -2)
                                                ((""
                                                  (lemma "q_distrl")
                                                  ((""
                                                    (inst-cp
                                                     -1
                                                     "u`x * one_q + u`y * i + u`z * j"
                                                     "u`t * k"
                                                     "v`x * one_q")
                                                    ((""
                                                      (replaces -2)
                                                      ((""
                                                        (inst-cp
                                                         -1
                                                         "u`x * one_q + u`y * i"
                                                         "u`z * j"
                                                         "v`x * one_q")
                                                        ((""
                                                          (replaces -2)
                                                          ((""
                                                            (inst-cp
                                                             -1
                                                             "u`x * one_q"
                                                             "u`y * i"
                                                             "v`x * one_q")
                                                            ((""
                                                              (replaces
                                                               -2)
                                                              ((""
                                                                (inst-cp
                                                                 -1
                                                                 "u`x * one_q + u`y * i + u`z * j"
                                                                 "u`t * k"
                                                                 "v`y * i")
                                                                ((""
                                                                  (replaces
                                                                   -2)
                                                                  ((""
                                                                    (inst-cp
                                                                     -1
                                                                     "u`x * one_q + u`y * i"
                                                                     " u`z * j"
                                                                     "v`y * i")
                                                                    ((""
                                                                      (replaces
                                                                       -2)
                                                                      ((""
                                                                        (inst-cp
                                                                         -1
                                                                         "u`x * one_q"
                                                                         "u`y * i"
                                                                         "v`y * i")
                                                                        ((""
                                                                          (replaces
                                                                           -2)
                                                                          ((""
                                                                            (inst-cp
                                                                             -1
                                                                             "u`x * one_q + u`y * i + u`z * j"
                                                                             "u`t * k"
                                                                             "v`z * j")
                                                                            ((""
                                                                              (replaces
                                                                               -2)
                                                                              ((""
                                                                                (inst-cp
                                                                                 -1
                                                                                 "u`x * one_q + u`y * i"
                                                                                 "u`z * j"
                                                                                 "v`z * j")
                                                                                ((""
                                                                                  (replaces
                                                                                   -2)
                                                                                  ((""
                                                                                    (inst-cp
                                                                                     -1
                                                                                     "u`x * one_q"
                                                                                     "u`y * i"
                                                                                     "v`z * j")
                                                                                    ((""
                                                                                      (replaces
                                                                                       -2)
                                                                                      ((""
                                                                                        (inst-cp
                                                                                         -1
                                                                                         "u`x * one_q + u`y * i + u`z * j "
                                                                                         "u`t * k"
                                                                                         "v`t * k")
                                                                                        ((""
                                                                                          (replaces
                                                                                           -2)
                                                                                          ((""
                                                                                            (inst-cp
                                                                                             -1
                                                                                             "u`x * one_q + u`y * i"
                                                                                             " u`z * j "
                                                                                             "v`t * k")
                                                                                            ((""
                                                                                              (replaces
                                                                                               -2)
                                                                                              ((""
                                                                                                (inst-cp
                                                                                                 -1
                                                                                                 "u`x * one_q"
                                                                                                 "u`y * i"
                                                                                                 "v`t * k")
                                                                                                ((""
                                                                                                  (replaces
                                                                                                   -2)
                                                                                                  ((""
                                                                                                    (rewrite
                                                                                                     "sc_quat")
                                                                                                    ((""
                                                                                                      (rewrite
                                                                                                       "one_q_times")
                                                                                                      ((""
                                                                                                        (rewrite
                                                                                                         "sc_quat")
                                                                                                        ((""
                                                                                                          (rewrite
                                                                                                           "times_one_q")
                                                                                                          ((""
                                                                                                            (rewrite
                                                                                                             "sc_quat")
                                                                                                            ((""
                                                                                                              (rewrite
                                                                                                               "times_one_q")
                                                                                                              ((""
                                                                                                                (rewrite
                                                                                                                 "sc_quat")
                                                                                                                ((""
                                                                                                                  (rewrite
                                                                                                                   "times_one_q")
                                                                                                                  ((""
                                                                                                                    (rewrite
                                                                                                                     "sc_quat")
                                                                                                                    ((""
                                                                                                                      (rewrite
                                                                                                                       "one_q_times")
                                                                                                                      ((""
                                                                                                                        (rewrite*
                                                                                                                         "sc_quat")
                                                                                                                        ((""
                                                                                                                          (rewrite*
                                                                                                                           "one_q_times")
                                                                                                                          ((""
                                                                                                                            (rewrite
                                                                                                                             "sqr_i")
                                                                                                                            ((""
                                                                                                                              (rewrite
                                                                                                                               "sqr_j")
                                                                                                                              ((""
                                                                                                                                (rewrite
                                                                                                                                 "ji_prod")
                                                                                                                                ((""
                                                                                                                                  (rewrite
                                                                                                                                   "ki_prod")
                                                                                                                                  ((""
                                                                                                                                    (rewrite
                                                                                                                                     "kj_prod")
                                                                                                                                    ((""
                                                                                                                                      (rewrite
                                                                                                                                       "ij_is_k")
                                                                                                                                      ((""
                                                                                                                                        (rewrite
                                                                                                                                         "ik_prod")
                                                                                                                                        ((""
                                                                                                                                          (rewrite
                                                                                                                                           "jk_prod")
                                                                                                                                          ((""
                                                                                                                                            (rewrite
                                                                                                                                             "kk_prod")
                                                                                                                                            ((""
                                                                                                                                              (lemma
                                                                                                                                               "sc_one_quat")
                                                                                                                                              ((""
                                                                                                                                                (lemma
                                                                                                                                                 "sc_one_q")
                                                                                                                                                ((""
                                                                                                                                                  (rewrite*
                                                                                                                                                   "inv_charac")
                                                                                                                                                  ((""
                                                                                                                                                    (inst-cp
                                                                                                                                                     -1
                                                                                                                                                     "a")
                                                                                                                                                    ((""
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "b")
                                                                                                                                                      ((""
                                                                                                                                                        (case-replace
                                                                                                                                                         "a_q = a * one_q")
                                                                                                                                                        (("1"
                                                                                                                                                          (case-replace
                                                                                                                                                           "b_q = b *one_q")
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "sc_quat_assoc")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst-cp
                                                                                                                                                               -1
                                                                                                                                                               "a"
                                                                                                                                                               "one_q"
                                                                                                                                                               "j")
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "sc_assoc")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst-cp
                                                                                                                                                                   -1
                                                                                                                                                                   "inv(one)"
                                                                                                                                                                   "a"
                                                                                                                                                                   "one_q")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -2
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst-cp
                                                                                                                                                                       -3
                                                                                                                                                                       "inv(one)*a"
                                                                                                                                                                       "one_q"
                                                                                                                                                                       "j")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -4
                                                                                                                                                                         1
                                                                                                                                                                         rl)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "one_q_times")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide
                                                                                                                                                                             -4)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst-cp
                                                                                                                                                                               -3
                                                                                                                                                                               "(inv(one) * a)"
                                                                                                                                                                               "one_q"
                                                                                                                                                                               "(b * one_q)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -4
                                                                                                                                                                                 1
                                                                                                                                                                                 rl)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   -4)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "one_q_times")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                       -3
                                                                                                                                                                                       "b"
                                                                                                                                                                                       "one_q"
                                                                                                                                                                                       "i")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -4
                                                                                                                                                                                         1
                                                                                                                                                                                         rl)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (hide
                                                                                                                                                                                           -4)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "one_q_times")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst-cp
                                                                                                                                                                                               -3
                                                                                                                                                                                               "a"
                                                                                                                                                                                               "one_q"
                                                                                                                                                                                               "j")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -4
                                                                                                                                                                                                 1
                                                                                                                                                                                                 rl)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   -4)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "one_q_times")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       "inv(one)"
                                                                                                                                                                                                       "b"
                                                                                                                                                                                                       "one_q")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -2
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst-cp
                                                                                                                                                                                                           -4
                                                                                                                                                                                                           "(inv(one) * b)"
                                                                                                                                                                                                           "one_q"
                                                                                                                                                                                                           "i")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -5
                                                                                                                                                                                                             1
                                                                                                                                                                                                             rl)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (hide
                                                                                                                                                                                                               -5)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                 "one_q_times")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                   "(inv(one) * a)"
                                                                                                                                                                                                                   "b"
                                                                                                                                                                                                                   "one_q")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                                       -1
                                                                                                                                                                                                                       "(u`y * v`y)"
                                                                                                                                                                                                                       "a"
                                                                                                                                                                                                                       "one_q")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (replaces
                                                                                                                                                                                                                         -2)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst-cp
                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                           "(u`z * v`y)"
                                                                                                                                                                                                                           "inv(one)"
                                                                                                                                                                                                                           "k")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (replaces
                                                                                                                                                                                                                             -2)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst-cp
                                                                                                                                                                                                                               -1
                                                                                                                                                                                                                               "(u`t * v`y)"
                                                                                                                                                                                                                               "inv(one)*a"
                                                                                                                                                                                                                               "j")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (replaces
                                                                                                                                                                                                                                 -2)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                                   "(u`z * v`z)"
                                                                                                                                                                                                                                   "b"
                                                                                                                                                                                                                                   "one_q")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                                                       -1
                                                                                                                                                                                                                                       "(u`t * v`z)"
                                                                                                                                                                                                                                       "b"
                                                                                                                                                                                                                                       "i")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (replaces
                                                                                                                                                                                                                                         -2)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (inst-cp
                                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                                           "(u`y * v`t)"
                                                                                                                                                                                                                                           "a"
                                                                                                                                                                                                                                           "j")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (replaces
                                                                                                                                                                                                                                             -2)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (inst-cp
                                                                                                                                                                                                                                               -1
                                                                                                                                                                                                                                               "(u`z * v`t)"
                                                                                                                                                                                                                                               "(inv(one) * b)"
                                                                                                                                                                                                                                               "i")
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (replaces
                                                                                                                                                                                                                                                 -2)
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                                                   "(u`t * v`t)"
                                                                                                                                                                                                                                                   "((inv(one) * a) * b)"
                                                                                                                                                                                                                                                   "one_q")
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (expand*
                                                                                                                                                                                                                                                       "one_q"
                                                                                                                                                                                                                                                       "i"
                                                                                                                                                                                                                                                       "j"
                                                                                                                                                                                                                                                       "k")
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (decompose-equality)
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                             -)
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                                                                               "plus_commutative[T,+,*,zero]")
                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                (inst-cp
                                                                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                                                                 "(u`t * v`x) + inv((u`z * v`y)) + (u`y * v`z)"
                                                                                                                                                                                                                                                                 "(u`x * v`t)")
                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                    (inst-cp
                                                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                                                     "(u`t * v`x) + inv((u`z * v`y))"
                                                                                                                                                                                                                                                                     "(u`y * v`z)")
                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                                                                                       -2)
                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                                                                         "(u`t * v`x)"
                                                                                                                                                                                                                                                                         "inv((u`z * v`y))")
                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                          (replaces
                                                                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                                                                             "plus_associative[T,+,*,zero]")
                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                                                                                               "plus_associative[T,+,*,zero]")
                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                                                                                 "plus_associative[T,+,*,zero]")
                                                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                             -)
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                                                                               "times_commutative[T,+,*,zero]")
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (inst-cp
                                                                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                                                                 "(u`t * v`y)"
                                                                                                                                                                                                                                                                 "inv(a)")
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                                                     "(u`y * v`t)"
                                                                                                                                                                                                                                                                     "a")
                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                                                                         "times_associative")
                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                                                                           "times_associative")
                                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                                                                             "plus_commutative")
                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                                                                                               "plus_associative")
                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                (lemma
                                                                                                                                                                                                                                                                                 "plus_commutative[T,+,*,zero]")
                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                                                                                   "u`x * v`z + u`z * v`x + a * (u`y * v`t)"
                                                                                                                                                                                                                                                                                   "inv(a) * (u`t * v`y)")
                                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                                                                                       -1
                                                                                                                                                                                                                                                                                       "(u`z * v`x)"
                                                                                                                                                                                                                                                                                       "(u`x * v`z)")
                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                         rl)
                                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                                                                                           "plus_associative")
                                                                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                                           ("3"
                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                             -)
                                                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                                                                               "times_commutative")
                                                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                                                (inst-cp
                                                                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                                                                 "(u`t * v`z)"
                                                                                                                                                                                                                                                                 "b")
                                                                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                                                     "(u`z * v`t)"
                                                                                                                                                                                                                                                                     "inv(b)")
                                                                                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                                                                         "times_associative")
                                                                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                                                                           "times_associative")
                                                                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                                                                             "plus_commutative[T,+,*,zero]")
                                                                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                                                                                               "plus_associative")
                                                                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                                                                                 "(u`x * v`y) + (u`y * v`x)"
                                                                                                                                                                                                                                                                                 "b * (u`t * v`z)"
                                                                                                                                                                                                                                                                                 "inv(b) * (u`z * v`t)")
                                                                                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                                                                                                   -1)
                                                                                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                                                                                     "plus_commutative[T,+,*,zero]")
                                                                                                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                                                                                       -1
                                                                                                                                                                                                                                                                                       "b * (u`t * v`z)"
                                                                                                                                                                                                                                                                                       "inv(b) * (u`z * v`t)")
                                                                                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                                                                                        (replaces
                                                                                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                                                                                           "plus_associative")
                                                                                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                                                                                             "plus_associative")
                                                                                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                                                                                                               "plus_associative")
                                                                                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                                                                                                 "plus_associative")
                                                                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                                           ("4"
                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                             -)
                                                                                                                                                                                                                                                            (("4"
                                                                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                                                                               "plus_associative")
                                                                                                                                                                                                                                                              (("4"
                                                                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                                                                 "plus_associative")
                                                                                                                                                                                                                                                                (("4"
                                                                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                                                                   "plus_associative")
                                                                                                                                                                                                                                                                  (("4"
                                                                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                                                                     "plus_associative")
                                                                                                                                                                                                                                                                    (("4"
                                                                                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                                                                                       "times_associative")
                                                                                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                                                                         "(u`t * v`t)"
                                                                                                                                                                                                                                                                         "inv(a)"
                                                                                                                                                                                                                                                                         "b")
                                                                                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                                                                           1
                                                                                                                                                                                                                                                                           rl)
                                                                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "b_q")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "a_q")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (A skolem-const-decl "quat[T, +, *, zero, one, a, b]" quaternions
     nil)
    (basis_quat formula-decl nil quaternions nil)
    (sqr_j formula-decl nil quaternions_def nil)
    (q_distr formula-decl nil quaternions_def nil)
    (k const-decl "quat" quaternions_def nil)
    (j const-decl "quat" quaternions_def nil)
    (i const-decl "quat" quaternions_def nil)
    (one_q const-decl "quat" quaternions_def nil)
    (* const-decl "quat" quaternions_def nil)
    (+ const-decl "quat" quaternions_def nil)
    (q_distrl formula-decl nil quaternions_def nil)
    (one_q_times formula-decl nil quaternions_def nil)
    (times_one_q formula-decl nil quaternions_def nil)
    (ki_prod formula-decl nil quaternions nil)
    (ij_is_k formula-decl nil quaternions_def nil)
    (jk_prod formula-decl nil quaternions nil)
    (sc_one_quat formula-decl nil quaternions nil)
    (inv_charac formula-decl nil quaternions nil)
    (a_q const-decl "quat" quaternions_def nil)
    (b_q const-decl "quat" quaternions_def nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (times_minus_one formula-decl nil ring_with_one nil)
    (zero_plus formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (associative? const-decl "bool" operator_defs nil)
    (negate_zero formula-decl nil ring nil)
    (minus_one_times formula-decl nil ring_with_one nil)
    (times_zero formula-decl nil ring nil)
    (times_one formula-decl nil ring_with_one nil)
    (zero_times formula-decl nil ring nil)
    (plus_commutative formula-decl nil ring nil)
    (plus_associative formula-decl nil ring nil)
    (times_commutative formula-decl nil commutative_ring nil)
    (times_associative formula-decl nil ring nil)
    (sc_assoc formula-decl nil quaternions_def nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (sc_one_q formula-decl nil quaternions nil)
    (kk_prod formula-decl nil quaternions nil)
    (ik_prod formula-decl nil quaternions nil)
    (kj_prod formula-decl nil quaternions nil)
    (sc_quat formula-decl nil quaternions nil)
    (distributive? const-decl "bool" operator_defs nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (ji_prod formula-decl nil quaternions_def nil)
    (sqr_i formula-decl nil quaternions_def nil)
    (TRUE const-decl "bool" booleans nil)
    (B skolem-const-decl "quat[T, +, *, zero, one, a, b]" quaternions
     nil))
   SHOSTAK))
 (zero_q_times 0
  (zero_q_times-1 nil 3885478002
   ("" (skeep)
    (("" (rewrite "q_prod_charac") (("" (grind) nil nil)) nil)) nil)
   ((q_prod_charac formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (zero_times formula-decl nil ring nil)
    (zero_plus formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (negate_zero formula-decl nil ring nil))
   SHOSTAK))
 (times_zero_q 0
  (times_zero_q-1 nil 3885478003
   ("" (skeep)
    (("" (rewrite "q_prod_charac") (("" (grind) nil nil)) nil)) nil)
   ((q_prod_charac formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (times_zero formula-decl nil ring nil)
    (zero_times formula-decl nil ring nil)
    (zero_plus formula-decl nil ring nil)
    (negate_zero formula-decl nil ring nil))
   SHOSTAK))
 (quat_is_ring_w_one 0
  (quat_is_ring_w_one-1 nil 3885478003
   ("" (lemma "fullset_is_field")
    (("" (expand "field?")
      (("" (expand "division_ring?")
        (("" (flatten)
          (("" (hide (-2 -3))
            (("" (expand "ring_with_one?")
              (("" (flatten)
                (("" (split)
                  (("1" (hide -2)
                    (("1" (expand "ring?")
                      (("1" (flatten)
                        (("1" (split)
                          (("1" (hide-all-but (-1 1))
                            (("1" (expand "abelian_group?")
                              (("1"
                                (expand "group?")
                                (("1"
                                  (expand "monoid?")
                                  (("1"
                                    (expand "monad?")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (split)
                                        (("1"
                                          (hide-all-but (-1 1))
                                          (("1" (grind) nil nil))
                                          nil)
                                         ("2"
                                          (hide-all-but (-2 1))
                                          (("2" (grind) nil nil))
                                          nil)
                                         ("3"
                                          (hide-all-but 1)
                                          (("3"
                                            (expand "identity?")
                                            (("3"
                                              (skeep)
                                              (("3"
                                                (expand "restrict")
                                                (("3"
                                                  (split)
                                                  (("1"
                                                    (rewrite
                                                     "plus_zero_q")
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (rewrite
                                                     "zero_q_plus")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (hide-all-but (-4 1))
                                          (("4"
                                            (expand "associative?")
                                            (("4"
                                              (expand "restrict")
                                              (("4"
                                                (skeep)
                                                (("4"
                                                  (expand "+")
                                                  (("4"
                                                    (split)
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (expand
                                                         "fullset")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "fullset")
                                                        (("3"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst?)
                                                      (("1"
                                                        (expand
                                                         "fullset")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "fullset")
                                                        (("3"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (inst?)
                                                      (("1"
                                                        (expand
                                                         "fullset")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "fullset")
                                                        (("3"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (inst?)
                                                      (("1"
                                                        (expand
                                                         "fullset")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "fullset")
                                                        (("3"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (hide-all-but (-5 1))
                                          (("5"
                                            (expand "inv_exists?")
                                            (("5"
                                              (skeep)
                                              (("5"
                                                (typepred "x")
                                                (("5"
                                                  (hide -1)
                                                  (("5"
                                                    (inst-cp -1 "x`x")
                                                    (("1"
                                                      (inst-cp
                                                       -1
                                                       "x`y")
                                                      (("1"
                                                        (inst-cp
                                                         -1
                                                         "x`z")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "x`t")
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (inst
                                                               1
                                                               "(y!4, y!3, y!2, y!1)")
                                                              (("1"
                                                                (expand
                                                                 "+")
                                                                (("1"
                                                                  (expand
                                                                   "zero_q")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 -)
                                                                (("2"
                                                                  (expand
                                                                   "fullset")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "fullset")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "fullset")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "fullset")
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("6"
                                          (hide-all-but (-6 1))
                                          (("6"
                                            (expand "commutative?")
                                            (("6"
                                              (expand "restrict")
                                              (("6"
                                                (skeep)
                                                (("6"
                                                  (expand "+")
                                                  (("6"
                                                    (split)
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (expand
                                                         "fullset")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst?)
                                                      (("1"
                                                        (expand
                                                         "fullset")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (inst?)
                                                      (("1"
                                                        (expand
                                                         "fullset")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (inst?)
                                                      (("1"
                                                        (expand
                                                         "fullset")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "fullset")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but (-2 1))
                            (("2" (expand "star_closed?")
                              (("2"
                                (skeep)
                                (("2"
                                  (expand "member")
                                  (("2"
                                    (expand "fullset")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (hide -)
                            (("3" (lemma "q_assoc")
                              (("3"
                                (expand "associative?")
                                (("3"
                                  (expand "restrict")
                                  (("3"
                                    (skeep)
                                    (("3" (inst?) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("4" (hide -)
                            (("4" (expand "left_distributive?")
                              (("4"
                                (expand "restrict")
                                (("4"
                                  (skeep)
                                  (("4" (rewrite "q_distrl") nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("5" (hide -)
                            (("5" (expand "right_distributive?")
                              (("5"
                                (expand "restrict")
                                (("5"
                                  (skeep)
                                  (("5"
                                    (lemma "q_distr")
                                    (("5"
                                      (expand "distributive?")
                                      (("5" (inst?) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide -1)
                    (("2" (expand "monoid?")
                      (("2" (flatten)
                        (("2" (split)
                          (("1" (hide -2)
                            (("1" (expand "monad?")
                              (("1"
                                (flatten)
                                (("1"
                                  (split)
                                  (("1"
                                    (hide (-2 -3))
                                    (("1"
                                      (expand "star_closed?")
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (expand "fullset")
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide (-1 -3))
                                    (("2"
                                      (expand "member")
                                      (("2"
                                        (expand "fullset")
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (hide -)
                                    (("3"
                                      (expand "identity?")
                                      (("3"
                                        (expand "restrict")
                                        (("3"
                                          (skeep)
                                          (("3"
                                            (split)
                                            (("1"
                                              (rewrite "times_one_q")
                                              nil
                                              nil)
                                             ("2"
                                              (rewrite "one_q_times")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide -)
                            (("2" (lemma "q_assoc")
                              (("2"
                                (expand "associative?")
                                (("2"
                                  (expand "restrict")
                                  (("2"
                                    (skeep)
                                    (("2" (inst?) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((field? const-decl "bool" field_def nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (ring? const-decl "bool" ring_def nil)
    (abelian_group? const-decl "bool" group_def nil)
    (monoid? const-decl "bool" monoid_def nil)
    (x skolem-const-decl "(fullset[quat[T, +, *, zero, one, a, b]])"
     quaternions nil)
    (y skolem-const-decl "(fullset[quat[T, +, *, zero, one, a, b]])"
     quaternions nil)
    (commutative? const-decl "bool" operator_defs nil)
    (y!4 skolem-const-decl "(fullset[T])" quaternions nil)
    (y!3 skolem-const-decl "(fullset[T])" quaternions nil)
    (y!2 skolem-const-decl "(fullset[T])" quaternions nil)
    (y!1 skolem-const-decl "(fullset[T])" quaternions nil)
    (x skolem-const-decl "(fullset[quat[T, +, *, zero, one, a, b]])"
     quaternions nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (inv_exists? const-decl "bool" group_def nil)
    (x skolem-const-decl "(fullset[quat[T, +, *, zero, one, a, b]])"
     quaternions nil)
    (y skolem-const-decl "(fullset[quat[T, +, *, zero, one, a, b]])"
     quaternions nil)
    (z skolem-const-decl "(fullset[quat[T, +, *, zero, one, a, b]])"
     quaternions nil)
    (associative? const-decl "bool" operator_defs nil)
    (quat type-eq-decl nil quaternions_def nil)
    (plus_zero_q formula-decl nil quaternions nil)
    (zero_q_plus formula-decl nil quaternions nil)
    (restrict const-decl "R" restrict nil)
    (identity? const-decl "bool" operator_defs nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ const-decl "quat" quaternions_def nil)
    (member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (monad? const-decl "bool" monad_def nil)
    (group? const-decl "bool" group_def nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (left_distributive? const-decl "bool" operator_defs_more nil)
    (q_distrl formula-decl nil quaternions_def nil)
    (right_distributive? const-decl "bool" operator_defs_more nil)
    (distributive? const-decl "bool" operator_defs nil)
    (q_distr formula-decl nil quaternions_def nil)
    (one_q_times formula-decl nil quaternions_def nil)
    (times_one_q formula-decl nil quaternions_def nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (fullset_is_field formula-decl nil quaternions nil))
   SHOSTAK))
 (quat_x_pure_part_commutes 0
  (quat_x_pure_part_commutes-1 nil 3885478012
   ("" (skeep)
    (("" (name-replace "pp" "pure_part(q)")
      (("" (case "q = q`x * one_q + pure_part(q)")
        (("1" (replaces -1)
          (("1" (rewrite "q_distrl")
            (("1" (lemma "q_distr")
              (("1" (expand "distributive?")
                (("1" (inst?)
                  (("1" (replaces -1)
                    (("1" (lemma "sc_comm")
                      (("1" (inst -1 "q`x" "pp" "one_q")
                        (("1" (replace -1 1 rl)
                          (("1" (lemma "sc_quat_assoc")
                            (("1" (inst?)
                              (("1"
                                (replace -1 1 rl)
                                (("1"
                                  (rewrite times_one_q)
                                  (("1"
                                    (hide -)
                                    (("1"
                                      (rewrite sc_quat_assoc :dir rl)
                                      (("1"
                                        (rewrite "one_q_times")
                                        (("1"
                                          (expand "pp")
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (grind) (("2" (decompose-equality) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (pure_part const-decl "quat" quaternions_def nil)
    (zero_plus formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (times_one formula-decl nil ring_with_one nil)
    (TRUE const-decl "bool" booleans nil)
    (q_distr formula-decl nil quaternions_def nil)
    (sc_comm formula-decl nil quaternions_def nil)
    (times_one_q formula-decl nil quaternions_def nil)
    (pp skolem-const-decl "quat[T, +, *, zero, one, a, b]" quaternions
        nil)
    (one_q_times formula-decl nil quaternions_def nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (distributive? const-decl "bool" operator_defs nil)
    (q_distrl formula-decl nil quaternions_def nil)
    (+ const-decl "quat" quaternions_def nil)
    (* const-decl "quat" quaternions_def nil)
    (one_q const-decl "quat" quaternions_def nil))
   SHOSTAK))
 (pure_quat_charac 0
  (pure_quat_charac-1 nil 3885478014
   ("" (skeep)
    (("" (hide 1)
      (("" (prop)
        (("1" (expand "member")
          (("1" (expand "scalar_F")
            (("1" (expand "pure_quat")
              (("1" (grind) (("1" (decompose-equality) nil nil)) nil))
              nil))
            nil))
          nil)
         ("2" (expand "member")
          (("2" (expand "pure_quat")
            (("2" (expand "scalar_F")
              (("2" (rewrite q_prod_charac)
                (("2" (grind)
                  (("1" (hide 2)
                    (("1" (lemma fullset_is_field)
                      (("1" (expand field?)
                        (("1" (flatten)
                          (("1" (hide -1)
                            (("1" (expand "commutative?")
                              (("1"
                                (expand "restrict")
                                (("1"
                                  (inst?)
                                  (("1"
                                    (replaces -1)
                                    (("1"
                                      (rewrite "negate_is_right_inv")
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (rewrite times_associative)
                      (("2" (lemma fullset_is_field)
                        (("2" (expand field?)
                          (("2" (flatten)
                            (("2" (hide -1)
                              (("2"
                                (expand "commutative?")
                                (("2"
                                  (expand "restrict")
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (replaces -1)
                                      (("2"
                                        (rewrite times_associative)
                                        (("2"
                                          (rewrite negative_times)
                                          (("2"
                                            (rewrite
                                             "negate_is_right_inv")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide 2)
                    (("3" (rewrite times_associative)
                      (("3" (lemma fullset_is_field)
                        (("3" (expand field?)
                          (("3" (flatten)
                            (("3" (hide -1)
                              (("3"
                                (expand "commutative?")
                                (("3"
                                  (expand "restrict")
                                  (("3"
                                    (inst?)
                                    (("3"
                                      (replaces -1)
                                      (("3"
                                        (rewrite negative_times)
                                        (("3"
                                          (rewrite times_associative)
                                          (("3"
                                            (rewrite
                                             negate_is_left_inv)
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (hide -2)
          (("3" (expand "member")
            (("3" (expand "scalar_F") (("3" (grind) nil nil)) nil))
            nil))
          nil)
         ("4" (expand "member")
          (("4" (expand "scalar_F")
            (("4" (expand "pure_quat")
              (("4" (case "(one + one) /= zero")
                (("1" (prop)
                  (("1" (hide (-2 -3))
                    (("1" (rewrite q_prod_charac)
                      (("1" (grind)
                        (("1" (rewrite negative_times)
                          (("1" (rewrite negative_times)
                            (("1" (rewrite times_associative)
                              (("1"
                                (rewrite times_associative)
                                (("1"
                                  (lemma fullset_is_field)
                                  (("1"
                                    (expand field?)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (expand "commutative?")
                                          (("1"
                                            (expand "restrict")
                                            (("1"
                                              (inst-cp -1 "q`z" "q`t")
                                              (("1"
                                                (replaces -2)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (rewrite
                                                       plus_associative)
                                                      (("1"
                                                        (rewrite
                                                         plus_associative)
                                                        (("1"
                                                          (rewrite
                                                           plus_associative)
                                                          (("1"
                                                            (lemma
                                                             "times_one[T,+,*,zero,one]")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "q`y * q`x")
                                                              (("1"
                                                                (replace
                                                                 -1
                                                                 -2
                                                                 rl)
                                                                (("1"
                                                                  (hide
                                                                   -1)
                                                                  (("1"
                                                                    (lemma
                                                                     "right_distributive[T,+,*,zero]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (replace
                                                                         -1
                                                                         -2
                                                                         rl)
                                                                        (("1"
                                                                          (hide
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "times_is_zero[T,+,*,zero]")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (prop)
                                                                                (("1"
                                                                                  (hide
                                                                                   (-1
                                                                                    -3))
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "times_is_zero[T,+,*,zero]")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide (-1 -3))
                    (("2" (rewrite q_prod_charac)
                      (("2" (grind)
                        (("2" (rewrite negative_times)
                          (("2" (rewrite negative_times)
                            (("2" (rewrite times_associative)
                              (("2"
                                (rewrite times_associative)
                                (("2"
                                  (lemma fullset_is_field)
                                  (("2"
                                    (expand field?)
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (expand "commutative?")
                                          (("2"
                                            (expand "restrict")
                                            (("2"
                                              (inst-cp -1 "q`y" "q`t")
                                              (("2"
                                                (replaces -2)
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (rewrite
                                                       plus_associative)
                                                      (("2"
                                                        (rewrite
                                                         plus_associative)
                                                        (("2"
                                                          (rewrite
                                                           plus_associative)
                                                          (("2"
                                                            (lemma
                                                             "times_one[T,+,*,zero,one]")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "q`z * q`x")
                                                              (("2"
                                                                (replace
                                                                 -1
                                                                 -2
                                                                 rl)
                                                                (("2"
                                                                  (hide
                                                                   -1)
                                                                  (("2"
                                                                    (lemma
                                                                     "right_distributive[T,+,*,zero]")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (replace
                                                                         -1
                                                                         -2
                                                                         rl)
                                                                        (("2"
                                                                          (hide
                                                                           -1)
                                                                          (("2"
                                                                            (lemma
                                                                             "times_is_zero[T,+,*,zero]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (prop)
                                                                                (("2"
                                                                                  (hide
                                                                                   (-1
                                                                                    -3))
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "times_is_zero[T,+,*,zero]")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide (-1 -2))
                    (("3" (rewrite q_prod_charac)
                      (("3" (grind)
                        (("3" (lemma fullset_is_field)
                          (("3" (expand field?)
                            (("3" (flatten)
                              (("3"
                                (hide -1)
                                (("3"
                                  (expand "commutative?")
                                  (("3"
                                    (expand "restrict")
                                    (("3"
                                      (inst-cp -1 "q`y" "q`z")
                                      (("3"
                                        (replaces -2)
                                        (("3"
                                          (inst?)
                                          (("3"
                                            (replaces -1)
                                            (("3"
                                              (rewrite
                                               plus_associative)
                                              (("3"
                                                (lemma
                                                 "times_one[T,+,*,zero,one]")
                                                (("3"
                                                  (inst -1 "q`t * q`x")
                                                  (("3"
                                                    (replace -1 -2 rl)
                                                    (("3"
                                                      (hide -1)
                                                      (("3"
                                                        (lemma
                                                         "right_distributive[T,+,*,zero]")
                                                        (("3"
                                                          (inst?)
                                                          (("3"
                                                            (replace
                                                             -1
                                                             -2
                                                             rl)
                                                            (("3"
                                                              (hide -1)
                                                              (("3"
                                                                (lemma
                                                                 "times_is_zero[T,+,*,zero]")
                                                                (("3"
                                                                  (inst?)
                                                                  (("3"
                                                                    (prop)
                                                                    (("3"
                                                                      (hide
                                                                       (-1
                                                                        -3))
                                                                      (("3"
                                                                        (lemma
                                                                         "times_is_zero[T,+,*,zero]")
                                                                        (("3"
                                                                          (inst?)
                                                                          (("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide (-1 2 3))
                  (("2" (prop)
                    (("2" (reveal 3)
                      (("2" (case "N(fullset[T])(2)")
                        (("1" (expand "charac")
                          (("1" (lift-if)
                            (("1" (prop)
                              (("1"
                                (expand "empty?")
                                (("1"
                                  (inst -1 2)
                                  (("1"
                                    (expand "member")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (lemma "min_def[posnat]")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (prop)
                                    (("2"
                                      (hide (2 3 4))
                                      (("2"
                                        (expand "minimum?")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (hide (-2 -3))
                                              (("2"
                                                (expand "N")
                                                (("2"
                                                  (case-replace
                                                   "x=1"
                                                   :hide?
                                                   t)
                                                  (("1"
                                                    (inst -1 "one")
                                                    (("1"
                                                      (expand "times")
                                                      (("1"
                                                        (expand "^")
                                                        (("1"
                                                          (expand
                                                           "power")
                                                          (("1"
                                                            (expand
                                                             "power")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lemma
                                                                 "one_ne_zero")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (expand "N")
                            (("2" (skeep)
                              (("2"
                                (expand "times")
                                (("2"
                                  (expand "^")
                                  (("2"
                                    (expand "power")
                                    (("2"
                                      (expand "power")
                                      (("2"
                                        (expand "power")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (lemma
                                             "times_one[T,+,*,zero,one]")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (replace -1 1 rl)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (lemma
                                                     "right_distributive[T,+,*,zero]")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (replace
                                                         -1
                                                         1
                                                         rl)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (replaces
                                                             -1)
                                                            (("2"
                                                              (rewrite
                                                               "times_zero")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((charac const-decl "nat" ring_characteristic_def nil)
    (empty? const-decl "bool" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (times const-decl "T" ring_basic_properties nil)
    (power def-decl "T" monoid_def nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (one_ne_zero formula-decl nil division_ring nil)
    (^ const-decl "T" group nil)
    (minimum? const-decl "bool" min_nat nil)
    (min_def formula-decl nil min_nat nil)
    (ring? const-decl "bool" ring_def nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (N const-decl "set[posnat]" ring_characteristic_def nil)
    (plus_associative formula-decl nil ring nil)
    (times_is_zero formula-decl nil ring_nz_closed nil)
    (right_distributive formula-decl nil ring nil)
    (times_one formula-decl nil ring_with_one nil)
    (/= const-decl "boolean" notequal nil)
    (zero_plus formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (zero_times formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (fullset_is_field formula-decl nil quaternions nil)
    (commutative? const-decl "bool" operator_defs nil)
    (negate_is_right_inv formula-decl nil ring nil)
    (TRUE const-decl "bool" booleans nil)
    (restrict const-decl "R" restrict nil)
    (field? const-decl "bool" field_def nil)
    (times_associative formula-decl nil ring nil)
    (negative_times formula-decl nil ring nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (negate_is_left_inv formula-decl nil ring nil)
    (q_prod_charac formula-decl nil quaternions nil)
    (member const-decl "bool" sets nil)
    (pure_quat const-decl "set[quat]" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (scalar_F const-decl "set[quat]" quaternions_def nil))
   SHOSTAK))
 (red_trace_charac 0
  (red_trace_charac-1 nil 3885478020
   ("" (skeep)
    (("" (expand "red_trace")
      (("" (expand "+")
        (("" (expand "conjugate")
          (("" (rewrite "negate_is_right_inv")
            (("" (rewrite "negate_is_right_inv")
              (("" (rewrite "negate_is_right_inv") nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((red_trace const-decl "quat" quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (negate_is_right_inv formula-decl nil ring nil)
    (+ const-decl "quat" quaternions_def nil))
   SHOSTAK))
 (red_trace_plus 0
  (red_trace_plus-1 nil 3888186839
   ("" (skeep)
    (("" (rewrite* "red_trace_charac")
      (("" (expand "+")
        (("" (assert)
          (("" (rewrite "plus_commutative")
            (("" (rewrite "plus_associative")
              (("" (rewrite "plus_associative" :dir rl)
                (("" (rewrite "plus_commutative")
                  (("" (rewrite "plus_associative")
                    (("" (lemma "plus_associative")
                      (("" (inst -1 "q`x" "q`x" "p`x + p`x")
                        (("" (replace -1 1 rl)
                          (("" (hide -)
                            (("" (lemma "plus_commutative")
                              (("" (inst?) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((+ const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (red_trace_charac formula-decl nil quaternions nil)
    (TRUE const-decl "bool" booleans nil)
    (zero_plus formula-decl nil ring nil)
    (plus_associative formula-decl nil ring nil)
    (plus_commutative formula-decl nil ring nil))
   SHOSTAK))
 (red_trace_times_commutes 0
  (red_trace_times_commutes-1 nil 3888187544
   ("" (skeep)
    (("" (rewrite* "red_trace_charac")
      (("" (rewrite* "q_prod_charac")
        (("" (assert)
          (("" (lemma "fullset_is_field")
            (("" (expand "field?")
              (("" (flatten)
                (("" (hide -1)
                  (("" (expand "commutative?")
                    (("" (expand "restrict")
                      (("" (inst-cp -1 "p`x" "q`x")
                        (("1" (inst-cp -1 "p`y" "q`y")
                          (("1" (inst-cp -1 "p`z" "q`z")
                            (("1" (inst -1 "p`t" "q`t")
                              (("1"
                                (replaces -1)
                                (("1"
                                  (replaces -1)
                                  (("1"
                                    (replaces -1)
                                    (("1" (replaces -1) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "fullset")
                                (("2" (propax) nil nil))
                                nil)
                               ("3"
                                (expand "fullset")
                                (("3" (propax) nil nil))
                                nil))
                              nil)
                             ("2" (expand "fullset")
                              (("2" (propax) nil nil)) nil)
                             ("3" (expand "fullset")
                              (("3" (propax) nil nil)) nil))
                            nil)
                           ("2" (expand "fullset")
                            (("2" (propax) nil nil)) nil)
                           ("3" (expand "fullset")
                            (("3" (propax) nil nil)) nil))
                          nil)
                         ("2" (expand "fullset")
                          (("2" (propax) nil nil)) nil)
                         ("3" (expand "fullset")
                          (("3" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (red_trace_charac formula-decl nil quaternions nil)
    (TRUE const-decl "bool" booleans nil)
    (field? const-decl "bool" field_def nil)
    (restrict const-decl "R" restrict nil)
    (q skolem-const-decl "quat[T, +, *, zero, one, a, b]" quaternions
     nil)
    (p skolem-const-decl "quat[T, +, *, zero, one, a, b]" quaternions
     nil)
    (commutative? const-decl "bool" operator_defs nil)
    (fullset_is_field formula-decl nil quaternions nil)
    (q_prod_charac formula-decl nil quaternions nil))
   SHOSTAK))
 (red_norm_charac 0
  (red_norm_charac-1 nil 3885478021
   ("" (skeep)
    (("" (expand "red_norm")
      (("" (lemma "q_prod_charac")
        (("" (inst?)
          (("" (replaces -1)
            (("" (expand "conjugate")
              (("" (split)
                (("1" (rewrite "negative_times")
                  (("1" (rewrite "negative_times")
                    (("1" (rewrite "times_negative")
                      (("1" (rewrite "times_negative")
                        (("1" (rewrite "negative_times")
                          (("1" (rewrite "negative_times")
                            (("1" (lemma "times_commutative")
                              (("1"
                                (inst-cp -1 "q`y * q`y" "a")
                                (("1"
                                  (replaces -2)
                                  (("1"
                                    (inst-cp -1 "q`z * q`z" "b")
                                    (("1"
                                      (replaces -2)
                                      (("1"
                                        (rewrite "times_negative")
                                        (("1"
                                          (rewrite "times_negative")
                                          (("1"
                                            (rewrite "negative_times")
                                            (("1"
                                              (rewrite "negate_negate")
                                              (("1"
                                                (lemma
                                                 "times_associative")
                                                (("1"
                                                  (inst
                                                   -1
                                                   "q`t * q`t"
                                                   "a"
                                                   "b")
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "q`t * q`t"
                                                       "a * b")
                                                      (("1"
                                                        (replaces -1)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (rewrite "times_negative")
                  (("2" (rewrite "times_negative")
                    (("2" (rewrite "times_negative")
                      (("2" (rewrite "negative_times")
                        (("2" (rewrite "negative_times")
                          (("2" (rewrite "negate_negate")
                            (("2" (rewrite "times_commutative")
                              (("2"
                                (rewrite "negate_is_left_inv")
                                (("2"
                                  (rewrite "times_associative")
                                  (("2"
                                    (rewrite "times_associative")
                                    (("2"
                                      (rewrite "times_commutative")
                                      (("2"
                                        (rewrite "zero_plus")
                                        (("2"
                                          (rewrite
                                           "negate_is_right_inv")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (rewrite "times_negative")
                  (("3" (rewrite "times_negative")
                    (("3" (rewrite "times_negative")
                      (("3" (rewrite "negative_times")
                        (("3" (rewrite "negative_times")
                          (("3" (rewrite "negate_negate")
                            (("3" (rewrite "times_commutative")
                              (("3"
                                (rewrite "negate_is_left_inv")
                                (("3"
                                  (rewrite "times_associative")
                                  (("3"
                                    (rewrite "times_associative")
                                    (("3"
                                      (rewrite "times_commutative")
                                      (("3"
                                        (rewrite "zero_plus")
                                        (("3"
                                          (rewrite
                                           "negate_is_left_inv")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("4" (rewrite "times_negative")
                  (("4" (rewrite "times_negative")
                    (("4" (rewrite "times_negative")
                      (("4" (rewrite "negate_negate")
                        (("4" (rewrite "times_commutative")
                          (("4" (lemma "times_commutative")
                            (("4" (inst -1 "q`y" "q`z")
                              (("4"
                                (replaces -1)
                                (("4"
                                  (rewrite "plus_associative")
                                  (("4"
                                    (rewrite "negate_is_left_inv")
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((red_norm const-decl "quat" quaternions_def nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (plus_associative formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (negate_is_right_inv formula-decl nil ring nil)
    (zero_plus formula-decl nil ring nil)
    (negate_is_left_inv formula-decl nil ring nil)
    (negative_times formula-decl nil ring nil)
    (times_negative formula-decl nil ring nil)
    (times_commutative formula-decl nil commutative_ring nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (negate_negate formula-decl nil ring nil)
    (times_associative formula-decl nil ring nil)
    (TRUE const-decl "bool" booleans nil)
    (q_prod_charac formula-decl nil quaternions nil))
   SHOSTAK))
 (red_norm_one_q 0
  (red_norm_one_q-1 nil 3888092590
   ("" (rewrite "red_norm_charac")
    (("" (expand "one_q")
      (("" (rewrite "one_times")
        (("" (rewrite* "times_zero")
          (("" (rewrite* "plus_zero") nil nil)) nil))
        nil))
      nil))
    nil)
   ((times_zero formula-decl nil ring nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (TRUE const-decl "bool" booleans nil)
    (plus_zero formula-decl nil ring nil)
    (one_times formula-decl nil ring_with_one nil)
    (one_q const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (red_norm_charac formula-decl nil quaternions nil))
   SHOSTAK))
 (red_norm_is_scalar 0
  (red_norm_is_scalar-1 nil 3885478026
   ("" (skeep)
    (("" (rewrite "red_norm_charac")
      (("" (expand "scalar_F") (("" (propax) nil nil)) nil)) nil))
    nil)
   ((red_norm_charac formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (scalar_F const-decl "set[quat]" quaternions_def nil))
   SHOSTAK))
 (conj_conj_quat 0
  (conj_conj_quat-1 nil 3885478026
   ("" (skeep) (("" (grind) (("" (decompose-equality) nil nil)) nil))
    nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (negate_negate formula-decl nil ring nil)
    (quat type-eq-decl nil quaternions_def nil))
   SHOSTAK))
 (conj_product_quat 0
  (conj_product_quat-1 nil 3885478027
   ("" (skeep)
    (("" (grind)
      (("" (rewrite "q_prod_charac")
        (("" (grind)
          (("" (decompose-equality)
            (("1" (grind)
              (("1" (rewrite "q_prod_charac")
                (("1" (grind)
                  (("1" (s_fact_dist "plus" "times" "right" rl)
                    (("1" (rewrite* inv_star)
                      (("1" (rewrite "times_commutative")
                        (("1" (s_fact_dist "plus" "times" "right" rl)
                          (("1" (assert)
                            (("1" (rewrite* "plus_associative")
                              (("1"
                                (rewrite "cancel_left_plus")
                                (("1"
                                  (rewrite "times_commutative")
                                  (("1"
                                    (rewrite "cancel_left_plus")
                                    (("1"
                                      (rewrite "times_commutative")
                                      (("1"
                                        (rewrite "cancel_left_plus")
                                        (("1"
                                          (rewrite "times_commutative")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (rewrite "q_prod_charac")
              (("2" (grind)
                (("2" (s_fact_dist "plus" "times" "right" rl)
                  (("2" (rewrite* "plus_associative")
                    (("2" (s_tccl) nil nil)) nil))
                  nil))
                nil))
              nil)
             ("3" (rewrite "q_prod_charac")
              (("3" (grind)
                (("3" (s_fact_dist "plus" "times" "right" rl)
                  (("3" (rewrite* "inv_star")
                    (("3" (rewrite* "plus_associative" :dir rl)
                      (("3" (s_plus_permute (3 4 1 2))
                        (("3" (rewrite* "plus_associative")
                          (("3" (rewrite times_commutative)
                            (("3" (rewrite cancel_left_plus)
                              (("3"
                                (rewrite times_commutative)
                                (("3"
                                  (rewrite cancel_left_plus)
                                  (("3"
                                    (s_times_permute (1 3 2))
                                    (("3"
                                      (rewrite cancel_left_plus)
                                      (("3"
                                        (s_times_permute (1 3 2))
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("4" (rewrite q_prod_charac)
              (("4" (grind)
                (("4" (rewrite* "inv_star")
                  (("4" (s_fact_dist "plus" "times" "right" rl)
                    (("4" (s_plus_permute (3 4 1 2))
                      (("4" (rewrite* "plus_associative")
                        (("4" (rewrite times_commutative)
                          (("4" (rewrite cancel_left_plus)
                            (("4" (rewrite times_commutative)
                              (("4"
                                (rewrite cancel_left_plus)
                                (("4"
                                  (s_times_permute (1 3 2))
                                  (("4"
                                    (rewrite cancel_left_plus)
                                    (("4"
                                      (s_times_permute (1 3 2))
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (times_heading_third formula-decl nil pvs_strategies_lemmas nil)
    (plus_heading_fourth formula-decl nil pvs_strategies_lemmas nil)
    (plus_commutative formula-decl nil ring nil)
    (cancel_left formula-decl nil group nil)
    (inv_star formula-decl nil group nil)
    (plus_associative formula-decl nil ring nil)
    (cancel_left_plus formula-decl nil ring nil)
    (times_commutative formula-decl nil commutative_ring nil)
    (negate_negate formula-decl nil ring nil)
    (negative_times formula-decl nil ring nil)
    (times_negative formula-decl nil ring nil)
    (TRUE const-decl "bool" booleans nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (quat type-eq-decl nil quaternions_def nil)
    (q_prod_charac formula-decl nil quaternions nil))
   SHOSTAK))
 (q_x_cq_commutes 0
  (q_x_cq_commutes-1 nil 3885478031
   ("" (skeep)
    (("" (lemma "red_norm_charac")
      (("" (inst-cp -1 "q")
        (("" (expand "red_norm" -2)
          (("" (replaces -2)
            (("" (inst -1 "conjugate(q)")
              (("" (expand "red_norm")
                (("" (rewrite conj_conj_quat)
                  (("" (replaces -1)
                    (("" (expand "conjugate")
                      (("" (rewrite "negative_times_negative")
                        (("" (rewrite "negative_times_negative")
                          (("" (rewrite "negative_times_negative") nil
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((red_norm_charac formula-decl nil quaternions nil)
    (red_norm const-decl "quat" quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (conj_conj_quat formula-decl nil quaternions nil)
    (negative_times_negative formula-decl nil ring nil)
    (TRUE const-decl "bool" booleans nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil))
   SHOSTAK))
 (conj_product_quat_scalar 0
  (conj_product_quat_scalar-1 nil 3907334134
   ("" (skeep)
    (("" (grind)
      (("1" (rewrite "times_negative") nil nil)
       ("2" (rewrite "times_negative") nil nil)
       ("3" (rewrite "times_negative") nil nil))
      nil))
    nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (* const-decl "quat" quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (times_negative formula-decl nil ring nil))
   shostak))
 (red_norm_conj 0
  (red_norm_conj-1 nil 3885478032
   ("" (skeep)
    (("" (expand "red_norm")
      (("" (rewrite conj_conj_quat)
        (("" (rewrite q_x_cq_commutes) nil nil)) nil))
      nil))
    nil)
   ((red_norm const-decl "quat" quaternions_def nil)
    (q_x_cq_commutes formula-decl nil quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (conj_conj_quat formula-decl nil quaternions nil))
   SHOSTAK))
 (sc_F_commutes 0
  (sc_F_commutes-1 nil 3885478033
   ("" (skeep*)
    (("" (lemma "sc_comm")
      (("" (inst -1 "s`x" "one_q" "q")
        (("" (case-replace "s`x*one_q = s")
          (("1" (replaces -2)
            (("1" (name-replace "aa" "s`x")
              (("1" (replace -1 1 rl)
                (("1" (expand "aa")
                  (("1" (rewrite "one_q_times")
                    (("1" (rewrite "sc_comm" :dir rl)
                      (("1" (rewrite "times_one_q") nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide (-1 2))
            (("2" (typepred "s")
              (("2" (grind) (("2" (decompose-equality) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (sc_comm formula-decl nil quaternions_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (* const-decl "quat" quaternions_def nil)
    (aa skolem-const-decl "T" quaternions nil)
    (times_one_q formula-decl nil quaternions_def nil)
    (one_q_times formula-decl nil quaternions_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (times_one formula-decl nil ring_with_one nil)
    (times_zero formula-decl nil ring nil)
    (one_q const-decl "quat" quaternions_def nil)
    (scalar_F const-decl "set[quat]" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   SHOSTAK))
 (center_quat_is_sc_F 0
  (center_quat_is_sc_F-1 nil 3888087450
   ("" (prop)
    (("" (decompose-equality 2)
      (("" (iff)
        (("" (prop)
          (("1" (expand "center")
            (("1" (expand "extend")
              (("1" (prop)
                (("1" (hide -1)
                  (("1" (inst-cp -1 "i")
                    (("1" (rewrite* "q_prod_charac" -2)
                      (("1" (expand "i")
                        (("1" (assert)
                          (("1" (flatten)
                            (("1" (rewrite "negative_times")
                              (("1"
                                (lemma "cancel_right_plus")
                                (("1"
                                  (inst-cp
                                   -1
                                   "a * x!1`t"
                                   "inv(a * x!1`t)"
                                   "a * x!1`t")
                                  (("1"
                                    (inst
                                     -1
                                     "x!1`z"
                                     "inv(x!1`z)"
                                     "x!1`z")
                                    (("1"
                                      (prop)
                                      (("1"
                                        (hide (-2 -4 -6-7))
                                        (("1"
                                          (rewrite*
                                           "negate_is_left_inv")
                                          (("1"
                                            (rewrite
                                             "right_distributive"
                                             :dir
                                             rl)
                                            (("1"
                                              (lemma "times_is_zero")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (typepred "a")
                                                  (("1"
                                                    (expand "remove")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide
                                                           (-1
                                                            -3
                                                            -4
                                                            -7
                                                            -8))
                                                          (("1"
                                                            (case
                                                             "x!1`t = zero")
                                                            (("1"
                                                              (hide -2)
                                                              (("1"
                                                                (case
                                                                 "x!1`z = zero")
                                                                (("1"
                                                                  (hide
                                                                   -3)
                                                                  (("1"
                                                                    (inst
                                                                     -3
                                                                     "j")
                                                                    (("1"
                                                                      (rewrite*
                                                                       "q_prod_charac"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "j")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (hide
                                                                               -3)
                                                                              (("1"
                                                                                (lemma
                                                                                 "cancel_left_plus")
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "inv(x!1`y)"
                                                                                   "x!1`y"
                                                                                   "x!1`y")
                                                                                  (("1"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "negate_is_right_inv")
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-2
                                                                                          -5))
                                                                                        (("1"
                                                                                          (case
                                                                                           "x!1`y = zero")
                                                                                          (("1"
                                                                                            (hide
                                                                                             (-2
                                                                                              1
                                                                                              3))
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scalar_F")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             (-2
                                                                                              -3
                                                                                              3))
                                                                                            (("2"
                                                                                              (case
                                                                                               "N(fullset[T])(2)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "charac")
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "empty?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "min_def[posnat]")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             (2
                                                                                                              3
                                                                                                              4))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "minimum?")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -2)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "N")
                                                                                                                      (("2"
                                                                                                                        (case-replace
                                                                                                                         "x=1"
                                                                                                                         :hide?
                                                                                                                         t)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "one")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "times")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "^")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "power")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "power")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "one_ne_zero")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "fullset")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 4)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "N")
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "times")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "^")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "power")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "power")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "power")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "nzd_R_cancel_left")
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "fullset_is_field")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "field?")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "division_ring_is_ring_nz_closed")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "ring_nz_closed?")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -3
                                                                                                                                           "x"
                                                                                                                                           "x!1`y + x!1`y"
                                                                                                                                           "zero")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               (-1
                                                                                                                                                -2))
                                                                                                                                              (("1"
                                                                                                                                                (rewrite
                                                                                                                                                 "right_distributive")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "left_distributive"
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "times_is_zero")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (expand
                                                                                                                                             "fullset")
                                                                                                                                            (("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (expand
                                                                                                                                             "fullset")
                                                                                                                                            (("3"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "fullset")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   (-1
                                                                    -3
                                                                    3))
                                                                  (("2"
                                                                    (case
                                                                     "N(fullset[T])(2)")
                                                                    (("1"
                                                                      (expand
                                                                       "charac")
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (prop)
                                                                          (("1"
                                                                            (expand
                                                                             "empty?")
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               2)
                                                                              (("1"
                                                                                (expand
                                                                                 "member")
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "min_def[posnat]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (prop)
                                                                                (("2"
                                                                                  (hide
                                                                                   (2
                                                                                    3
                                                                                    4))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "minimum?")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -2)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "N")
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "x=1"
                                                                                               :hide?
                                                                                               t)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "one")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "times")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "^")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "power")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "power")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "one_ne_zero")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       4)
                                                                      (("2"
                                                                        (expand
                                                                         "N")
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (expand
                                                                             "times")
                                                                            (("2"
                                                                              (expand
                                                                               "^")
                                                                              (("2"
                                                                                (expand
                                                                                 "power")
                                                                                (("2"
                                                                                  (expand
                                                                                   "power")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "power")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "nzd_R_cancel_left")
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "fullset_is_field")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "field?")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "division_ring_is_ring_nz_closed")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "ring_nz_closed?")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -3
                                                                                                                 "x"
                                                                                                                 "x!1`z + x!1`z"
                                                                                                                 "zero")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     (-1
                                                                                                                      -2))
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "right_distributive")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "left_distributive"
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "times_is_zero")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "fullset")
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (expand
                                                                                                                   "fullset")
                                                                                                                  (("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide
                                                               (-2
                                                                -3
                                                                3))
                                                              (("2"
                                                                (case
                                                                 "N(fullset[T])(2)")
                                                                (("1"
                                                                  (expand
                                                                   "charac")
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (expand
                                                                         "empty?")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           2)
                                                                          (("1"
                                                                            (expand
                                                                             "member")
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "min_def[posnat]")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (prop)
                                                                            (("2"
                                                                              (hide
                                                                               (2
                                                                                3
                                                                                4))
                                                                              (("2"
                                                                                (expand
                                                                                 "minimum?")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "N")
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "x=1"
                                                                                           :hide?
                                                                                           t)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "one")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "times")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "^")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "power")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "power")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "one_ne_zero")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "fullset")
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   4)
                                                                  (("2"
                                                                    (expand
                                                                     "N")
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (expand
                                                                         "times")
                                                                        (("2"
                                                                          (expand
                                                                           "^")
                                                                          (("2"
                                                                            (expand
                                                                             "power")
                                                                            (("2"
                                                                              (expand
                                                                               "power")
                                                                              (("2"
                                                                                (expand
                                                                                 "power")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "nzd_R_cancel_left")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "fullset_is_field")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "field?")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "division_ring_is_ring_nz_closed")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "ring_nz_closed?")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -3
                                                                                                             "x"
                                                                                                             "x!1`t + x!1`t"
                                                                                                             "zero")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 (-1
                                                                                                                  -2))
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "right_distributive")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "left_distributive"
                                                                                                                     :dir
                                                                                                                     rl)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "times_is_zero")
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "fullset")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (expand
                                                                                                               "fullset")
                                                                                                              (("3"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "fullset") (("2" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "center")
            (("2" (expand "extend")
              (("2" (prop)
                (("1" (skeep)
                  (("1" (hide -1)
                    (("1" (lemma "sc_F_commutes")
                      (("1" (inst -1 "x!1" "x")
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "fullset") (("2" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (center const-decl "set[T]" center_def nil)
    (scalar_F const-decl "set[quat]" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (extend const-decl "R" extend nil)
    (q_prod_charac formula-decl nil quaternions nil)
    (TRUE const-decl "bool" booleans nil)
    (zero_times formula-decl nil ring nil)
    (one_times formula-decl nil ring_with_one nil)
    (zero_plus formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (times_one formula-decl nil ring_with_one nil)
    (negate_zero formula-decl nil ring nil)
    (negative_times formula-decl nil ring nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (negate_is_left_inv formula-decl nil ring nil)
    (times_is_zero formula-decl nil ring_nz_closed nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (negate_is_right_inv formula-decl nil ring nil)
    (ring? const-decl "bool" ring_def nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (N const-decl "set[posnat]" ring_characteristic_def nil)
    (min_def formula-decl nil min_nat nil)
    (minimum? const-decl "bool" min_nat nil)
    (^ const-decl "T" group nil)
    (one_ne_zero formula-decl nil division_ring nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (power def-decl "T" monoid_def nil)
    (times const-decl "T" ring_basic_properties nil)
    (nonempty? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (charac const-decl "nat" ring_characteristic_def nil)
    (nzd_R_cancel_left formula-decl nil ring_nz_closed_aux nil)
    (field? const-decl "bool" field_def nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (division_ring nonempty-type-eq-decl nil division_ring nil)
    (ring_nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (x!1 skolem-const-decl "quat[T, +, *, zero, one, a, b]" quaternions
     nil)
    (left_distributive formula-decl nil ring nil)
    (division_ring_is_ring_nz_closed judgement-tcc nil division_ring
     nil)
    (fullset_is_field formula-decl nil quaternions nil)
    (cancel_left_plus formula-decl nil ring nil)
    (j const-decl "quat" quaternions_def nil)
    (member const-decl "bool" sets nil)
    (right_distributive formula-decl nil ring nil)
    (cancel_right_plus formula-decl nil ring nil)
    (i const-decl "quat" quaternions_def nil)
    (sc_F_commutes formula-decl nil quaternions nil))
   SHOSTAK))
 (sc_F_product_charac 0
  (sc_F_product_charac-1 nil 3885478034
   ("" (skeep)
    (("" (typepred "s" "c")
      (("" (expand "scalar_F")
        (("" (flatten)
          (("" (rewrite "q_prod_charac") (("" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((scalar_F const-decl "set[quat]" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (zero_times formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (zero_plus formula-decl nil ring nil)
    (negate_zero formula-decl nil ring nil)
    (q_prod_charac formula-decl nil quaternions nil))
   SHOSTAK))
 (q_x_v_cq 0
  (q_x_v_cq-1 nil 3885475797
   ("" (skeep)
    (("" (expand "pure_quat")
      (("" (rewrite "q_prod_charac")
        (("" (rewrite "q_prod_charac")
          (("" (expand "conjugate")
            (("" (typepred "v")
              (("" (expand "pure_quat")
                (("" (replaces -1)
                  (("" (assert)
                    (("" (s_fact_dist plus times)
                      (("" (rewrite* plus_associative :dir rl)
                        (("" (s_plus_permute (1 4 2 7 3 5 6))
                          (("" (s_times_permute (4 2 1 3))
                            (("" (assert)
                              ((""
                                (s_times_permute (4 2 1 3))
                                ((""
                                  (assert)
                                  ((""
                                    (s_plus_permute (6 1 2 4 3 7 5))
                                    ((""
                                      (s_times_permute (3 2 4 5 1))
                                      ((""
                                        (assert)
                                        ((""
                                          (s_times_permute (4 5 3 1 2))
                                          ((""
                                            (assert)
                                            ((""
                                              (s_times_permute
                                               (4 3 2 5 1))
                                              ((""
                                                (assert)
                                                ((""
                                                  (s_times_permute
                                                   (4 3 2 1 5))
                                                  ((""
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pure_quat const-decl "set[quat]" quaternions_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (left_distributive formula-decl nil ring nil)
    (plus_associative formula-decl nil ring nil)
    (times_negative formula-decl nil ring nil)
    (negate_negate formula-decl nil ring nil)
    (negative_times formula-decl nil ring nil)
    (plus_heading_sixth formula-decl nil pvs_strategies_lemmas nil)
    (plus_heading_fifth formula-decl nil pvs_strategies_lemmas nil)
    (plus_heading_seventh formula-decl nil pvs_strategies_lemmas nil)
    (negate_is_right_inv formula-decl nil ring nil)
    (times_heading_fifth formula-decl nil pvs_strategies_lemmas nil)
    (negate_is_left_inv formula-decl nil ring nil)
    (times_commutative formula-decl nil commutative_ring nil)
    (times_heading_fourth formula-decl nil pvs_strategies_lemmas nil)
    (times_heading_third formula-decl nil pvs_strategies_lemmas nil)
    (plus_zero formula-decl nil ring nil)
    (zero_plus formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (q_prod_charac formula-decl nil quaternions nil))
   SHOSTAK))
 (T_q_TCC1 0
  (T_q_TCC1-1 nil 3885380630
   ("" (skeep) (("" (lemma "q_x_v_cq") (("" (inst?) nil nil)) nil))
    nil)
   ((q_x_v_cq formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (pure_quat const-decl "set[quat]" quaternions_def nil))
   nil
   (T_q subtype
    "quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].*(quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].*(quaternions.q, quaternions.v), quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].conjugate(quaternions.q))"
    "(quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].pure_quat)")))
 (T_q_is_linear_TCC1 0
  (T_q_is_linear_TCC1-1 nil 3885380630 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (quat type-eq-decl nil quaternions_def nil)
    (zero_plus formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (* const-decl "quat" quaternions_def nil)
    (+ const-decl "quat" quaternions_def nil)
    (pure_quat const-decl "set[quat]" quaternions_def nil))
   nil
   (T_q_is_linear subtype
    "(quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].+)(quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].*(quaternions.c, quaternions.v), quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].*(quaternions.d, quaternions.w))"
    "(quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].pure_quat)")))
 (T_q_is_linear 0
  (T_q_is_linear-1 nil 3885478038
   ("" (skeep*)
    (("" (expand "T_q")
      (("" (lemma "q_distr")
        (("" (expand "distributive?")
          (("" (inst -1 "q" "c*v" "d*w")
            (("" (replaces -1)
              (("" (rewrite "q_distrl")
                (("" (rewrite* "sc_comm" :dir rl)
                  (("" (rewrite* "sc_quat_assoc") nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T_q const-decl "(pure_quat)" quaternions nil)
    (distributive? const-decl "bool" operator_defs nil)
    (sc_comm formula-decl nil quaternions_def nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (q_distrl formula-decl nil quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (* const-decl "quat" quaternions_def nil)
    (pure_quat const-decl "set[quat]" quaternions_def nil)
    (q_distr formula-decl nil quaternions_def nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   SHOSTAK))
 (red_norm_prod 0
  (red_norm_prod-1 nil 3885478039
   ("" (skeep)
    (("" (expand "red_norm" 1 1)
      (("" (rewrite "conj_product_quat")
        (("" (lemma q_assoc)
          (("" (expand "associative?")
            (("" (inst-cp -1 "q" "v" "conjugate(v) * conjugate(q)")
              (("" (replaces -2)
                (("" (inst -1 "v" "conjugate(v)" "conjugate(q)")
                  (("" (replace -1 1 rl)
                    (("" (hide -1)
                      ((""
                        (case-replace "v * conjugate(v) = red_norm(v)")
                        (("1" (lemma "sc_F_commutes")
                          (("1" (inst -1 "red_norm(v)" "conjugate(q)")
                            (("1" (replaces -1)
                              (("1"
                                (lemma q_assoc)
                                (("1"
                                  (expand "associative?")
                                  (("1"
                                    (inst?)
                                    (("1"
                                      (replace -1 1 rl)
                                      (("1"
                                        (expand "red_norm" 1 2)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2"
                                (rewrite "red_norm_is_scalar")
                                nil
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (expand "red_norm")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((red_norm const-decl "quat" quaternions_def nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (sc_F_commutes formula-decl nil quaternions nil)
    (red_norm_is_scalar formula-decl nil quaternions nil)
    (v skolem-const-decl "quat[T, +, *, zero, one, a, b]" quaternions
     nil)
    (scalar_F const-decl "set[quat]" quaternions_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (TRUE const-decl "bool" booleans nil)
    (associative? const-decl "bool" operator_defs nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (conj_product_quat formula-decl nil quaternions nil))
   SHOSTAK))
 (T_q_red_norm_invariant 0
  (T_q_red_norm_invariant-1 nil 3885478040
   ("" (skeep*)
    (("" (expand "T_q")
      (("" (rewrite* "red_norm_prod")
        (("" (rewrite "red_norm_conj")
          (("" (replaces -1)
            (("" (rewrite "one_q_times")
              (("" (rewrite "times_one_q") nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T_q const-decl "(pure_quat)" quaternions nil)
    (red_norm_conj formula-decl nil quaternions nil)
    (red_norm const-decl "quat" quaternions_def nil)
    (one_q_times formula-decl nil quaternions_def nil)
    (times_one_q formula-decl nil quaternions_def nil)
    (red_norm_prod formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (pure_quat const-decl "set[quat]" quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   SHOSTAK))
 (T_q_invariant_red_norm_TCC1 0
  (T_q_invariant_red_norm_TCC1-1 nil 3885380630
   ("" (subtype-tcc) nil nil)
   ((b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (red_norm const-decl "quat" quaternions_def nil)
    (one_q const-decl "quat" quaternions_def nil)
    (pure_part const-decl "quat" quaternions_def nil)
    (times_zero formula-decl nil ring nil)
    (* const-decl "quat" quaternions_def nil)
    (pure_quat const-decl "set[quat]" quaternions_def nil))
   nil
   (T_q_invariant_red_norm subtype
    "quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].*(quaternions.c, quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].pure_part(quaternions.q))"
    "(quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].pure_quat)")))
 (T_q_invariant_red_norm 0
  (T_q_invariant_red_norm-1 nil 3885478041
   ("" (skeep*)
    (("" (expand "T_q")
      (("" (rewrite "sc_comm" :dir rl)
        (("" (rewrite "sc_quat_assoc" :dir rl)
          (("" (rewrite "quat_x_pure_part_commutes")
            (("" (rewrite "sc_quat_assoc")
              (("" (lemma "q_assoc")
                (("" (expand "associative?")
                  (("" (inst?)
                    (("" (replaces -1)
                      (("" (expand "red_norm")
                        (("" (replaces -1)
                          (("" (rewrite times_one_q) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T_q const-decl "(pure_quat)" quaternions nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (times_one_q formula-decl nil quaternions_def nil)
    (red_norm const-decl "quat" quaternions_def nil)
    (* const-decl "quat" quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (quat_x_pure_part_commutes formula-decl nil quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (pure_part const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (sc_comm formula-decl nil quaternions_def nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   SHOSTAK))
 (nz_red_norm_iff_inv_exist 0
  (nz_red_norm_iff_inv_exist-1 nil 3888092064
   ("" (prop)
    (("1" (lemma "fullset_is_field")
      (("1" (expand "field?")
        (("1" (expand "division_ring?")
          (("1" (expand "group?")
            (("1" (flatten)
              (("1" (hide (-1 -2 -4))
                (("1" (expand "inv_exists?")
                  (("1" (skeep)
                    (("1" (inst -2 "x")
                      (("1" (rewrite "red_norm_charac")
                        (("1" (expand "zero_q")
                          (("1"
                            (inst -1
                             "x`x * x`x + inv(a) * (x`y * x`y) + inv(b) * (x`z * x`z) + (a * b) * (x`t * x`t)")
                            (("1" (skeep)
                              (("1"
                                (inst 2 "conjugate(x) *(y_1 * one_q)")
                                (("1"
                                  (hide 1)
                                  (("1"
                                    (split)
                                    (("1"
                                      (lemma "q_assoc")
                                      (("1"
                                        (expand "associative?")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (replace -1 1 rl)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (lemma
                                                 "red_norm_charac")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (expand "red_norm")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (lemma
                                                         "sc_comm")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (replace
                                                             -1
                                                             1
                                                             rl)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (case-replace
                                                                 "(y_1 * (# x := x`x * x`x + inv(a) * (x`y * x`y) + inv(b) * (x`z * x`z) + (a * b) * (x`t * x`t), y := zero, z := zero, t := zero #)) = one_q"
                                                                 :hide?
                                                                 t)
                                                                (("1"
                                                                  (rewrite
                                                                   "one_q_times")
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   (-1
                                                                    2))
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "one_q")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (lemma "q_assoc")
                                      (("2"
                                        (expand "associative?")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (replaces -1)
                                            (("2"
                                              (rewrite "sc_comm")
                                              (("2"
                                                (rewrite "one_q_times")
                                                (("2"
                                                  (lemma "sc_comm")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (replace -1 1 rl)
                                                      (("2"
                                                        (lemma
                                                         "sc_quat_assoc")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (replace
                                                             -1
                                                             1
                                                             rl)
                                                            (("2"
                                                              (hide
                                                               (-1 -2))
                                                              (("2"
                                                                (lemma
                                                                 "red_norm_charac")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (expand
                                                                     "red_norm")
                                                                    (("2"
                                                                      (rewrite
                                                                       "q_x_cq_commutes")
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "one_q")
                                                                          (("2"
                                                                            (expand
                                                                             "*"
                                                                             1
                                                                             1)
                                                                            (("2"
                                                                              (hide
                                                                               -1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (expand "remove")
                                    (("2"
                                      (expand "member")
                                      (("2"
                                        (expand "fullset")
                                        (("2"
                                          (prop)
                                          (("2"
                                            (expand "*")
                                            (("2"
                                              (expand "one_q")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (rewrite
                                                   "q_prod_charac")
                                                  (("2"
                                                    (expand*
                                                     "conjugate"
                                                     "zero_q")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (hide -6)
                                                        (("2"
                                                          (rewrite
                                                           "left_distributive")
                                                          (("2"
                                                            (rewrite
                                                             "left_distributive")
                                                            (("2"
                                                              (rewrite
                                                               "left_distributive")
                                                              (("2"
                                                                (case-replace
                                                                 "y_1 = zero")
                                                                (("1"
                                                                  (hide-all-but
                                                                   -6)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lemma
                                                                       "one_ne_zero")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "times_is_zero")
                                                                  (("2"
                                                                    (inst-cp
                                                                     -1
                                                                     "x`x"
                                                                     "y_1")
                                                                    (("2"
                                                                      (inst-cp
                                                                       -1
                                                                       "inv(x`y)"
                                                                       "y_1")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "inv(x`z)"
                                                                         "y_1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "inv(x`t)"
                                                                           "y_1")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                -3
                                                                                -4))
                                                                              (("2"
                                                                                (typepred
                                                                                 "x")
                                                                                (("2"
                                                                                  (expand
                                                                                   "remove")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "zero_q")
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "negate_nz_T_is_nz_T")
                                                                                          (("2"
                                                                                            (decompose-equality
                                                                                             1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               (-3
                                                                                                -4
                                                                                                -5))
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               (-2
                                                                                                -3
                                                                                                -5))
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (hide
                                                                                               (-2
                                                                                                -4
                                                                                                -5))
                                                                                              (("3"
                                                                                                (inst?)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 3)
                              (("2"
                                (expand "remove")
                                (("2"
                                  (expand "member")
                                  (("2"
                                    (expand "fullset")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide (-1 2))
                        (("2" (typepred "x")
                          (("2" (expand "remove")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skeep)
      (("2" (expand "inv_exists?")
        (("2" (inst?)
          (("1" (skeep)
            (("1" (hide -2)
              (("1" (lemma "red_norm_prod")
                (("1" (inst?)
                  (("1" (replaces -2)
                    (("1" (rewrite "red_norm_one_q")
                      (("1" (replaces -2)
                        (("1" (rewrite "zero_q_times")
                          (("1" (expand* "one_q" "zero_q")
                            (("1" (lemma "one_ne_zero")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "remove")
            (("2" (expand "member")
              (("2" (expand "fullset") (("2" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((q skolem-const-decl "nz_quat" quaternions nil)
    (red_norm_one_q formula-decl nil quaternions nil)
    (zero_q_times formula-decl nil quaternions nil)
    (red_norm_prod formula-decl nil quaternions nil)
    (fullset_is_field formula-decl nil quaternions nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (x skolem-const-decl
     "(remove(zero_q, fullset[quat[T, +, *, zero, one, a, b]]))"
     quaternions nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (/= const-decl "boolean" notequal nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (nz_quat nonempty-type-eq-decl nil quaternions nil)
    (member const-decl "bool" sets nil)
    (q_prod_charac formula-decl nil quaternions nil)
    (zero_times formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (zero_plus formula-decl nil ring nil)
    (negate_zero formula-decl nil ring nil)
    (left_distributive formula-decl nil ring nil)
    (times_is_zero formula-decl nil ring_nz_closed nil)
    (negate_nz_T_is_nz_T judgement-tcc nil ring_nz_closed nil)
    (nz_T type-eq-decl nil ring_nz_closed_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (one_ne_zero formula-decl nil division_ring nil)
    (times_one formula-decl nil ring_with_one nil)
    (q_x_cq_commutes formula-decl nil quaternions nil)
    (sc_quat_assoc formula-decl nil quaternions_def nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (TRUE const-decl "bool" booleans nil)
    (times_zero formula-decl nil ring nil)
    (one_q_times formula-decl nil quaternions_def nil)
    (sc_comm formula-decl nil quaternions_def nil)
    (red_norm const-decl "quat" quaternions_def nil)
    (associative? const-decl "bool" operator_defs nil)
    (one_q const-decl "quat" quaternions_def nil)
    (y_1 skolem-const-decl "(remove(zero, fullset[T]))" quaternions
     nil)
    (* const-decl "quat" quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (red_norm_charac formula-decl nil quaternions nil)
    (group? const-decl "bool" group_def nil)
    (field? const-decl "bool" field_def nil))
   SHOSTAK))
 (div_ring_iff_nz_rednorm 0
  (div_ring_iff_nz_rednorm-1 nil 3885472927
   ("" (prop)
    (("1" (skeep)
      (("1" (expand "red_norm")
        (("1" (expand "division_ring?")
          (("1" (flatten)
            (("1" (hide -1)
              (("1" (expand "group?")
                (("1" (flatten)
                  (("1" (expand "inv_exists?")
                    (("1" (inst -2 "q")
                      (("1" (skeep)
                        (("1" (typepred "q")
                          (("1" (flatten)
                            (("1" (hide -1)
                              (("1"
                                (lemma "q_assoc")
                                (("1"
                                  (expand "associative?")
                                  (("1"
                                    (inst -1 "y" "q" "conjugate(q)")
                                    (("1"
                                      (replaces -3)
                                      (("1"
                                        (rewrite "one_q_times")
                                        (("1"
                                          (replaces -3)
                                          (("1"
                                            (rewrite "times_zero_q")
                                            (("1"
                                              (rewrite
                                               "q_is_zero_iff_conj"
                                               :dir
                                               rl)
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "remove")
                        (("2" (expand "member")
                          (("2" (expand "fullset")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (expand "division_ring?")
      (("2" (split)
        (("1" (rewrite "quat_is_ring_w_one") nil nil)
         ("2" (expand "group?")
          (("2" (expand "monoid?")
            (("2" (expand "monad?")
              (("2" (split)
                (("1" (expand "star_closed?")
                  (("1" (skeep)
                    (("1" (expand "member")
                      (("1" (expand "remove")
                        (("1" (expand "member")
                          (("1" (expand "fullset")
                            (("1" (assert)
                              (("1"
                                (inst-cp -1 "x")
                                (("1"
                                  (inst -1 "y")
                                  (("1"
                                    (lemma "red_norm_prod")
                                    (("1"
                                      (inst -1 "x" "y")
                                      (("1"
                                        (prop)
                                        (("1"
                                          (replace -2 -1 rl)
                                          (("1"
                                            (expand "red_norm" -1 1)
                                            (("1"
                                              (hide -2)
                                              (("1"
                                                (lemma
                                                 "q_is_zero_iff_conj")
                                                (("1"
                                                  (inst -1 "zero_q")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (rewrite
                                                         "zero_q_times")
                                                        (("1"
                                                          (rewrite
                                                           "sc_F_product_charac")
                                                          (("1"
                                                            (decompose-equality
                                                             -1)
                                                            (("1"
                                                              (hide
                                                               (-1
                                                                -3
                                                                -4))
                                                              (("1"
                                                                (expand
                                                                 "zero_q")
                                                                (("1"
                                                                  (lemma
                                                                   "times_is_zero")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split)
                                                                        (("1"
                                                                          (hide
                                                                           1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "red_norm_charac")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (rewrite
                                                                             "red_norm_charac")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (rewrite
                                                             "red_norm_is_scalar")
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (rewrite
                                                             "red_norm_is_scalar")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (typepred "y")
                                    (("2"
                                      (expand "remove")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (typepred "x")
                                  (("2"
                                    (expand "remove")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "member")
                  (("2" (expand "remove")
                    (("2" (expand "member")
                      (("2" (expand "fullset")
                        (("2" (expand* "zero_q" "one_q")
                          (("2" (lemma "one_ne_zero")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (expand "identity?")
                  (("3" (expand "restrict")
                    (("3" (skeep)
                      (("3" (rewrite "one_q_times")
                        (("3" (rewrite "times_one_q") nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("4" (expand "associative?")
                  (("4" (expand "restrict")
                    (("4" (skeep)
                      (("4" (hide -)
                        (("4" (lemma "q_assoc")
                          (("4" (expand "associative?")
                            (("4" (inst?) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("5" (lemma "nz_red_norm_iff_inv_exist")
                  (("5" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((monad? const-decl "bool" monad_def nil)
    (nz_red_norm_iff_inv_exist formula-decl nil quaternions nil)
    (identity? const-decl "bool" operator_defs nil)
    (times_one_q formula-decl nil quaternions_def nil)
    (restrict const-decl "R" restrict nil)
    (one_q const-decl "quat" quaternions_def nil)
    (one_ne_zero formula-decl nil division_ring nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (y skolem-const-decl
     "(remove(zero_q, fullset[quat[T, +, *, zero, one, a, b]]))"
     quaternions nil)
    (scalar_F const-decl "set[quat]" quaternions_def nil)
    (sc_F_product_charac formula-decl nil quaternions nil)
    (times_is_zero formula-decl nil ring_nz_closed nil)
    (red_norm_charac formula-decl nil quaternions nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (red_norm_is_scalar formula-decl nil quaternions nil)
    (zero_q_times formula-decl nil quaternions nil)
    (red_norm_prod formula-decl nil quaternions nil)
    (x skolem-const-decl
     "(remove(zero_q, fullset[quat[T, +, *, zero, one, a, b]]))"
     quaternions nil)
    (monoid? const-decl "bool" monoid_def nil)
    (quat_is_ring_w_one formula-decl nil quaternions nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (q skolem-const-decl "nz_quat" quaternions nil)
    (nz_quat nonempty-type-eq-decl nil quaternions nil)
    (/= const-decl "boolean" notequal nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (associative? const-decl "bool" operator_defs nil)
    (TRUE const-decl "bool" booleans nil)
    (q_is_zero_iff_conj formula-decl nil quaternions nil)
    (times_zero_q formula-decl nil quaternions nil)
    (one_q_times formula-decl nil quaternions_def nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (member const-decl "bool" sets nil)
    (inv_exists? const-decl "bool" group_def nil)
    (group? const-decl "bool" group_def nil)
    (red_norm const-decl "quat" quaternions_def nil))
   SHOSTAK))
 (inv_q_prod_charac_TCC1 0
  (inv_q_prod_charac_TCC2-1 nil 3887803481
   ("" (prop)
    (("" (skeep*)
      (("" (typepred "x1`1" "x1`2")
        (("" (flatten)
          (("" (lemma "nz_times_is_zero[quat,+, *, zero_q]")
            (("1"
              (inst -1 "fullset[quat[T, +, *, zero, one, a, b]]" "x1`1"
               "x1`2")
              (("1" (prop)
                (("1" (assert) nil nil)
                 ("2"
                  (lemma
                   "division_ring_is_ring_nz_closed[quat[T, +, *, zero, one, a, b], +, *, zero_q, one_q]")
                  (("1" (inst?)
                    (("1" (expand "ring_nz_closed?")
                      (("1" (assert) nil nil)) nil))
                    nil)
                   ("2" (propax) nil nil))
                  nil)
                 ("3" (expand "fullset") (("3" (propax) nil nil)) nil)
                 ("4" (expand "fullset") (("4" (propax) nil nil)) nil))
                nil)
               ("2" (expand "division_ring?")
                (("2" (expand "ring_with_one?")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil)
             ("2" (expand "division_ring?")
              (("2" (expand "ring_with_one?") (("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (division_ring_is_ring_nz_closed judgement-tcc nil division_ring
     nil)
    (one_q const-decl "quat" quaternions_def nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (ring_nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (division_ring nonempty-type-eq-decl nil division_ring nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (ring? const-decl "bool" ring_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (+ const-decl "quat" quaternions_def nil)
    (nz_times_is_zero formula-decl nil ring_nz_closed_aux nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (/= const-decl "boolean" notequal nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (nz_quat nonempty-type-eq-decl nil quaternions nil))
   nil
   (inv_q_prod_charac subtype
    "restrict[[quat[T, +, *, zero, one, a, b], quat[T, +, *, zero, one, a, b]], [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]].restrict(quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].*)"
    "[[nz_quat, nz_quat] -> nz_quat]")))
 (inv_q_prod_charac_TCC2 0
  (inv_q_prod_charac_TCC3-1 nil 3887803481
   ("" (prop)
    ((""
      (lemma
       "one_ne_zero[quat[T, +, *, zero, one, a, b], +, *, zero_q, one_q]")
      (("1" (assert) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   ((one_q const-decl "quat" quaternions_def nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (+ const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (one_ne_zero formula-decl nil division_ring nil)
    (division_ring? const-decl "bool" division_ring_def nil))
   nil
   (inv_q_prod_charac subtype
    "quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].one_q"
    "nz_quat")))
 (inv_q_prod_charac_TCC3 0
  (inv_q_prod_charac_TCC1-1 nil 3887800816
   ("" (prop)
    (("" (expand "division_ring?")
      (("" (flatten)
        (("" (hide -1)
          (("" (expand "group?")
            (("" (prop)
              (("1" (hide -2)
                (("1" (expand "monoid?")
                  (("1" (prop)
                    (("1" (hide -2)
                      (("1" (expand "monad?")
                        (("1" (prop)
                          (("1" (hide (-2 -3))
                            (("1" (expand "star_closed?")
                              (("1"
                                (skeep)
                                (("1"
                                  (expand "member")
                                  (("1"
                                    (expand "fullset")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide (-1 -3))
                            (("2" (expand "member")
                              (("2"
                                (expand "fullset")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil)
                           ("3" (hide (-1 -2))
                            (("3" (expand "identity?")
                              (("3"
                                (skeep)
                                (("3"
                                  (expand "restrict")
                                  (("3"
                                    (inst?)
                                    (("3"
                                      (expand "remove")
                                      (("3"
                                        (expand "member")
                                        (("3"
                                          (expand "fullset")
                                          (("3" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1)
                      (("2" (expand "associative?")
                        (("2" (expand "restrict")
                          (("2" (skeep)
                            (("2" (inst?)
                              (("1"
                                (expand "remove")
                                (("1"
                                  (expand "member")
                                  (("1"
                                    (expand "fullset")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "remove")
                                (("2"
                                  (expand "member")
                                  (("2"
                                    (expand "fullset")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (expand "remove")
                                (("3"
                                  (expand "member")
                                  (("3"
                                    (expand "fullset")
                                    (("3" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide -1)
                (("2" (expand "inv_exists?")
                  (("2" (skeep)
                    (("2" (inst -1 "x")
                      (("1" (skeep)
                        (("1" (inst?)
                          (("1" (assert) nil nil)
                           ("2" (expand "fullset")
                            (("2" (typepred "y")
                              (("2"
                                (expand "remove")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "remove")
                        (("2" (expand "member")
                          (("2" (expand "fullset")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((division_ring? const-decl "bool" division_ring_def nil)
    (monoid? const-decl "bool" monoid_def nil)
    (x skolem-const-decl "(fullset[nz_quat])" quaternions nil)
    (y skolem-const-decl "(fullset[nz_quat])" quaternions nil)
    (z skolem-const-decl "(fullset[nz_quat])" quaternions nil)
    (associative? const-decl "bool" operator_defs nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (member const-decl "bool" sets nil)
    (fullset const-decl "set" sets nil)
    (identity? const-decl "bool" operator_defs nil)
    (restrict const-decl "R" restrict nil)
    (x skolem-const-decl "(fullset[nz_quat])" quaternions nil)
    (nz_quat nonempty-type-eq-decl nil quaternions nil)
    (/= const-decl "boolean" notequal nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (monad? const-decl "bool" monad_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (x skolem-const-decl "(fullset[nz_quat])" quaternions nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (y skolem-const-decl
     "(remove(zero_q, fullset[quat[T, +, *, zero, one, a, b]]))"
     quaternions nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (group? const-decl "bool" group_def nil))
   nil
   (inv_q_prod_charac assuming
    "group[nz_quat, restrict[[quat[T, +, *, zero, one, a, b], quat[T, +, *, zero, one, a, b]], [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]].restrict(quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].*), quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].one_q].group"
    "fullset_is_group: ASSUMPTION group_def[group.T, group.*, group.one].group?(sets[group.T].fullset)")))
 (inv_q_prod_charac_TCC4 0
  (inv_q_prod_charac_TCC5-1 nil 3887803481
   ("" (prop)
    (("" (skeep)
      (("" (lemma "div_ring_iff_nz_rednorm")
        (("" (assert) (("" (inst?) (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((nz_quat nonempty-type-eq-decl nil quaternions nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (/= const-decl "boolean" notequal nil)
    (quat type-eq-decl nil quaternions_def nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (div_ring_iff_nz_rednorm formula-decl nil quaternions nil))
   nil
   (inv_q_prod_charac subtype
    "quaternions_def[quaternions.T, quaternions.+, quaternions.*, quaternions.zero, quaternions.one, quaternions.a, quaternions.b].red_norm(quaternions.q)"
    "nz_quat")))
 (inv_q_prod_charac 0
  (inv_q_prod_charac-1 nil 3887801468
   ("" (prop)
    (("" (skeep)
      (("" (lemma "unique_inv[nz_quat,*,one_q]")
        (("1"
          (inst -1 "q"
           "conjugate(q) * inv[nz_quat,*,one_q](red_norm(q))")
          (("1" (assert)
            (("1" (hide 2)
              (("1" (split)
                (("1" (expand "red_norm")
                  (("1" (lemma "q_assoc")
                    (("1" (expand "associative?")
                      (("1" (inst?)
                        (("1" (replace -1 1 rl)
                          (("1" (assert) nil nil)) nil)
                         ("2" (hide 2)
                          (("2" (lemma "inv_q_prod_charac_TCC3")
                            (("2" (assert) nil nil)) nil))
                          nil)
                         ("3" (hide (- 2))
                          (("3" (expand* "one_q" "zero_q")
                            (("3" (lemma "one_ne_zero")
                              (("3" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("4" (hide 2)
                          (("4" (skeep)
                            (("4" (lemma "inv_q_prod_charac_TCC1")
                              (("4"
                                (assert)
                                (("4"
                                  (inst?)
                                  (("4" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (lemma "div_ring_iff_nz_rednorm")
                  (("2" (assert)
                    (("2" (inst?)
                      (("2" (copy -2)
                        (("2" (expand "division_ring?" -1)
                          (("2" (expand "group?")
                            (("2" (flatten)
                              (("2"
                                (hide (-1 -2))
                                (("2"
                                  (expand "inv_exists?")
                                  (("2"
                                    (inst -1 "red_norm(q)")
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (lemma
                                         "unique_inv[nz_quat,*,one_q]")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -1 2 rl)
                                              (("1"
                                                (hide (-1 -3))
                                                (("1"
                                                  (expand "red_norm")
                                                  (("1"
                                                    (lemma "q_assoc")
                                                    (("1"
                                                      (expand
                                                       "associative?")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (replaces -1)
                                                          (("1"
                                                            (lemma
                                                             "cancel_times_left[quat[T, +, *, zero, one, a, b], +, * ,zero_q, one_q]")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "inv[nz_quat,*,one_q](q)"
                                                               "q * (conjugate(q) * y)"
                                                               "one_q")
                                                              (("1"
                                                                (prop)
                                                                (("1"
                                                                  (hide
                                                                   -2)
                                                                  (("1"
                                                                    (rewrite
                                                                     "times_one_q")
                                                                    (("1"
                                                                      (name-replace
                                                                       "invq"
                                                                       "inv[nz_quat, restrict [[quat[T, +, *, zero, one, a, b], quat[T, +, *, zero, one, a, b]], [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]] (*), one_q] (q)")
                                                                      (("1"
                                                                        (lemma
                                                                         "q_assoc")
                                                                        (("1"
                                                                          (expand
                                                                           "associative?")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "invq"
                                                                             "q"
                                                                             "conjugate(q) * y")
                                                                            (("1"
                                                                              (replace
                                                                               -1
                                                                               -2
                                                                               rl)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "inv_left[nz_quat,*,one_q]")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "q")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "invq"
                                                                                       -2
                                                                                       1)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "one_q_times")
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "invq")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         (-1
                                                                          -2
                                                                          2
                                                                          3))
                                                                        (("2"
                                                                          (lemma
                                                                           "inv_q_prod_charac_TCC1")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (expand
                                                                                   "restrict")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "inv_q_prod_charac_TCC3")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide
                                                                 (-
                                                                  2
                                                                  3))
                                                                (("3"
                                                                  (expand*
                                                                   "one_q"
                                                                   "zero_q")
                                                                  (("3"
                                                                    (lemma
                                                                     "one_ne_zero")
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (hide
                                                                 (-1
                                                                  2
                                                                  3))
                                                                (("4"
                                                                  (lemma
                                                                   "inv_q_prod_charac_TCC1")
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide (- 2 3))
                                            (("2"
                                              (typepred "y")
                                              (("2"
                                                (expand "remove")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide (2 3))
                                      (("2"
                                        (expand "remove")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (expand "fullset")
                                            (("2"
                                              (lemma
                                               "div_ring_iff_nz_rednorm")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2"
              (lemma
               "nz_times_is_zero[quat[T, +, *, zero, one, a, b], +, *, zero_q]")
              (("1" (inst?)
                (("1"
                  (inst -1 "fullset[quat[T, +, *, zero, one, a, b]]")
                  (("1" (prop)
                    (("1" (hide (-1 -3 -4))
                      (("1" (typepred "q")
                        (("1" (lemma "q_is_zero_iff_conj")
                          (("1" (inst -1 "q") (("1" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide (-1 -3))
                      (("2" (lemma "inv_in[nz_quat,*,one_q]")
                        (("2"
                          (inst -1
                           "remove(zero_q, fullset[quat[T, +, *, zero, one, a, b]])"
                           "red_norm[T, +, *, zero, one, a, b](q)")
                          (("1" (expand "restrict")
                            (("1" (expand "remove")
                              (("1"
                                (flatten)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide -1)
                            (("2" (expand "restrict")
                              (("2"
                                (expand "remove")
                                (("2"
                                  (expand "member")
                                  (("2"
                                    (expand "fullset" 1)
                                    (("2"
                                      (lemma "div_ring_iff_nz_rednorm")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (inst?)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (hide -1)
                            (("3" (expand "division_ring?")
                              (("3"
                                (flatten)
                                (("3"
                                  (hide -1)
                                  (("3"
                                    (expand "group?")
                                    (("3"
                                      (prop)
                                      (("1"
                                        (hide -2)
                                        (("1"
                                          (expand "monoid?")
                                          (("1"
                                            (prop)
                                            (("1"
                                              (hide -2)
                                              (("1"
                                                (expand "monad?")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (hide (-2 -3))
                                                    (("1"
                                                      (expand
                                                       "star_closed?")
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (expand
                                                               "restrict")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (expand
                                                               "remove")
                                                              (("2"
                                                                (expand
                                                                 "member")
                                                                (("2"
                                                                  (expand
                                                                   "fullset")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (hide 2)
                                                            (("3"
                                                              (expand
                                                               "remove")
                                                              (("3"
                                                                (expand
                                                                 "member")
                                                                (("3"
                                                                  (expand
                                                                   "fullset")
                                                                  (("3"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide (-1 -3))
                                                    (("2"
                                                      (expand "member")
                                                      (("2"
                                                        (expand
                                                         "restrict")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (hide (-1 -2))
                                                    (("3"
                                                      (expand
                                                       "identity?")
                                                      (("3"
                                                        (skeep)
                                                        (("3"
                                                          (expand
                                                           "restrict")
                                                          (("3"
                                                            (inst?)
                                                            (("3"
                                                              (hide 2)
                                                              (("3"
                                                                (expand
                                                                 "remove")
                                                                (("3"
                                                                  (expand
                                                                   "member")
                                                                  (("3"
                                                                    (expand
                                                                     "fullset")
                                                                    (("3"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -1)
                                              (("2"
                                                (expand "associative?")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (expand "restrict")
                                                    (("2"
                                                      (inst?)
                                                      (("1"
                                                        (hide 2)
                                                        (("1"
                                                          (expand
                                                           "remove")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (expand
                                                               "fullset")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "remove")
                                                        (("2"
                                                          (expand
                                                           "member")
                                                          (("2"
                                                            (expand
                                                             "fullset")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "remove")
                                                        (("3"
                                                          (expand
                                                           "member")
                                                          (("3"
                                                            (expand
                                                             "fullset")
                                                            (("3"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "inv_exists?")
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (inst -1 "x")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (expand "restrict")
                                                    (("2"
                                                      (typepred "y")
                                                      (("2"
                                                        (expand
                                                         "remove")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "remove")
                                                  (("2"
                                                    (expand "member")
                                                    (("2"
                                                      (expand
                                                       "fullset")
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (hide -1)
                      (("3"
                        (lemma
                         "division_ring_is_ring_nz_closed[quat[T, +, *, zero, one, a, b], +, *, zero_q, one_q]")
                        (("1" (inst?)
                          (("1" (expand "ring_nz_closed?")
                            (("1" (assert) nil nil)) nil))
                          nil)
                         ("2" (propax) nil nil))
                        nil))
                      nil)
                     ("4" (hide -)
                      (("4" (expand "fullset") (("4" (propax) nil nil))
                        nil))
                      nil)
                     ("5" (hide -)
                      (("5" (expand "fullset") (("5" (propax) nil nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (expand "division_ring?")
                      (("2" (expand "ring_with_one?")
                        (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (lemma "inv_q_prod_charac_TCC3")
                    (("2" (assert) nil nil)) nil))
                  nil)
                 ("3" (hide (- 2))
                  (("3" (expand* "one_q" "zero_q")
                    (("3" (lemma "one_ne_zero")
                      (("3" (assert) nil nil)) nil))
                    nil))
                  nil)
                 ("4" (hide 2)
                  (("4" (lemma "inv_q_prod_charac_TCC1")
                    (("4" (assert) nil nil)) nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "division_ring?")
                  (("2" (expand "ring_with_one?")
                    (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil)
           ("3" (hide 2)
            (("3" (lemma "inv_q_prod_charac_TCC3")
              (("3" (assert) nil nil)) nil))
            nil)
           ("4" (hide (- 2))
            (("4" (expand* "one_q" "zero_q")
              (("4" (lemma "one_ne_zero") (("4" (assert) nil nil))
                nil))
              nil))
            nil)
           ("5" (hide 2)
            (("5" (lemma "inv_q_prod_charac_TCC1")
              (("5" (assert) nil nil)) nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (lemma "inv_q_prod_charac_TCC3")
            (("2" (assert) nil nil)) nil))
          nil)
         ("3" (hide (- 2))
          (("3" (expand* "one_q" "zero_q")
            (("3" (lemma "one_ne_zero") (("3" (assert) nil nil)) nil))
            nil))
          nil)
         ("4" (hide 2)
          (("4" (lemma "inv_q_prod_charac_TCC1")
            (("4" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((red_norm const-decl "quat" quaternions_def nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (q skolem-const-decl "nz_quat" quaternions nil)
    (conjugate const-decl "quat" quaternions_def nil)
    (div_ring_iff_nz_rednorm formula-decl nil quaternions nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (y skolem-const-decl
     "(remove(zero_q, fullset[quat[T, +, *, zero, one, a, b]]))"
     quaternions nil)
    (TRUE const-decl "bool" booleans nil)
    (nz_T type-eq-decl nil ring_nz_closed_def nil)
    (inv_left formula-decl nil group nil)
    (invq skolem-const-decl "{y |
   restrict
       [[quat[T, +, *, zero, one, a, b], quat[T, +, *, zero, one, a, b]],
        [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
       (*)(q, y)
    = one_q
    AND
    restrict
        [[quat[T, +, *, zero, one, a, b], quat[T, +, *, zero, one, a, b]],
         [nz_quat, nz_quat], quat[T, +, *, zero, one, a, b]]
        (*)(y, q)
     = one_q}" quaternions nil)
    (one_q_times formula-decl nil quaternions_def nil)
    (times_one_q formula-decl nil quaternions_def nil)
    (+ const-decl "quat" quaternions_def nil)
    (cancel_times_left formula-decl nil division_ring nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil)
    (associative? const-decl "bool" operator_defs nil)
    (inv_q_prod_charac_TCC1 subtype-tcc nil quaternions nil)
    (one_ne_zero formula-decl nil division_ring nil)
    (inv_q_prod_charac_TCC3 assuming-tcc nil quaternions nil)
    (q_assoc formula-decl nil quaternions_def nil)
    (nz_times_is_zero formula-decl nil ring_nz_closed_aux nil)
    (ring? const-decl "bool" ring_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (division_ring nonempty-type-eq-decl nil division_ring nil)
    (ring_nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (division_ring_is_ring_nz_closed judgement-tcc nil division_ring
     nil)
    (group nonempty-type-eq-decl nil group nil)
    (monoid? const-decl "bool" monoid_def nil)
    (x skolem-const-decl
     "(restrict[quat[T, +, *, zero, one, a, b], nz_quat, bool]
     (remove[quat[T, +, *, zero, one, a, b]]
          (zero_q[T, +, *, zero, one, a, b],
           fullset[quat[T, +, *, zero, one, a, b]])))" quaternions nil)
    (y skolem-const-decl
     "(restrict[quat[T, +, *, zero, one, a, b], nz_quat, bool]
     (remove[quat[T, +, *, zero, one, a, b]]
          (zero_q[T, +, *, zero, one, a, b],
           fullset[quat[T, +, *, zero, one, a, b]])))" quaternions nil)
    (z skolem-const-decl
     "(restrict[quat[T, +, *, zero, one, a, b], nz_quat, bool]
     (remove[quat[T, +, *, zero, one, a, b]]
          (zero_q[T, +, *, zero, one, a, b],
           fullset[quat[T, +, *, zero, one, a, b]])))" quaternions nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (x skolem-const-decl
     "(restrict[quat[T, +, *, zero, one, a, b], nz_quat, bool]
     (remove[quat[T, +, *, zero, one, a, b]]
          (zero_q[T, +, *, zero, one, a, b],
           fullset[quat[T, +, *, zero, one, a, b]])))" quaternions nil)
    (y skolem-const-decl
     "(restrict[quat[T, +, *, zero, one, a, b], nz_quat, bool]
     (remove[quat[T, +, *, zero, one, a, b]]
          (zero_q[T, +, *, zero, one, a, b],
           fullset[quat[T, +, *, zero, one, a, b]])))" quaternions nil)
    (identity? const-decl "bool" operator_defs nil)
    (x skolem-const-decl
     "(restrict[quat[T, +, *, zero, one, a, b], nz_quat, bool]
     (remove[quat[T, +, *, zero, one, a, b]]
          (zero_q[T, +, *, zero, one, a, b],
           fullset[quat[T, +, *, zero, one, a, b]])))" quaternions nil)
    (monad? const-decl "bool" monad_def nil)
    (x skolem-const-decl
     "(restrict[quat[T, +, *, zero, one, a, b], nz_quat, bool]
     (remove[quat[T, +, *, zero, one, a, b]]
          (zero_q[T, +, *, zero, one, a, b],
           fullset[quat[T, +, *, zero, one, a, b]])))" quaternions nil)
    (y skolem-const-decl
     "(remove(zero_q, fullset[quat[T, +, *, zero, one, a, b]]))"
     quaternions nil)
    (inv_in formula-decl nil group nil)
    (q_is_zero_iff_conj formula-decl nil quaternions nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (group? const-decl "bool" group_def nil)
    (unique_inv formula-decl nil group nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (/= const-decl "boolean" notequal nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (nz_quat nonempty-type-eq-decl nil quaternions nil)
    (restrict const-decl "R" restrict nil)
    (* const-decl "[quat, quat -> quat]" quaternions_def nil)
    (one_q const-decl "quat" quaternions_def nil))
   SHOSTAK))
 (quat_div_ring_aux1 0
  (quat_div_ring_aux1-1 nil 3885469559
   ("" (prop)
    (("" (skeep)
      (("" (lemma "fullset_is_field")
        (("" (expand "field?")
          (("" (expand "division_ring?")
            (("" (expand "group?")
              (("" (flatten)
                (("" (expand "inv_exists?")
                  (("" (inst -3 "t")
                    (("1" (skeep)
                      (("1" (inst -6 "y" "zero")
                        (("1" (assert)
                          (("1" (lemma "cancel_right_plus")
                            (("1"
                              (inst -1 "t * t + inv[T, +, zero](a)"
                               "zero" "a")
                              (("1"
                                (assert)
                                (("1"
                                  (rewrite "plus_associative")
                                  (("1"
                                    (replace -1 1 rl)
                                    (("1"
                                      (rewrite "times_associative")
                                      (("1"
                                        (rewrite
                                         "times_associative"
                                         :dir
                                         rl)
                                        (("1"
                                          (replace -4 1)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "remove")
                      (("2" (expand "member")
                        (("2" (expand "fullset")
                          (("2" (prop)
                            (("2" (lemma "cancel_right_plus")
                              (("2"
                                (inst
                                 -1
                                 "t * t + inv[T, +, zero](a)"
                                 "zero"
                                 "a")
                                (("2"
                                  (assert)
                                  (("2"
                                    (rewrite "plus_associative" -1)
                                    (("2"
                                      (hide-all-but (-1 -2))
                                      (("2"
                                        (typepred "a")
                                        (("2"
                                          (expand "remove")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (lemma "sq_eq_zero")
                                              (("2"
                                                (inst -1 "t")
                                                (("2"
                                                  (expand "sq")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((field? const-decl "bool" field_def nil)
    (group? const-decl "bool" group_def nil)
    (inv_exists? const-decl "bool" group_def nil)
    (sq_eq_zero formula-decl nil ring_nz_closed nil)
    (sq const-decl "T" ring nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (zero_times formula-decl nil ring nil)
    (times_zero formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (plus_associative formula-decl nil ring nil)
    (negate_is_left_inv formula-decl nil ring nil)
    (times_associative formula-decl nil ring nil)
    (one_times formula-decl nil ring_with_one nil)
    (one formal-const-decl "T" quaternions nil)
    (zero_plus formula-decl nil ring nil)
    (cancel_right_plus formula-decl nil ring nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (zero formal-const-decl "T" quaternions nil)
    (fullset const-decl "set" sets nil)
    (t skolem-const-decl "T" quaternions nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (fullset_is_field formula-decl nil quaternions nil))
   SHOSTAK))
 (quat_div_ring_aux2 0
  (quat_div_ring_aux2-1 nil 3885380630
   ("" (prop)
    (("" (skeep)
      (("" (lemma "fullset_is_field")
        (("" (expand "field?")
          (("" (expand "division_ring?")
            (("" (expand "group?")
              (("" (expand "inv_exists?")
                (("" (flatten)
                  (("" (inst-cp -3 "a + a")
                    (("1" (inst -3 "t")
                      (("1" (skeep*)
                        (("1"
                          (inst -8 "(one+a)*y!1"
                           "(one + inv[T,+,zero](a))*y!1*y")
                          (("1" (prop)
                            (("1" (hide (-1 -2))
                              (("1"
                                (expand "commutative?")
                                (("1"
                                  (expand "restrict")
                                  (("1"
                                    (lemma "times_associative")
                                    (("1"
                                      (inst-cp
                                       -1
                                       "one + a"
                                       "y!1"
                                       "(one + a) * y!1")
                                      (("1"
                                        (replaces -2)
                                        (("1"
                                          (inst-cp
                                           -1
                                           "y!1"
                                           "one + a"
                                           "y!1")
                                          (("1"
                                            (replace -2 2 rl)
                                            (("1"
                                              (hide -2)
                                              (("1"
                                                (inst-cp
                                                 -6
                                                 "y!1"
                                                 "one + a")
                                                (("1"
                                                  (replaces -7)
                                                  (("1"
                                                    (inst-cp
                                                     -1
                                                     "one + a"
                                                     "y!1"
                                                     "y!1")
                                                    (("1"
                                                      (replaces -2)
                                                      (("1"
                                                        (inst-cp
                                                         -1
                                                         "one + a"
                                                         "one + a"
                                                         "y!1 * y!1")
                                                        (("1"
                                                          (replace
                                                           -2
                                                           2
                                                           rl)
                                                          (("1"
                                                            (inst-cp
                                                             -1
                                                             "one + inv[T, +, zero](a)"
                                                             "y!1"
                                                             "y")
                                                            (("1"
                                                              (replaces
                                                               -2)
                                                              (("1"
                                                                (hide
                                                                 -2)
                                                                (("1"
                                                                  (inst-cp
                                                                   -1
                                                                   "one + inv[T, +, zero](a)"
                                                                   "y!1 * y"
                                                                   "(one + inv[T, +, zero](a)) * (y!1 * y)")
                                                                  (("1"
                                                                    (replaces
                                                                     -2)
                                                                    (("1"
                                                                      (inst-cp
                                                                       -1
                                                                       "y!1 * y"
                                                                       "one + inv[T, +, zero](a)"
                                                                       "y!1 * y")
                                                                      (("1"
                                                                        (replace
                                                                         -2
                                                                         2
                                                                         rl)
                                                                        (("1"
                                                                          (hide
                                                                           -2)
                                                                          (("1"
                                                                            (inst-cp
                                                                             -6
                                                                             "y!1 * y"
                                                                             "one + inv[T, +, zero](a)")
                                                                            (("1"
                                                                              (replaces
                                                                               -7)
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -1
                                                                                 "one + inv[T, +, zero](a)"
                                                                                 "y!1 * y"
                                                                                 "y!1 * y")
                                                                                (("1"
                                                                                  (replaces
                                                                                   -2)
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -1
                                                                                     "one + inv[T, +, zero](a)"
                                                                                     "one + inv[T, +, zero](a)"
                                                                                     "y!1 * y * (y!1 * y)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -2
                                                                                       2
                                                                                       rl)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -2)
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -1
                                                                                           "y!1"
                                                                                           "y"
                                                                                           "y!1 * y")
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -2)
                                                                                            (("1"
                                                                                              (inst-cp
                                                                                               -6
                                                                                               "y"
                                                                                               "y!1 * y")
                                                                                              (("1"
                                                                                                (replaces
                                                                                                 -7)
                                                                                                (("1"
                                                                                                  (inst-cp
                                                                                                   -1
                                                                                                   "y!1"
                                                                                                   "y"
                                                                                                   "y")
                                                                                                  (("1"
                                                                                                    (replaces
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (inst-cp
                                                                                                       -1
                                                                                                       "y!1"
                                                                                                       "y!1"
                                                                                                       "y * y")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -2
                                                                                                         2
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (rewrite*
                                                                                                             "sq_rew")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "sq_plus")
                                                                                                              (("1"
                                                                                                                (inst-cp
                                                                                                                 -1
                                                                                                                 "one"
                                                                                                                 "a")
                                                                                                                (("1"
                                                                                                                  (replaces
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "one"
                                                                                                                     "inv[T, +, zero](a)")
                                                                                                                    (("1"
                                                                                                                      (replaces
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "sq"
                                                                                                                         2
                                                                                                                         (1
                                                                                                                          4))
                                                                                                                        (("1"
                                                                                                                          (rewrite*
                                                                                                                           "one_times")
                                                                                                                          (("1"
                                                                                                                            (rewrite*
                                                                                                                             "times_one")
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "left_distributive")
                                                                                                                              (("1"
                                                                                                                                (inst-cp
                                                                                                                                 -1
                                                                                                                                 "one + a + a"
                                                                                                                                 "sq(a)"
                                                                                                                                 "sq(y!1)")
                                                                                                                                (("1"
                                                                                                                                  (replaces
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "right_distributive")
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -1
                                                                                                                                       "a"
                                                                                                                                       "((one + a + a) * sq(y!1))"
                                                                                                                                       "sq(a) * sq(y!1)")
                                                                                                                                      (("1"
                                                                                                                                        (replaces
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (inst-cp
                                                                                                                                           -2
                                                                                                                                           "one + a"
                                                                                                                                           "a"
                                                                                                                                           "sq(y!1)")
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -3)
                                                                                                                                            (("1"
                                                                                                                                              (inst-cp
                                                                                                                                               -2
                                                                                                                                               "one"
                                                                                                                                               "a"
                                                                                                                                               "sq(y!1)")
                                                                                                                                              (("1"
                                                                                                                                                (inst-cp
                                                                                                                                                 -1
                                                                                                                                                 "a"
                                                                                                                                                 "(one + a) * sq(y!1)"
                                                                                                                                                 "a * sq(y!1)")
                                                                                                                                                (("1"
                                                                                                                                                  (replaces
                                                                                                                                                   -2)
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -3)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst-cp
                                                                                                                                                       -1
                                                                                                                                                       "a"
                                                                                                                                                       "one * sq(y!1)"
                                                                                                                                                       "a * sq(y!1)")
                                                                                                                                                      (("1"
                                                                                                                                                        (replaces
                                                                                                                                                         -2)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst-cp
                                                                                                                                                           -2
                                                                                                                                                           "one + inv[T, +, zero](a) + inv[T, +, zero](a)"
                                                                                                                                                           "sq(inv[T, +, zero](a))"
                                                                                                                                                           "sq(y!1) * sq(y)")
                                                                                                                                                          (("1"
                                                                                                                                                            (replaces
                                                                                                                                                             -3)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst-cp
                                                                                                                                                               -1
                                                                                                                                                               "b"
                                                                                                                                                               "(one + inv[T, +, zero](a) + inv[T, +, zero](a)) * (sq(y!1) * sq(y))"
                                                                                                                                                               "sq(inv[T, +, zero](a)) * (sq(y!1) * sq(y))")
                                                                                                                                                              (("1"
                                                                                                                                                                (replaces
                                                                                                                                                                 -2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst-cp
                                                                                                                                                                   -2
                                                                                                                                                                   "one + inv[T, +, zero](a)"
                                                                                                                                                                   "inv[T, +, zero](a)"
                                                                                                                                                                   "sq(y!1) * sq(y)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -3)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst-cp
                                                                                                                                                                       -1
                                                                                                                                                                       "b"
                                                                                                                                                                       "(one + inv[T, +, zero](a)) * (sq(y!1) * sq(y))"
                                                                                                                                                                       "inv[T, +, zero](a) * (sq(y!1) * sq(y))")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst-cp
                                                                                                                                                                           -2
                                                                                                                                                                           "one"
                                                                                                                                                                           "inv[T, +, zero](a)"
                                                                                                                                                                           "sq(y!1) * sq(y)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replaces
                                                                                                                                                                             -3)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst-cp
                                                                                                                                                                               -1
                                                                                                                                                                               "b"
                                                                                                                                                                               "one * (sq(y!1) * sq(y))"
                                                                                                                                                                               "inv[T, +, zero](a) * (sq(y!1) * sq(y))")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replaces
                                                                                                                                                                                 -2)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite*
                                                                                                                                                                                   "one_times")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (s_plus_permute
                                                                                                                                                                                     (5
                                                                                                                                                                                      1
                                                                                                                                                                                      2
                                                                                                                                                                                      3
                                                                                                                                                                                      4))
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (s_plus_permute
                                                                                                                                                                                       (1
                                                                                                                                                                                        5
                                                                                                                                                                                        2
                                                                                                                                                                                        3
                                                                                                                                                                                        4))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst-cp
                                                                                                                                                                                         -8
                                                                                                                                                                                         "sq(y!1)"
                                                                                                                                                                                         "sq(y)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replaces
                                                                                                                                                                                           -9)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                             -3
                                                                                                                                                                                             "b"
                                                                                                                                                                                             "sq(y)"
                                                                                                                                                                                             "sq(y!1)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -4
                                                                                                                                                                                               2
                                                                                                                                                                                               rl)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (hide
                                                                                                                                                                                                 -4)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                                   -2
                                                                                                                                                                                                   "b * sq(y)"
                                                                                                                                                                                                   "a"
                                                                                                                                                                                                   "sq(y!1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -3
                                                                                                                                                                                                     2
                                                                                                                                                                                                     rl)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       -3)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (case-replace
                                                                                                                                                                                                         "b * sq(y) + a = a * sq(t) + b")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -10
                                                                                                                                                                                                           2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst-cp
                                                                                                                                                                                                               -4
                                                                                                                                                                                                               "a"
                                                                                                                                                                                                               "a"
                                                                                                                                                                                                               "sq(y!1)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -5
                                                                                                                                                                                                                 2
                                                                                                                                                                                                                 rl)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (hide
                                                                                                                                                                                                                   -5)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                     "sq_rew")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                                       "sq_neg")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (s_plus_permute
                                                                                                                                                                                                                         (3
                                                                                                                                                                                                                          6
                                                                                                                                                                                                                          1
                                                                                                                                                                                                                          2
                                                                                                                                                                                                                          4
                                                                                                                                                                                                                          5))
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst-cp
                                                                                                                                                                                                                           -9
                                                                                                                                                                                                                           "sq(a)"
                                                                                                                                                                                                                           "sq(y) * sq(y!1)")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (replaces
                                                                                                                                                                                                                             -10)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst-cp
                                                                                                                                                                                                                               -9
                                                                                                                                                                                                                               "sq(a)"
                                                                                                                                                                                                                               "sq(y!1)")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (replaces
                                                                                                                                                                                                                                 -10)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                                                                   -4
                                                                                                                                                                                                                                   "sq(y)"
                                                                                                                                                                                                                                   "sq(y!1)"
                                                                                                                                                                                                                                   "sq(a)")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                                     -5)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                                                       -4
                                                                                                                                                                                                                                       "b"
                                                                                                                                                                                                                                       "sq(y)"
                                                                                                                                                                                                                                       "sq(y!1) * sq(a)")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                         -5
                                                                                                                                                                                                                                         2
                                                                                                                                                                                                                                         rl)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                                           -5)
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                                                                             -3
                                                                                                                                                                                                                                             "b * sq(y)"
                                                                                                                                                                                                                                             "a"
                                                                                                                                                                                                                                             "sq(y!1) * sq(a)")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                               -4
                                                                                                                                                                                                                                               2
                                                                                                                                                                                                                                               rl)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                                                 -4)
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                                                   2)
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                     -10
                                                                                                                                                                                                                                                     2)
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (inst-cp
                                                                                                                                                                                                                                                         -4
                                                                                                                                                                                                                                                         "b"
                                                                                                                                                                                                                                                         "inv[T, +, zero](a)"
                                                                                                                                                                                                                                                         "sq(y) * sq(y!1)")
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                                           -5
                                                                                                                                                                                                                                                           2
                                                                                                                                                                                                                                                           rl)
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                             -5)
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                                                                               "times_negative")
                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                (inst-cp
                                                                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                                                                 "b"
                                                                                                                                                                                                                                                                 "a")
                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                    (inst-cp
                                                                                                                                                                                                                                                                     -10
                                                                                                                                                                                                                                                                     "b"
                                                                                                                                                                                                                                                                     "a")
                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                                                                                       -11)
                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                                                                         "a"
                                                                                                                                                                                                                                                                         "b")
                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                                                                           2
                                                                                                                                                                                                                                                                           rl)
                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                                             -1)
                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                              (inst-cp
                                                                                                                                                                                                                                                                               -4
                                                                                                                                                                                                                                                                               "a"
                                                                                                                                                                                                                                                                               "(inv(b))"
                                                                                                                                                                                                                                                                               "sq(y) * sq(y!1)")
                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                (replaces
                                                                                                                                                                                                                                                                                 -5)
                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                                                                                                                   -4
                                                                                                                                                                                                                                                                                   "inv(b)"
                                                                                                                                                                                                                                                                                   "sq(y)"
                                                                                                                                                                                                                                                                                   "sq(y!1)")
                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                                                     -5
                                                                                                                                                                                                                                                                                     2
                                                                                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                      (case-replace
                                                                                                                                                                                                                                                                                       "inv(b) * sq(y) = a")
                                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                                        (hide
                                                                                                                                                                                                                                                                                         (-1
                                                                                                                                                                                                                                                                                          -2
                                                                                                                                                                                                                                                                                          -6
                                                                                                                                                                                                                                                                                          -7
                                                                                                                                                                                                                                                                                          -8
                                                                                                                                                                                                                                                                                          -12
                                                                                                                                                                                                                                                                                          1))
                                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                                          (inst-cp
                                                                                                                                                                                                                                                                                           -6
                                                                                                                                                                                                                                                                                           "sq(y!1)"
                                                                                                                                                                                                                                                                                           "sq(a)")
                                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                                            (replaces
                                                                                                                                                                                                                                                                                             -7)
                                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                                                               "sq"
                                                                                                                                                                                                                                                                                               1
                                                                                                                                                                                                                                                                                               (3
                                                                                                                                                                                                                                                                                                5))
                                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                                (inst-cp
                                                                                                                                                                                                                                                                                                 -3
                                                                                                                                                                                                                                                                                                 "a"
                                                                                                                                                                                                                                                                                                 "a"
                                                                                                                                                                                                                                                                                                 "sq(y!1)")
                                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                                                                   -4
                                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                                   rl)
                                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                                                                                                     -4)
                                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                                                                                                                       "plus_associative")
                                                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                                                        (inst-cp
                                                                                                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                                                                                                         "(a * a) * sq(y!1) + (a * a) * sq(y!1)"
                                                                                                                                                                                                                                                                                                         "(a * a * sq(y!1))"
                                                                                                                                                                                                                                                                                                         "(a * a * sq(y!1))")
                                                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                                                          (replaces
                                                                                                                                                                                                                                                                                                           -2)
                                                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                                                                                                                                             -3
                                                                                                                                                                                                                                                                                                             "a * a"
                                                                                                                                                                                                                                                                                                             "a * a"
                                                                                                                                                                                                                                                                                                             "sq(y!1)")
                                                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                                                                               -4
                                                                                                                                                                                                                                                                                                               1
                                                                                                                                                                                                                                                                                                               rl)
                                                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                                                                                                                 -4)
                                                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                                                                                                                                                   -2
                                                                                                                                                                                                                                                                                                                   "a"
                                                                                                                                                                                                                                                                                                                   "a"
                                                                                                                                                                                                                                                                                                                   "a")
                                                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                                                                                     -3
                                                                                                                                                                                                                                                                                                                     1
                                                                                                                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                                                      (hide
                                                                                                                                                                                                                                                                                                                       -3)
                                                                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                                                                        (inst-cp
                                                                                                                                                                                                                                                                                                                         -3
                                                                                                                                                                                                                                                                                                                         "a * (a + a)"
                                                                                                                                                                                                                                                                                                                         "a * (a + a)"
                                                                                                                                                                                                                                                                                                                         "sq(y!1)")
                                                                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                                                                                                           -4
                                                                                                                                                                                                                                                                                                                           1
                                                                                                                                                                                                                                                                                                                           rl)
                                                                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                                                                                             -4)
                                                                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                                                                              (inst-cp
                                                                                                                                                                                                                                                                                                                               -3
                                                                                                                                                                                                                                                                                                                               "a"
                                                                                                                                                                                                                                                                                                                               "a"
                                                                                                                                                                                                                                                                                                                               "a + a")
                                                                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                                                                                                                 -4
                                                                                                                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                                                                                                                 rl)
                                                                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                                                                                   "sq"
                                                                                                                                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                                                                                                                                     -4)
                                                                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                                                                                                                                                       -4
                                                                                                                                                                                                                                                                                                                                       "(a + a) * (a + a)"
                                                                                                                                                                                                                                                                                                                                       "y!1"
                                                                                                                                                                                                                                                                                                                                       "y!1")
                                                                                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                                                                                                                         -5
                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                         rl)
                                                                                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                                                                                                                                           -5)
                                                                                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                                                                                                                                                                             -4
                                                                                                                                                                                                                                                                                                                                             "a + a"
                                                                                                                                                                                                                                                                                                                                             "a + a"
                                                                                                                                                                                                                                                                                                                                             "y!1")
                                                                                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                                                                                              (replaces
                                                                                                                                                                                                                                                                                                                                               -5)
                                                                                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                                                                                                                                 -5
                                                                                                                                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                                                             "fullset")
                                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                                                                           ("3"
                                                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                                                             "fullset")
                                                                                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                                                                        (hide
                                                                                                                                                                                                                                                                                         (-1
                                                                                                                                                                                                                                                                                          -5
                                                                                                                                                                                                                                                                                          -8
                                                                                                                                                                                                                                                                                          -9
                                                                                                                                                                                                                                                                                          2
                                                                                                                                                                                                                                                                                          3))
                                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                                                                                           "cancel_right_minus")
                                                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                                                                             -1
                                                                                                                                                                                                                                                                                             "a * sq(t) + b"
                                                                                                                                                                                                                                                                                             "zero"
                                                                                                                                                                                                                                                                                             "b")
                                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                                (lemma
                                                                                                                                                                                                                                                                                                 "plus_associative")
                                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                                        (lemma
                                                                                                                                                                                                                                                                                                         "nzd_R_cancel_right")
                                                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                                                                                                           "fullset_is_field")
                                                                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                                                                             "field?")
                                                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                                                                                                                 -2)
                                                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                                                                                   -2
                                                                                                                                                                                                                                                                                                                   "fullset[T]")
                                                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                                                                                                                     "division_ring_is_ring_nz_closed")
                                                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                                                                                                         "ring_nz_closed?")
                                                                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                                                                                             (-1
                                                                                                                                                                                                                                                                                                                              -3))
                                                                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                                                                              (prop)
                                                                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                                                                                                                                 "sq(y)"
                                                                                                                                                                                                                                                                                                                                 "a * sq(t)"
                                                                                                                                                                                                                                                                                                                                 "inv(b)")
                                                                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                                                                  (prop)
                                                                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                                                                                                                                                       "y")
                                                                                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                                                                                                                         "remove")
                                                                                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                                                                                                                                             -1)
                                                                                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                                                                                                               "sq")
                                                                                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                                                                                (lemma
                                                                                                                                                                                                                                                                                                                                                 "times_is_zero")
                                                                                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                                                                                                                                       -6
                                                                                                                                                                                                                                                                                                                                       "a"
                                                                                                                                                                                                                                                                                                                                       "sq(t)"
                                                                                                                                                                                                                                                                                                                                       "sq(y)")
                                                                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                                                                        (replaces
                                                                                                                                                                                                                                                                                                                                         -6)
                                                                                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                                                                                                                                           "sq_times")
                                                                                                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                                                                                                                             -1
                                                                                                                                                                                                                                                                                                                                             "t"
                                                                                                                                                                                                                                                                                                                                             "y")
                                                                                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                                                                                                               -1
                                                                                                                                                                                                                                                                                                                                               -2
                                                                                                                                                                                                                                                                                                                                               rl)
                                                                                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                                                                                                                                                                   -6)
                                                                                                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                                                                                     "sq"
                                                                                                                                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                                                                                   "fullset")
                                                                                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                                                                                                                 ("3"
                                                                                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                                                                                   "fullset")
                                                                                                                                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                                                                                                                 ("4"
                                                                                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                                                                                   "fullset")
                                                                                                                                                                                                                                                                                                                                  (("4"
                                                                                                                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                                                     "division_ring?")
                                                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                                                                       "ring_with_one?")
                                                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                       "fullset")
                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                       "fullset")
                                                                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "fullset")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                               ("3"
                                                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "fullset")
                                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "fullset")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("3"
                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "fullset")
                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (hide
                                                                                                                                                                                                           (-6
                                                                                                                                                                                                            -7
                                                                                                                                                                                                            2
                                                                                                                                                                                                            3))
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "nzd_R_cancel_right")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "fullset_is_field")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "field?")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       -2
                                                                                                                                                                                                                       "fullset[T]")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (lemma
                                                                                                                                                                                                                         "division_ring_is_ring_nz_closed")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "ring_nz_closed?")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                                 (-1
                                                                                                                                                                                                                                  -3))
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (prop)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                     "sq(y)"
                                                                                                                                                                                                                                     "a * sq(t) + b"
                                                                                                                                                                                                                                     "zero")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                         -4
                                                                                                                                                                                                                                         "a * sq(t)"
                                                                                                                                                                                                                                         "b"
                                                                                                                                                                                                                                         "sq(y)")
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (replaces
                                                                                                                                                                                                                                           -4)
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                             -4
                                                                                                                                                                                                                                             "a"
                                                                                                                                                                                                                                             "sq(t)"
                                                                                                                                                                                                                                             "sq(y)")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (replaces
                                                                                                                                                                                                                                               -4)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (lemma
                                                                                                                                                                                                                                                 "sq_times")
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                                                   "t"
                                                                                                                                                                                                                                                   "y")
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                                     -2
                                                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (hide
                                                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (replaces
                                                                                                                                                                                                                                                         -4)
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                                                           "sq_rew")
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                                             -1
                                                                                                                                                                                                                                                             "one")
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                               -1
                                                                                                                                                                                                                                                               -2
                                                                                                                                                                                                                                                               rl)
                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                    (reveal
                                                                                                                                                                                                                                                                     -11)
                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                       "ring?")
                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                                                         "abelian_group?")
                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                                                                             (-2
                                                                                                                                                                                                                                                                              -7
                                                                                                                                                                                                                                                                              -12
                                                                                                                                                                                                                                                                              1))
                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                                               "commutative?")
                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                                                 "restrict")
                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                     "fullset")
                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                                                                   ("3"
                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                     "fullset")
                                                                                                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                       "fullset")
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                       "fullset")
                                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                       "fullset")
                                                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                                         (-1
                                                                                                                                                                                                                          1))
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "division_ring?")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "ring_with_one?")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "fullset")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("3"
                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "fullset")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("3"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("3"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "fullset")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("3"
                                                                                (expand
                                                                                 "fullset")
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (expand "fullset")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (hide-all-but 1)
                                                  (("3"
                                                    (expand "fullset")
                                                    (("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide-all-but (-6 1))
                        (("2" (expand "remove")
                          (("2" (expand "member")
                            (("2" (expand "fullset")
                              (("2"
                                (prop)
                                (("2"
                                  (replace -1 -2 rl)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (typepred "b")
                                      (("2"
                                        (expand "remove")
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide (-2 -3 -4 -5))
                      (("2" (typepred "a")
                        (("2" (expand "remove")
                          (("2" (expand "member")
                            (("2" (expand "fullset" (-1 1))
                              (("2"
                                (prop)
                                (("2"
                                  (case "N(fullset[T])(2)")
                                  (("1"
                                    (expand "charac")
                                    (("1"
                                      (lift-if)
                                      (("1"
                                        (prop)
                                        (("1"
                                          (expand "empty?")
                                          (("1"
                                            (inst -1 2)
                                            (("1"
                                              (expand "member")
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (lemma "min_def[posnat]")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (prop)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "minimum?")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (case-replace
                                                         "x=1"
                                                         :hide?
                                                         t)
                                                        (("1"
                                                          (hide -2)
                                                          (("1"
                                                            (expand
                                                             "N")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "a")
                                                              (("1"
                                                                (expand
                                                                 "times")
                                                                (("1"
                                                                  (expand
                                                                   "^")
                                                                  (("1"
                                                                    (expand
                                                                     "power")
                                                                    (("1"
                                                                      (expand
                                                                       "power")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 3)
                                    (("2"
                                      (expand "N")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (expand "times")
                                          (("2"
                                            (expand "^")
                                            (("2"
                                              (expand "power")
                                              (("2"
                                                (expand "power")
                                                (("2"
                                                  (expand "power")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (hide -2)
                                                      (("2"
                                                        (lemma
                                                         "fullset_is_field")
                                                        (("2"
                                                          (expand
                                                           "field?")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (lemma
                                                                 "division_ring_is_ring_nz_closed")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (expand
                                                                     "ring_nz_closed?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (lemma
                                                                         "nzd_R_cancel_right")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "a"
                                                                               "x + x"
                                                                               "zero")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (hide
                                                                                   (-1
                                                                                    -2
                                                                                    -3))
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "left_distributive")
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "right_distributive")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1
                                                                                           1
                                                                                           rl)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -2
                                                                                             1
                                                                                             rl)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "fullset")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "fullset")
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (expand
                                                                                 "fullset")
                                                                                (("4"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((field? const-decl "bool" field_def nil)
    (group? const-decl "bool" group_def nil)
    (N const-decl "set[posnat]" ring_characteristic_def nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (min_def formula-decl nil min_nat nil)
    (minimum? const-decl "bool" min_nat nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (^ const-decl "T" group nil) (power def-decl "T" monoid_def nil)
    (times const-decl "T" ring_basic_properties nil)
    (nonempty? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (charac const-decl "nat" ring_characteristic_def nil)
    (x skolem-const-decl "(fullset[T])" quaternions nil)
    (t skolem-const-decl "T" quaternions nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (one formal-const-decl "T" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (restrict const-decl "R" restrict nil)
    (sq_plus formula-decl nil ring nil)
    (one_times formula-decl nil ring_with_one nil)
    (left_distributive formula-decl nil ring nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (abelian_group? const-decl "bool" group_def nil)
    (sq_neg formula-decl nil ring nil)
    (times_negative formula-decl nil ring nil)
    (plus_associative formula-decl nil ring nil)
    (cancel_right_minus formula-decl nil ring nil)
    (negate_is_right_inv formula-decl nil ring nil)
    (plus_zero formula-decl nil ring nil)
    (ring? const-decl "bool" ring_def nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (division_ring nonempty-type-eq-decl nil division_ring nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (times_is_zero formula-decl nil ring_nz_closed nil)
    (sq_times formula-decl nil commutative_ring nil)
    (ring_nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (division_ring_is_ring_nz_closed judgement-tcc nil division_ring
     nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (nzd_R_cancel_right formula-decl nil ring_nz_closed_aux nil)
    (plus_heading_sixth formula-decl nil pvs_strategies_lemmas nil)
    (zero_plus formula-decl nil ring nil)
    (zero_times formula-decl nil ring nil)
    (plus_heading_fifth formula-decl nil pvs_strategies_lemmas nil)
    (plus_heading_fourth formula-decl nil pvs_strategies_lemmas nil)
    (right_distributive formula-decl nil ring nil)
    (times_one formula-decl nil ring_with_one nil)
    (sq const-decl "T" ring nil) (sq_rew formula-decl nil ring nil)
    (y skolem-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (y!1 skolem-const-decl "(remove(zero, fullset[T]))" quaternions
     nil)
    (times_associative formula-decl nil ring nil)
    (commutative? const-decl "bool" operator_defs nil)
    (TRUE const-decl "bool" booleans nil)
    (times_zero formula-decl nil ring nil)
    (member const-decl "bool" sets nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (zero formal-const-decl "T" quaternions nil)
    (fullset const-decl "set" sets nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (inv_exists? const-decl "bool" group_def nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (fullset_is_field formula-decl nil quaternions nil))
   SHOSTAK))
 (quat_div_ring_char 0
  (quat_div_ring_char-1 nil 3885927768
   ("" (rewrite "div_ring_iff_nz_rednorm")
    (("" (prop)
      (("1" (skeep)
        (("1" (rewrite "red_norm_charac")
          (("1" (decompose-equality)
            (("1" (expand "zero_q")
              (("1" (hide -1 -3 -4)
                (("1"
                  (case "q`x * q`x + inv(a) * (q`y * q`y) = b*(q`z * q`z + inv(a)* (q`t * q`t))")
                  (("1" (lemma "quat_div_ring_aux1")
                    (("1" (lemma "quat_div_ring_aux2")
                      (("1" (prop)
                        (("1"
                          (case "(q`x * q`x + inv(a) * (q`y * q`y)) * (q`z * q`z + inv(a) * (q`t * q`t)) = (b * (q`z * q`z + inv(a) * (q`t * q`t))) * (q`z * q`z + inv(a) * (q`t * q`t ))")
                          (("1" (lemma "left_distributive")
                            (("1" (lemma "right_distributive")
                              (("1"
                                (inst-cp
                                 -2
                                 "q`x * q`x"
                                 "inv(a) * (q`y * q`y)"
                                 "q`z * q`z + inv(a) * (q`t * q`t)")
                                (("1"
                                  (replaces -3)
                                  (("1"
                                    (inst-cp
                                     -1
                                     "q`x * q`x"
                                     "q`z * q`z"
                                     "inv(a) * (q`t * q`t)")
                                    (("1"
                                      (replaces -2)
                                      (("1"
                                        (inst-cp
                                         -1
                                         "inv(a) * (q`y * q`y)"
                                         "q`z * q`z"
                                         "inv(a) * (q`t * q`t)")
                                        (("1"
                                          (replaces -2)
                                          (("1"
                                            (rewrite* "sq_rew")
                                            (("1"
                                              (case-replace
                                               "inv(a) * sq(q`y) * (inv(a) * sq(q`t)) = sq(a) * sq(q`y) * sq(q`t)"
                                               :hide?
                                               t)
                                              (("1"
                                                (case
                                                 "sq(q`x * q`z + a * q`y * q`t) = a * sq(q`x * q`t + q`y * q`z) + b * sq(sq(q`z) + inv(a) * sq(q`t))")
                                                (("1"
                                                  (hide -4)
                                                  (("1"
                                                    (case
                                                     "q`x * q`z + a * q`y * q`t /= zero")
                                                    (("1"
                                                      (lemma
                                                       "fullset_is_field")
                                                      (("1"
                                                        (expand
                                                         "field?")
                                                        (("1"
                                                          (expand
                                                           "division_ring?")
                                                          (("1"
                                                            (expand
                                                             "ring_with_one?")
                                                            (("1"
                                                              (expand
                                                               "monoid?")
                                                              (("1"
                                                                (expand
                                                                 "monad?")
                                                                (("1"
                                                                  (expand
                                                                   "group?")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       -3
                                                                       -4
                                                                       -5
                                                                       -6
                                                                       -8)
                                                                      (("1"
                                                                        (expand
                                                                         "inv_exists?")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "q`x * q`z + a * q`y * q`t")
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (inst
                                                                               -10
                                                                               "(q`x * q`t + q`y * q`z)*y_1"
                                                                               "(sq(q`z) + inv(a) * sq(q`t))*y_1")
                                                                              (("1"
                                                                                (prop)
                                                                                (("1"
                                                                                  (case
                                                                                   "sq(q`x * q`z + a * q`y * q`t) * sq(y_1) = a * (sq(q`x * q`t + q`y * q`z) * sq(y_1)) + b * (sq(sq(q`z) + inv(a) * sq(q`t)) * sq(y_1))")
                                                                                  (("1"
                                                                                    (rewrite*
                                                                                     "sq_times"
                                                                                     :dir
                                                                                     rl)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -2
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sq"
                                                                                         -1
                                                                                         1)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sq"
                                                                                             -1
                                                                                             (1
                                                                                              2))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "nzd_R_cancel_right")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (prop)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "sq(y_1)"
                                                                                           "sq(q`x * q`z + a * q`y * q`t)"
                                                                                           "a * sq(q`x * q`t + q`y * q`z) + b * sq(sq(q`z) + inv(a) * sq(q`t))")
                                                                                          (("1"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "y_1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "remove")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sq")
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-3
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "times_is_zero")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (inst
                                                                                               -7
                                                                                               "a * sq(q`x * q`t + q`y * q`z) "
                                                                                               "b * sq(sq(q`z) + inv(a) * sq(q`t))"
                                                                                               "sq(y_1)")
                                                                                              (("2"
                                                                                                (replaces
                                                                                                 -7)
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (rewrite*
                                                                                                     "times_associative")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "fullset")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (expand
                                                                                             "fullset")
                                                                                            (("3"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (expand
                                                                                             "fullset")
                                                                                            (("4"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "fullset_is_field")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "field?")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "division_ring_is_ring_nz_closed")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "ring_nz_closed?")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "remove")
                                                                            (("2"
                                                                              (prop)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "member")
                                                                                (("2"
                                                                                  (expand
                                                                                   "fullset")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (prop)
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (rewrite
                                                           "sq_zero")
                                                          (("2"
                                                            (case
                                                             "sq(q`z) + inv(a) * sq(q`t) /= zero")
                                                            (("1"
                                                              (lemma
                                                               "fullset_is_field")
                                                              (("1"
                                                                (expand
                                                                 "field?")
                                                                (("1"
                                                                  (expand
                                                                   "division_ring?")
                                                                  (("1"
                                                                    (expand
                                                                     "group?")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (hide
                                                                         -1
                                                                         -2
                                                                         -4)
                                                                        (("1"
                                                                          (expand
                                                                           "inv_exists?")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "sq(q`z) + inv(a) * sq(q`t)")
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (inst
                                                                                 -7
                                                                                 "(q`x * q`t + q`y * q`z) * y")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "nzd_R_cancel_right")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "sq(y)"
                                                                                         "zero"
                                                                                         "a * sq(q`x * q`t + q`y * q`z) + b * sq(sq(q`z) + inv(a) * sq(q`t))")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -6
                                                                                             "a * sq(q`x * q`t + q`y * q`z)"
                                                                                             "b * sq(sq(q`z) + inv(a) * sq(q`t))"
                                                                                             "sq(y)")
                                                                                            (("1"
                                                                                              (replaces
                                                                                               -6)
                                                                                              (("1"
                                                                                                (rewrite*
                                                                                                 "times_associative")
                                                                                                (("1"
                                                                                                  (rewrite*
                                                                                                   "sq_times"
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (replaces
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sq"
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sq"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (rewrite*
                                                                                                             "times_associative")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "fullset")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "fullset")
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("4"
                                                                                          (expand
                                                                                           "fullset")
                                                                                          (("4"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "fullset_is_field")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "field?")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "division_ring_is_ring_nz_closed")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "ring_nz_closed?")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "remove")
                                                                              (("2"
                                                                                (prop)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "ring?(fullset[T])")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "R_sum_star_closed")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "sq"
                                                                                       1)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "R_prod_star_closed")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "fullset[T]"
                                                                                           "q`z"
                                                                                           "q`z")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "fullset")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "R_prod_star_closed")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "fullset[T]"
                                                                                         "inv(a)"
                                                                                         "sq(q`t)")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "member")
                                                                                          (("2"
                                                                                            (split)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "inv_is_member_R")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "fullset[T]"
                                                                                                 "a")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "sq")
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "R_prod_star_closed")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "fullset[T]"
                                                                                                   "q`t"
                                                                                                   "q`t")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "member")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "fullset")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "fullset_is_field")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "field?")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "division_ring?")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "ring_with_one?")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "group? [(remove(zero, fullset[T])), restrict [[T, T], [(remove[T](zero, fullset[T])), (remove[T](zero, fullset[T]))], T] (*), one] (fullset[(remove[T](zero, fullset[T]))])AND remove[T](zero, fullset[T])(one) AND FORALL (x1: [(remove[T](zero , fullset[T])), (remove[T](zero, fullset[T]))]): remove[T](zero, fullset[T])(*(x1))")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (case
                                                                   "q`t /= zero")
                                                                  (("1"
                                                                    (lemma
                                                                     "left_distributive")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "sq(q`z)"
                                                                       "inv(a) * sq(q`t)"
                                                                       "inv[(remove(zero,fullset[T])),*,one](sq(q`t))")
                                                                      (("1"
                                                                        (replaces
                                                                         -6)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (rewrite
                                                                             "times_associative")
                                                                            (("1"
                                                                              (case-replace
                                                                               "(sq(q`t) * inv[(remove(zero, fullset[T])), restrict [[T, T], [(remove[T](zero, fullset[T])), (remove[T](zero, fullset[T]))], T] (*), one] (sq(q`t))) = one")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "inv_power[(remove(zero,fullset[T])),*,one]")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "q`t"
                                                                                       "2")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "power")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "power")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "power")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (rewrite*
                                                                                                 "sq_rew")
                                                                                                (("1"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "sq_times"
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (inst-cp
                                                                                                       -9
                                                                                                       "q`z * inv[(remove(zero,fullset[T])),*,one](q`t)")
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          -10))
                                                                                                        (("1"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-2
                                                                                          1))
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (rewrite
                                                                                 "inv_right[(remove(zero,fullset[T])),*,one]")
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-1
                                                                          1))
                                                                        (("2"
                                                                          (expand
                                                                           "remove")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (expand
                                                                               "fullset")
                                                                              (("2"
                                                                                (prop)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "sq_eq_zero")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -1
                                                                                     "q`t")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (prop)
                                                                    (("2"
                                                                      (replace
                                                                       -1
                                                                       -5)
                                                                      (("2"
                                                                        (rewrite
                                                                         "sq_zero")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "sq_eq_zero")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "q`z")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (replace
                                                                                   -1
                                                                                   -12)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -2
                                                                                     -12)
                                                                                    (("2"
                                                                                      (rewrite*
                                                                                       "sq_zero")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (case
                                                                                           "q`y /= zero")
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "left_distributive")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "sq(q`x)"
                                                                                               "inv(a) * sq(q`y)"
                                                                                               "inv[(remove(zero,fullset[T])),*,one](sq(q`y))")
                                                                                              (("1"
                                                                                                (replaces
                                                                                                 -14)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "times_associative")
                                                                                                    (("1"
                                                                                                      (case-replace
                                                                                                       "(sq(q`y) * inv[(remove(zero, fullset[T])), restrict [[T, T], [(remove[T](zero, fullset[T])), (remove[T](zero, fullset[T]))], T] (*), one] (sq(q`y))) = one")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "inv_power[(remove(zero,fullset[T])),*,one]")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "q`y"
                                                                                                               "2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "power")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "power")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "power")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (rewrite*
                                                                                                                         "sq_rew")
                                                                                                                        (("1"
                                                                                                                          (replaces
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "sq_times"
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -12
                                                                                                                               "q`x * inv[(remove(zero,fullset[T])),*,one](q`y)")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 (-1
                                                                                                                                  -12))
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 (-2
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (rewrite
                                                                                                         "inv_right[(remove(zero,fullset[T])),*,one]")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "remove")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "member")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "sq_eq_zero")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "q`y")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (prop)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1
                                                                                               -13)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "sq_zero")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "sq_eq_zero")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "q`x")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "q")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "remove")
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  -2
                                                                                                                  -3
                                                                                                                  -4
                                                                                                                  -5
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "zero_q")
                                                                                                                  (("2"
                                                                                                                    (decompose-equality)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (lemma
                                                                   "fullset_is_field")
                                                                  (("2"
                                                                    (expand
                                                                     "field?")
                                                                    (("2"
                                                                      (expand
                                                                       "division_ring?")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (hide
                                                                           -1
                                                                           -3)
                                                                          (("2"
                                                                            (expand
                                                                             "group?")
                                                                            (("2"
                                                                              (expand
                                                                               "monoid?")
                                                                              (("2"
                                                                                (expand
                                                                                 "monad?")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -1
                                                                                       -3
                                                                                       -4
                                                                                       -5)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -4
                                                                                       -5)
                                                                                      (("3"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("4"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -5)
                                                                                      (("4"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("5"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -4)
                                                                                      (("5"
                                                                                        (expand
                                                                                         "inv_exists?")
                                                                                        (("5"
                                                                                          (skeep)
                                                                                          (("5"
                                                                                            (inst
                                                                                             -1
                                                                                             "x")
                                                                                            (("5"
                                                                                              (skeep)
                                                                                              (("5"
                                                                                                (inst
                                                                                                 1
                                                                                                 "y")
                                                                                                (("1"
                                                                                                  (split)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "restrict")
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "restrict")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("6"
                                                                                      (hide
                                                                                       -1
                                                                                       -3
                                                                                       -4
                                                                                       -5)
                                                                                      (("6"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("7"
                                                                                      (hide
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5)
                                                                                      (("7"
                                                                                        (skeep)
                                                                                        (("7"
                                                                                          (expand
                                                                                           "star_closed?")
                                                                                          (("7"
                                                                                            (inst
                                                                                             -1
                                                                                             "x1`1"
                                                                                             "x1`2")
                                                                                            (("7"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 1)
                                                                (("3"
                                                                  (lemma
                                                                   "fullset_is_field")
                                                                  (("3"
                                                                    (expand
                                                                     "field?")
                                                                    (("3"
                                                                      (expand
                                                                       "division_ring?")
                                                                      (("3"
                                                                        (expand
                                                                         "group?")
                                                                        (("3"
                                                                          (expand
                                                                           "monoid?")
                                                                          (("3"
                                                                            (expand
                                                                             "monad?")
                                                                            (("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (hide-all-but
                                                                                 (-3
                                                                                  1))
                                                                                (("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (hide-all-but
                                                                 1)
                                                                (("4"
                                                                  (lemma
                                                                   "fullset_is_field")
                                                                  (("4"
                                                                    (expand
                                                                     "field?")
                                                                    (("4"
                                                                      (expand
                                                                       "division_ring?")
                                                                      (("4"
                                                                        (expand
                                                                         "group?")
                                                                        (("4"
                                                                          (expand
                                                                           "monoid?")
                                                                          (("4"
                                                                            (expand
                                                                             "monad?")
                                                                            (("4"
                                                                              (flatten)
                                                                              (("4"
                                                                                (hide-all-but
                                                                                 (-2
                                                                                  1))
                                                                                (("4"
                                                                                  (skeep)
                                                                                  (("4"
                                                                                    (expand
                                                                                     "star_closed?")
                                                                                    (("4"
                                                                                      (inst
                                                                                       -1
                                                                                       "x1`1"
                                                                                       "x1`2")
                                                                                      (("4"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "times_associative")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "b"
                                                     "(sq(q`z) + inv(a) * sq(q`t))"
                                                     "(sq(q`z) + inv(a) * sq(q`t))")
                                                    (("2"
                                                      (replaces -1)
                                                      (("2"
                                                        (rewrite
                                                         "sq_rew")
                                                        (("2"
                                                          (replace
                                                           -3
                                                           1
                                                           rl)
                                                          (("2"
                                                            (hide -3)
                                                            (("2"
                                                              (rewrite*
                                                               "sq_plus")
                                                              (("2"
                                                                (rewrite*
                                                                 "right_distributive")
                                                                (("2"
                                                                  (rewrite*
                                                                   "sq_times"
                                                                   :dir
                                                                   rl)
                                                                  (("2"
                                                                    (rewrite*
                                                                     "plus_associative"
                                                                     :dir
                                                                     rl)
                                                                    (("2"
                                                                      (rewrite
                                                                       "plus_heading_sixth")
                                                                      (("2"
                                                                        (rewrite*
                                                                         "negative_times")
                                                                        (("2"
                                                                          (rewrite*
                                                                           "times_negative")
                                                                          (("2"
                                                                            (case
                                                                             "sq(q`x) * (a * sq(q`t)) = a * sq(q`x * q`t)")
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "cancel_right_plus")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "sq(q`x * q`z) + q`x * q`z * (a * q`y * q`t) + a * q`y * q`t * (q`x * q`z)"
                                                                                     "(a * (q`x * q`t * (q`y * q`z))) + (a * (q `y * q`z * (q`x * q`t))) + (a * sq(q`y * q`z)) + sq(q`x * q`z) + inv(a * sq(q`y) * sq(q`z))"
                                                                                     "sq(a * q`y * q`t)")
                                                                                    (("1"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (hide
                                                                                         2
                                                                                         3)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "plus_heading_fourth")
                                                                                          (("1"
                                                                                            (rewrite*
                                                                                             "plus_associative")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "cancel_left_plus")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "sq_times")
                                                                                                (("1"
                                                                                                  (rewrite*
                                                                                                   "times_associative")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (rewrite*
                                                                                                       "times_associative"
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (s_times_permute
                                                                                                         (3
                                                                                                          1
                                                                                                          5
                                                                                                          4
                                                                                                          2))
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cancel_left_plus")
                                                                                                          (("1"
                                                                                                            (s_times_permute
                                                                                                             (1
                                                                                                              2
                                                                                                              5
                                                                                                              4
                                                                                                              3))
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (rewrite*
                                                                                 "times_associative"
                                                                                 :dir
                                                                                 rl)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "times_commutative")
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "times_associative")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "sq_times")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (s_rrnnrntrtn)
                                                  (("2"
                                                    (lemma
                                                     "times_commutative")
                                                    (("2"
                                                      (inst
                                                       -1
                                                       "a"
                                                       "sq(q`t)")
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (rewrite*
                                                           "times_associative"
                                                           :dir
                                                           rl)
                                                          (("2"
                                                            (lemma
                                                             "times_commutative")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "(a * sq(q`y) * sq(q`t))"
                                                               "a")
                                                              (("2"
                                                                (replaces
                                                                 -1)
                                                                (("2"
                                                                  (rewrite*
                                                                   "times_associative"
                                                                   :dir
                                                                   rl)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (replace -3 1 rl)
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "cancel_left_plus")
                    (("2"
                      (inst -1
                       "q`x * q`x + inv(a) * (q`y * q`y) + inv(b) * (q`z * q`z) + (a * b) * (q`t * q`t)"
                       "zero" "inv(q`x * q`x + inv(a) * (q`y * q`y))")
                      (("2" (assert)
                        (("2" (lemma "plus_associative")
                          (("2"
                            (inst -1
                             "inv(q`x * q`x + inv(a) * (q`y * q`y)) "
                             "q`x * q`x + inv(a) * (q`y * q`y)"
                             "inv(b) * (q`z * q`z) + (a * b) * (q`t * q`t)")
                            (("2"
                              (case "(q`x * q`x + inv(a) * (q`y * q`y) + inv(b) * (q`z * q`z) + (a * b) * (q`t * q`t)) = (q`x * q`x + inv(a) * (q`y * q`y)) + (inv(b) * (q`z * q`z) + (a * b) * (q`t * q`t))")
                              (("1"
                                (replaces -1)
                                (("1"
                                  (replace -1 -2 rl)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (hide -1)
                                      (("1"
                                        (lemma "cancel_left_minus")
                                        (("1"
                                          (inst
                                           -1
                                           "inv(q`x * q`x + inv(a) * (q`y * q`y))"
                                           "inv(b) * (q`z * q`z) + (a * b) * (q`t * q`t)"
                                           "zero")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -1 1)
                                              (("1"
                                                (rewrite "negate_plus")
                                                (("1"
                                                  (rewrite*
                                                   "negative_times"
                                                   :dir
                                                   rl)
                                                  (("1"
                                                    (rewrite
                                                     "plus_associative")
                                                    (("1"
                                                      (rewrite
                                                       "plus_commutative")
                                                      (("1"
                                                        (hide -)
                                                        (("1"
                                                          (rewrite
                                                           "plus_commutative")
                                                          (("1"
                                                            (rewrite
                                                             "right_distributive")
                                                            (("1"
                                                              (rewrite
                                                               "cancel_left_plus")
                                                              (("1"
                                                                (rewrite
                                                                 "times_commutative")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (rewrite*
                                                                     "times_associative")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2"
                                  (rewrite* "plus_associative")
                                  nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (skeep)
        (("2" (inst -1 "(one, x, y, zero)")
          (("1" (rewrite "red_norm_charac")
            (("1" (prop)
              (("1" (expand "zero_q")
                (("1"
                  (case "inv(a) * (x * x) + inv(b) * (y * y) = inv(a * (x * x) + b * (y * y))")
                  (("1" (rewrite "plus_associative")
                    (("1" (replaces -1)
                      (("1" (replaces -1) (("1" (assert) nil nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide-all-but 1)
                    (("2" (rewrite* "negate_plus")
                      (("2" (rewrite* "negative_times" :dir rl)
                        (("2" (rewrite "plus_commutative") nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide-all-but 1)
            (("2" (grind)
              (("2" (hide -3)
                (("2" (lemma "fullset_is_field")
                  (("2" (expand "field?")
                    (("2" (expand "division_ring?")
                      (("2" (expand "group?")
                        (("2" (expand "monoid?")
                          (("2" (expand "monad?")
                            (("2" (expand "member")
                              (("2"
                                (expand "remove")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((red_norm_charac formula-decl nil quaternions nil)
    (T formal-nonempty-type-decl nil quaternions nil)
    (+ formal-const-decl "[T, T -> T]" quaternions nil)
    (* formal-const-decl "[T, T -> T]" quaternions nil)
    (zero formal-const-decl "T" quaternions nil)
    (one formal-const-decl "T" quaternions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (fullset const-decl "set" sets nil)
    (a formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (b formal-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (quat type-eq-decl nil quaternions_def nil)
    (/= const-decl "boolean" notequal nil)
    (zero_q const-decl "quat" quaternions_def nil)
    (nz_quat nonempty-type-eq-decl nil quaternions nil)
    (quat_div_ring_aux2 formula-decl nil quaternions nil)
    (right_distributive formula-decl nil ring nil)
    (TRUE const-decl "bool" booleans nil) (sq const-decl "T" ring nil)
    (sq_plus formula-decl nil ring nil)
    (plus_heading_sixth formula-decl nil pvs_strategies_lemmas nil)
    (times_negative formula-decl nil ring nil)
    (cancel_right_plus formula-decl nil ring nil)
    (plus_heading_fourth formula-decl nil pvs_strategies_lemmas nil)
    (cancel_left_plus formula-decl nil ring nil)
    (times_heading_third formula-decl nil pvs_strategies_lemmas nil)
    (times_heading_fourth formula-decl nil pvs_strategies_lemmas nil)
    (times_heading_fifth formula-decl nil pvs_strategies_lemmas nil)
    (times_commutative formula-decl nil commutative_ring nil)
    (negate_is_right_inv formula-decl nil ring nil)
    (negate_is_left_inv formula-decl nil ring nil)
    (negative_times formula-decl nil ring nil)
    (plus_associative formula-decl nil ring nil)
    (sq_zero formula-decl nil ring nil)
    (restrict const-decl "R" restrict nil)
    (times_zero formula-decl nil ring nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (power def-decl "T" monoid_def nil)
    (inv_power formula-decl nil group nil)
    (inv_right formula-decl nil group nil)
    (sq_eq_zero formula-decl nil ring_nz_closed nil)
    (plus_zero formula-decl nil ring nil)
    (zero_plus formula-decl nil ring nil)
    (y skolem-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (associative? const-decl "bool" operator_defs nil)
    (identity? const-decl "bool" operator_defs nil)
    (one_times formula-decl nil ring_with_one nil)
    (star_closed? const-decl "bool" groupoid_def nil)
    (inv_is_member_R formula-decl nil ring_basic_properties nil)
    (R_prod_star_closed formula-decl nil ring_basic_properties nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (zero_times formula-decl nil ring nil)
    (y skolem-const-decl "(remove(zero, fullset[T]))" quaternions nil)
    (fullset_is_field formula-decl nil quaternions nil)
    (division_ring? const-decl "bool" division_ring_def nil)
    (monoid? const-decl "bool" monoid_def nil)
    (group? const-decl "bool" group_def nil)
    (q skolem-const-decl "nz_quat" quaternions nil)
    (times_one formula-decl nil ring_with_one nil)
    (sq_times formula-decl nil commutative_ring nil)
    (ring nonempty-type-eq-decl nil ring nil)
    (ring? const-decl "bool" ring_def nil)
    (division_ring nonempty-type-eq-decl nil division_ring nil)
    (ring_nz_closed? const-decl "bool" ring_nz_closed_def nil)
    (division_ring_is_ring_nz_closed judgement-tcc nil division_ring
     nil)
    (y_1 skolem-const-decl "(remove(zero, fullset[T]))" quaternions
     nil)
    (times_associative formula-decl nil ring nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil)
    (times_is_zero formula-decl nil ring_nz_closed nil)
    (nzd_R_cancel_right formula-decl nil ring_nz_closed_aux nil)
    (inv_exists? const-decl "bool" group_def nil)
    (monad? const-decl "bool" monad_def nil)
    (ring_with_one? const-decl "bool" ring_with_one_def nil)
    (field? const-decl "bool" field_def nil)
    (negate_negate formula-decl nil ring nil)
    (sq_rew formula-decl nil ring nil)
    (left_distributive formula-decl nil ring nil)
    (quat_div_ring_aux1 formula-decl nil quaternions nil)
    (plus_commutative formula-decl nil ring nil)
    (negate_plus formula-decl nil ring nil)
    (cancel_left_minus formula-decl nil ring nil)
    (inv const-decl "{y | x * y = one AND y * x = one}" group nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (y skolem-const-decl "T" quaternions nil)
    (x skolem-const-decl "T" quaternions nil)
    (div_ring_iff_nz_rednorm formula-decl nil quaternions nil))
   SHOSTAK)))

