(semigroup_def
 (semigroup?_TCC1 0
  (semigroup?_TCC1-2 "" 3790093318
   ("" (expand "star_closed?")
    (("" (expand "member") (("" (skosimp*) nil nil)) nil)) nil)
   ((member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil))
   shostak
   (semigroup? subtype
    "restrict[[semigroup_def.T, semigroup_def.T], [(semigroup_def.S), (semigroup_def.S)], semigroup_def.T].restrict(semigroup_def.*)"
    "[[(semigroup_def.S), (semigroup_def.S)] -> (semigroup_def.S)]"))
  (semigroup?_TCC1-1 nil 3301141742
   ("" (expand "groupoid?")
    (("" (expand "star_closed?")
      (("" (expand "member") (("" (skosimp*) nil nil)) nil)) nil))
    nil)
   ((member const-decl "bool" sets nil)
    (star_closed? const-decl "bool" groupoid_def nil))
   shostak
   (semigroup? subtype
    "restrict[[semigroup_def.T, semigroup_def.T], [(semigroup_def.S), (semigroup_def.S)], semigroup_def.T].restrict(semigroup_def.*)"
    "[[(semigroup_def.S), (semigroup_def.S)] -> (semigroup_def.S)]")))
 (finite_commutative_semigroup?_TCC1 0
  (finite_commutative_semigroup?_TCC1-2 "" 3790093318
   ("" (expand "finite_semigroup?")
    (("" (expand "star_closed?")
      (("" (expand "member") (("" (skosimp*) nil nil)) nil)) nil))
    nil)
   ((star_closed? const-decl "bool" groupoid_def nil)
    (member const-decl "bool" sets nil)
    (finite_semigroup? const-decl "bool" semigroup_def nil))
   shostak
   (finite_commutative_semigroup? subtype
    "restrict[[semigroup_def.T, semigroup_def.T], [(semigroup_def.S), (semigroup_def.S)], semigroup_def.T].restrict(semigroup_def.*)"
    "[[(semigroup_def.S), (semigroup_def.S)] -> (semigroup_def.S)]"))
  (finite_commutative_semigroup?_TCC1-1 nil 3301141742
   ("" (expand "finite_semigroup?")
    (("" (expand "semigroup?")
      (("" (expand "groupoid?")
        (("" (expand "star_closed?")
          (("" (expand "member") (("" (skosimp*) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((star_closed? const-decl "bool" groupoid_def nil)
    (member const-decl "bool" sets nil)
    (finite_semigroup? const-decl "bool" semigroup_def nil))
   shostak
   (finite_commutative_semigroup? subtype
    "restrict[[semigroup_def.T, semigroup_def.T], [(semigroup_def.S), (semigroup_def.S)], semigroup_def.T].restrict(semigroup_def.*)"
    "[[(semigroup_def.S), (semigroup_def.S)] -> (semigroup_def.S)]"))))

