(ring_xyx_is_x
 (IMP_ring_nz_closed_aux_TCC1 0
  (IMP_ring_nz_closed_aux_TCC1-1 nil 3797781488
   ("" (rewrite "fullset_is_ring") nil nil)
   ((fullset_is_ring formula-decl nil ring_xyx_is_x nil)) nil
   (IMP_ring_nz_closed_aux assuming
    "ring_nz_closed_aux[ring_xyx_is_x.T, ring_xyx_is_x.+, ring_xyx_is_x.*, ring_xyx_is_x.zero].ring_nz_closed_aux"
    "fullset_is_ring: ASSUMPTION ring_def[ring_nz_closed_aux.T, ring_nz_closed_aux.+, ring_nz_closed_aux.*, ring_nz_closed_aux.zero].ring?(sets[ring_nz_closed_aux.T].fullset)")))
 (xyx_is_x_nz_divisor 0
  (xyx_is_x_nz_divisor-1 nil 3797768035
   ("" (skosimp)
    (("" (lemma zero_times)
      (("" (inst -1 "x!1")
        (("" (replace -4 -1 rl)
          (("" (rewrite times_associative)
            (("" (replace -1 -4 rl)
              (("" (rewrite "times_associative" -4 :dir rl)
                (("" (hide -1)
                  (("" (typepred "S!1")
                    (("" (expand "xyx_R?")
                      (("" (flatten)
                        (("" (inst -2 "x!1")
                          (("" (hide -1)
                            (("" (expand "exists1")
                              ((""
                                (skosimp)
                                ((""
                                  (skosimp)
                                  ((""
                                    (lemma plus_zero)
                                    ((""
                                      (inst -1 "x!1 * x!2 * x!1")
                                      ((""
                                        (replace -6 -1 rl)
                                        ((""
                                          (rewrite
                                           "left_distributive"
                                           :dir
                                           rl)
                                          ((""
                                            (rewrite
                                             "right_distributive"
                                             :dir
                                             rl)
                                            ((""
                                              (hide -2 -6)
                                              ((""
                                                (case
                                                 "(x!2 + y!1) = x!2")
                                                (("1"
                                                  (lemma "l_plus_zero")
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "x!2"
                                                     "y!1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (hide-all-but
                                                         (-1 -6))
                                                        (("1"
                                                          (expand
                                                           "remove")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "unique?")
                                                  (("2"
                                                    (inst
                                                     -2
                                                     "x!2+y!1"
                                                     "x!2")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (reveal -2)
                                                        (("1"
                                                          (replace
                                                           -1
                                                           -2)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "R_sum_star_closed")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "S!1"
                                                         "x!2"
                                                         "y!1")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "remove")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((zero formal-const-decl "T" ring_xyx_is_x nil)
    (* formal-const-decl "[T, T -> T]" ring_xyx_is_x nil)
    (+ formal-const-decl "[T, T -> T]" ring_xyx_is_x nil)
    (T formal-nonempty-type-decl nil ring_xyx_is_x nil) nil
    (remove const-decl "set" sets nil)
    (exists1 const-decl "bool" exists1 nil) nil
    (unique? const-decl "bool" exists1 nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (member const-decl "bool" sets nil) nil
    (l_plus_zero formula-decl nil ring_basic_properties nil)
    (= const-decl "[T, T -> boolean]" equalities nil) nil nil
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (xyx_R? const-decl "bool" ring_xyx_is_x_def nil)
    (xyx_R type-eq-decl nil ring_xyx_is_x_def nil) nil)
   nil))
 (xyx_is_x_nz_closed 0
  (xyx_is_x_nz_closed-1 nil 3797778767
   ("" (skosimp)
    (("" (typepred "S!1")
      (("" (lemma xyx_is_x_nz_divisor)
        (("" (expand "nz_closed?")
          (("" (expand "star_closed?")
            (("" (skosimp)
              (("" (expand "member")
                (("" (expand "remove")
                  (("" (typepred "x!1" "y!1")
                    (("" (expand "remove")
                      (("" (flatten)
                        (("" (inst -3 "x!1" "y!1" "S!1")
                          (("" (assert)
                            (("" (hide -3 -4 1 2)
                              ((""
                                (lemma "R_prod_star_closed")
                                ((""
                                  (inst -1 "S!1" "x!1" "y!1")
                                  (("" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((xyx_R type-eq-decl nil ring_xyx_is_x_def nil)
    (xyx_R? const-decl "bool" ring_xyx_is_x_def nil)
    (zero formal-const-decl "T" ring_xyx_is_x nil)
    (* formal-const-decl "[T, T -> T]" ring_xyx_is_x nil)
    (+ formal-const-decl "[T, T -> T]" ring_xyx_is_x nil)
    (set type-eq-decl nil sets nil)
    (T formal-nonempty-type-decl nil ring_xyx_is_x nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil) nil
    (remove const-decl "set" sets nil) nil
    (R_prod_star_closed formula-decl nil ring_basic_properties nil)
    (member const-decl "bool" sets nil) nil
    (xyx_is_x_nz_divisor formula-decl nil ring_xyx_is_x nil))
   nil))
 (yxy_is_y 0
  (yxy_is_y-1 nil 3797781367
   ("" (skosimp)
    (("" (hide -1 -2)
      (("" (lemma times_associative)
        (("" (inst -1 "x!1 * y!1" "x!1" "y!1")
          (("" (replaces -2 -1)
            (("" (lemma cancel_right_plus)
              ((""
                (inst -1 "x!1 * y!1 * (x!1 * y!1)" "x!1 * y!1"
                 "inv(x!1 * y!1)")
                (("" (assert)
                  (("" (hide -2)
                    (("" (lemma times_negative)
                      (("" (inst -1 "x!1" "y!1")
                        (("" (replace -1 -2 rl)
                          (("" (hide -1)
                            (("" (lemma times_associative)
                              ((""
                                (inst -1 "x!1" "y!1" "x!1 * y!1")
                                ((""
                                  (replaces -1 -2)
                                  ((""
                                    (lemma right_distributive)
                                    ((""
                                      (inst
                                       -1
                                       "x!1"
                                       "(y!1 * (x!1 * y!1))"
                                       "inv(y!1)")
                                      ((""
                                        (replaces -2 -1)
                                        ((""
                                          (lemma nz_times_is_zero)
                                          ((""
                                            (inst
                                             -1
                                             "S!1"
                                             "x!1"
                                             "((y!1 * (x!1 * y!1)) + inv(y!1))")
                                            ((""
                                              (split -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (hide -2)
                                                  (("1"
                                                    (lemma
                                                     cancel_right_plus)
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "((y!1 * (x!1 * y!1)) + inv(y!1))"
                                                       "zero"
                                                       "y!1")
                                                      (("1"
                                                        (split -2)
                                                        (("1"
                                                          (hide -2)
                                                          (("1"
                                                            (reveal
                                                             -13)
                                                            (("1"
                                                              (expand
                                                               "remove")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (hide -2)
                                                            (("2"
                                                              (lemma
                                                               plus_associative)
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "(y!1 * (x!1 * y!1))"
                                                                 "inv(y!1)"
                                                                 "y!1")
                                                                (("2"
                                                                  (replaces
                                                                   -2
                                                                   -1)
                                                                  (("2"
                                                                    (lemma
                                                                     negate_is_left_inv)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "y!1")
                                                                      (("2"
                                                                        (replaces
                                                                         -1
                                                                         -2)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             times_associative)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "y!1"
                                                                               "x!1"
                                                                               "y!1")
                                                                              (("2"
                                                                                (replace
                                                                                 -2
                                                                                 -1
                                                                                 rl)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1)
                                                (("2"
                                                  (lemma
                                                   xyx_is_x_nz_closed)
                                                  (("2"
                                                    (inst -1 "S!1")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (hide -1)
                                                (("3"
                                                  (reveal -12)
                                                  (("3"
                                                    (expand "remove")
                                                    (("3"
                                                      (expand "member")
                                                      (("3"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("4"
                                                (hide -1)
                                                (("4"
                                                  (typepred "S!1")
                                                  (("4"
                                                    (expand "xyx_R?")
                                                    (("4"
                                                      (flatten)
                                                      (("4"
                                                        (hide -2)
                                                        (("4"
                                                          (lemma
                                                           "R_sum_star_closed")
                                                          (("4"
                                                            (inst
                                                             -1
                                                             "S!1"
                                                             "(y!1 * (x!1 * y!1))"
                                                             "inv(y!1)")
                                                            (("4"
                                                              (lemma
                                                               "R_prod_star_closed")
                                                              (("4"
                                                                (inst
                                                                 -1
                                                                 "S!1"
                                                                 "y!1"
                                                                 "(x!1 * y!1)")
                                                                (("4"
                                                                  (reveal
                                                                   -15
                                                                   -16)
                                                                  (("4"
                                                                    (lemma
                                                                     "R_prod_star_closed")
                                                                    (("4"
                                                                      (inst
                                                                       -1
                                                                       "S!1"
                                                                       "x!1"
                                                                       "y!1")
                                                                      (("4"
                                                                        (lemma
                                                                         "inv_is_member_R")
                                                                        (("4"
                                                                          (inst
                                                                           -1
                                                                           "S!1"
                                                                           "y!1")
                                                                          (("4"
                                                                            (expand
                                                                             "remove")
                                                                            (("4"
                                                                              (expand
                                                                               "member")
                                                                              (("4"
                                                                                (flatten
                                                                                 -3)
                                                                                (("4"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   (nil nil nil
    (nz_times_is_zero formula-decl nil ring_nz_closed_aux nil) nil nil
    nil nil (remove const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (xyx_is_x_nz_closed formula-decl nil ring_xyx_is_x nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (R_prod_star_closed formula-decl nil ring_basic_properties nil)
    (inv_is_member_R formula-decl nil ring_basic_properties nil)
    (set type-eq-decl nil sets nil) nil nil
    (xyx_R? const-decl "bool" ring_xyx_is_x_def nil)
    (xyx_R type-eq-decl nil ring_xyx_is_x_def nil) nil nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil) nil
    (T formal-nonempty-type-decl nil ring_xyx_is_x nil)
    (+ formal-const-decl "[T, T -> T]" ring_xyx_is_x nil)
    (* formal-const-decl "[T, T -> T]" ring_xyx_is_x nil)
    (zero formal-const-decl "T" ring_xyx_is_x nil))
   nil))
 (xyx_has_identity 0
  (xyx_has_identity-2 nil 3797781212
   ("" (skosimp)
    (("" (case "S!1 = singleton(zero) OR S!1 /= singleton(zero)")
      (("1" (split)
        (("1" (inst 1 "zero")
          (("1" (skosimp)
            (("1" (expand "singleton")
              (("1" (decompose-equality -1)
                (("1" (inst -1 "x!1")
                  (("1" (iff -1)
                    (("1" (flatten -1)
                      (("1" (hide -2)
                        (("1" (typepred "x!1") (("1" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide -1)
            (("2" (typepred "S!1")
              (("2" (expand "xyx_R?")
                (("2" (flatten -1)
                  (("2" (hide -2)
                    (("2" (lemma zero_is_member_R)
                      (("2" (inst -1 "S!1")
                        (("2" (expand "member")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (lemma no_singleton_nzx)
          (("2" (inst -1 "S!1")
            (("2" (assert)
              (("2" (hide -2)
                (("2" (skosimp)
                  (("2" (typepred "S!1")
                    (("2" (expand "xyx_R?")
                      (("2" (flatten -1)
                        (("2" (inst -2 "nzx!1")
                          (("1" (expand "exists1")
                            (("1" (flatten)
                              (("1"
                                (hide -3)
                                (("1"
                                  (skosimp)
                                  (("1"
                                    (inst 2 "nzx!1 * x!1")
                                    (("1"
                                      (skosimp)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (lemma times_associative)
                                          (("1"
                                            (inst
                                             -1
                                             "x!2"
                                             "nzx!1 * x!1"
                                             "nzx!1")
                                            (("1"
                                              (replaces -3 -1)
                                              (("1"
                                                (hide -2)
                                                (("1"
                                                  (lemma
                                                   "cancel_right_plus")
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "(x!2 * (nzx!1 * x!1)) * nzx!1"
                                                     "x!2 * nzx!1"
                                                     "inv(x!2 * nzx!1)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (hide -2)
                                                        (("1"
                                                          (lemma
                                                           "negative_times")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "x!2"
                                                             "nzx!1")
                                                            (("1"
                                                              (replace
                                                               -1
                                                               -2
                                                               rl)
                                                              (("1"
                                                                (hide
                                                                 -1)
                                                                (("1"
                                                                  (lemma
                                                                   left_distributive)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "(x!2 * (nzx!1 * x!1))"
                                                                     "inv(x!2)"
                                                                     "nzx!1")
                                                                    (("1"
                                                                      (replaces
                                                                       -2
                                                                       -1)
                                                                      (("1"
                                                                        (lemma
                                                                         nz_times_is_zero)
                                                                        (("1"
                                                                          (lemma
                                                                           xyx_is_x_nz_closed)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "S!1")
                                                                            (("1"
                                                                              (inst
                                                                               -2
                                                                               "S!1"
                                                                               "(x!2 * (nzx!1 * x!1)) + inv(x!2)"
                                                                               "nzx!1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -2)
                                                                                  (("1"
                                                                                    (hide
                                                                                     (-2
                                                                                      -3))
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "cancel_right_plus")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2 * (nzx!1 * x!1)) + inv(x!2)"
                                                                                         "zero"
                                                                                         "x!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               negate_is_left_inv)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "x!2")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   plus_associative
                                                                                                   -2)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      1))
                                                                                    (("2"
                                                                                      (lemma
                                                                                       R_sum_star_closed)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "S!1"
                                                                                         "x!2 * (nzx!1 * x!1)"
                                                                                         "inv(x!2)")
                                                                                        (("2"
                                                                                          (lemma
                                                                                           R_prod_star_closed)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "S!1"
                                                                                             "x!2"
                                                                                             "nzx!1 * x!1")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               R_prod_star_closed)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "S!1"
                                                                                                 "nzx!1"
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   inv_is_member_R)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "S!1"
                                                                                                     "x!2")
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "x!1"
                                                                                                       "x!2"
                                                                                                       "nzx!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (lemma yxy_is_y)
                                          (("2"
                                            (inst
                                             -1
                                             "nzx!1"
                                             "x!1"
                                             "S!1")
                                            (("2"
                                              (expand "remove")
                                              (("2"
                                                (expand "member")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (hide (-2 -3))
                                                    (("2"
                                                      (lemma
                                                       times_associative)
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "x!1*nzx!1"
                                                         "x!1"
                                                         "x!2")
                                                        (("2"
                                                          (replaces
                                                           -2
                                                           -1)
                                                          (("2"
                                                            (lemma
                                                             cancel_right_plus)
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "x!1 * x!2"
                                                               "x!1 * nzx!1 * (x!1 * x!2)"
                                                               "inv(x!1 * nzx!1 * (x!1 * x!2))")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   -2)
                                                                  (("2"
                                                                    (lemma
                                                                     times_negative)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "x!1 * nzx!1"
                                                                       "x!1 * x!2")
                                                                      (("2"
                                                                        (replace
                                                                         -1
                                                                         -2
                                                                         rl)
                                                                        (("2"
                                                                          (hide
                                                                           -1)
                                                                          (("2"
                                                                            (lemma
                                                                             right_distributive)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "x!1"
                                                                               "x!2"
                                                                               "nzx!1 * inv(x!1 * x!2)")
                                                                              (("2"
                                                                                (lemma
                                                                                 times_associative)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "x!1"
                                                                                   "nzx!1"
                                                                                   "inv(x!1 * x!2)")
                                                                                  (("2"
                                                                                    (replaces
                                                                                     -1
                                                                                     -3)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -2
                                                                                       -1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         nz_times_is_zero)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "S!1"
                                                                                           "x!1"
                                                                                           "x!2+nzx!1*inv(x!1 * x!2)")
                                                                                          (("2"
                                                                                            (lemma
                                                                                             xyx_is_x_nz_closed)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "S!1")
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 R_sum_star_closed)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "S!1"
                                                                                                   "x!2"
                                                                                                   "nzx!1*inv(x!1*x!2)")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     R_prod_star_closed)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "S!1"
                                                                                                       "nzx!1"
                                                                                                       "inv(x!1*x!2)")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         inv_is_member_R)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "S!1"
                                                                                                           "x!1*x!2")
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             R_prod_star_closed)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "S!1"
                                                                                                               "x!1"
                                                                                                               "x!2")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (hide-all-but
                                                                                                                       (-7
                                                                                                                        1
                                                                                                                        2))
                                                                                                                      (("2"
                                                                                                                        (split)
                                                                                                                        (("1"
                                                                                                                          (reveal
                                                                                                                           -23)
                                                                                                                          (("1"
                                                                                                                            (replaces
                                                                                                                             -2
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           times_negative)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "nzx!1"
                                                                                                                             "x!1*x!2")
                                                                                                                            (("2"
                                                                                                                              (replaces
                                                                                                                               -1
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 cancel_right_plus)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "x!2+inv(nzx!1*(x!1*x!2))"
                                                                                                                                   "zero"
                                                                                                                                   "nzx!1*(x!1*x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         plus_associative)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "x!2"
                                                                                                                                           "inv(nzx!1 * (x!1 * x!2))"
                                                                                                                                           "nzx!1 * (x!1 * x!2)")
                                                                                                                                          (("2"
                                                                                                                                            (replaces
                                                                                                                                             -2
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 times_associative)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "nzx!1"
                                                                                                                                                   "x!1"
                                                                                                                                                   "x!2")
                                                                                                                                                  (("2"
                                                                                                                                                    (replaces
                                                                                                                                                     -2
                                                                                                                                                     -1)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (lemma R_prod_star_closed)
                                      (("2"
                                        (inst -1 "S!1" "nzx!1" "x!1")
                                        (("2"
                                          (typepred "nzx!1" "x!1")
                                          (("2"
                                            (expand "member")
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "remove")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (prop) nil nil))
      nil))
    nil)
   ((/= const-decl "boolean" notequal nil)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (xyx_R type-eq-decl nil ring_xyx_is_x_def nil)
    (xyx_R? const-decl "bool" ring_xyx_is_x_def nil)
    (zero formal-const-decl "T" ring_xyx_is_x nil)
    (* formal-const-decl "[T, T -> T]" ring_xyx_is_x nil)
    (+ formal-const-decl "[T, T -> T]" ring_xyx_is_x nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (T formal-nonempty-type-decl nil ring_xyx_is_x nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (no_singleton_nzx formula-decl nil ring_basic_properties nil)
    (remove const-decl "set" sets nil)
    (yxy_is_y formula-decl nil ring_xyx_is_x nil) nil nil nil
    (TRUE const-decl "bool" booleans nil) nil nil nil nil
    (xyx_is_x_nz_closed formula-decl nil ring_xyx_is_x nil) nil nil nil
    nil nil
    (R_sum_star_closed formula-decl nil ring_basic_properties nil)
    (R_prod_star_closed formula-decl nil ring_basic_properties nil)
    (inv_is_member_R formula-decl nil ring_basic_properties nil)
    (nz_times_is_zero formula-decl nil ring_nz_closed_aux nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil) nil
    (exists1 const-decl "bool" exists1 nil) nil
    (NOT const-decl "[bool -> bool]" booleans nil) nil nil
    (zero_is_member_R formula-decl nil ring_basic_properties nil)
    (member const-decl "bool" sets nil) nil)
   nil)
  (xyx_has_identity-1 nil 3797779238
   ("" (skosimp)
    (("" (case "S!1 = singleton(zero) OR S!1 /= singleton(zero)")
      (("1" (split)
        (("1" (inst 1 "zero")
          (("1" (skosimp)
            (("1" (expand "singleton")
              (("1" (decompose-equality -1)
                (("1" (inst -1 "x!1")
                  (("1" (iff -1)
                    (("1" (flatten -1)
                      (("1" (hide -2)
                        (("1" (typepred "x!1")
                          (("1" (assert) nil)))))))))))))))))
           ("2" (hide -1)
            (("2" (typepred "S!1")
              (("2" (expand "xyx_R?")
                (("2" (flatten -1)
                  (("2" (hide -2)
                    (("2" (lemma zero_is_member_R)
                      (("2" (inst -1 "S!1")
                        (("2" (expand "member")
                          (("2" (propax) nil)))))))))))))))))))
         ("2" (lemma no_singleton_nzx)
          (("2" (inst -1 "S!1")
            (("1" (assert)
              (("1" (hide -2)
                (("1" (skosimp)
                  (("1" (typepred "S!1")
                    (("1" (expand "xyx_R?")
                      (("1" (flatten -1)
                        (("1" (inst -2 "nzx!1")
                          (("1" (expand "exists1")
                            (("1" (flatten)
                              (("1"
                                (hide -3)
                                (("1"
                                  (skosimp)
                                  (("1"
                                    (inst 2 "nzx!1 * x!1")
                                    (("1"
                                      (skosimp)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (lemma times_associative)
                                          (("1"
                                            (inst
                                             -1
                                             "x!2"
                                             "nzx!1 * x!1"
                                             "nzx!1")
                                            (("1"
                                              (replaces -3 -1)
                                              (("1"
                                                (hide -2)
                                                (("1"
                                                  (lemma
                                                   "cancel_right_plus")
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "(x!2 * (nzx!1 * x!1)) * nzx!1"
                                                     "x!2 * nzx!1"
                                                     "inv(x!2 * nzx!1)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (hide -2)
                                                        (("1"
                                                          (lemma
                                                           "negative_times")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "x!2"
                                                             "nzx!1")
                                                            (("1"
                                                              (replace
                                                               -1
                                                               -2
                                                               rl)
                                                              (("1"
                                                                (hide
                                                                 -1)
                                                                (("1"
                                                                  (lemma
                                                                   left_distributive)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "(x!2 * (nzx!1 * x!1))"
                                                                     "inv(x!2)"
                                                                     "nzx!1")
                                                                    (("1"
                                                                      (replaces
                                                                       -2
                                                                       -1)
                                                                      (("1"
                                                                        (lemma
                                                                         nz_times_is_zero)
                                                                        (("1"
                                                                          (lemma
                                                                           xyx_is_x_nz_closed)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "S!1")
                                                                            (("1"
                                                                              (inst
                                                                               -2
                                                                               "S!1"
                                                                               "(x!2 * (nzx!1 * x!1)) + inv(x!2)"
                                                                               "nzx!1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -2)
                                                                                  (("1"
                                                                                    (hide
                                                                                     (-2
                                                                                      -3))
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "cancel_right_plus")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "(x!2 * (nzx!1 * x!1)) + inv(x!2)"
                                                                                         "zero"
                                                                                         "x!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               negate_is_left_inv)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "x!2")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   plus_associative
                                                                                                   -2)
                                                                                                  nil)))))))))))))))
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      1))
                                                                                    (("2"
                                                                                      (lemma
                                                                                       R_sum_star_closed)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "S!1"
                                                                                         "x!2 * (nzx!1 * x!1)"
                                                                                         "inv(x!2)")
                                                                                        (("1"
                                                                                          (lemma
                                                                                           R_prod_star_closed)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "S!1"
                                                                                             "x!2"
                                                                                             "nzx!1 * x!1")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               R_prod_star_closed)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "S!1"
                                                                                                 "nzx!1"
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   inv_is_member_R)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "S!1"
                                                                                                     "x!2")
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "x!1"
                                                                                                       "x!2"
                                                                                                       "nzx!1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil)))
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "S!1")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "xyx_R?")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil)))))))))))
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   R_prod_star_closed)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "S!1"
                                                                                                       "nzx!1"
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "nzx!1"
                                                                                                         "x!1"
                                                                                                         "x!2")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             inv_is_member_R)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "S!1"
                                                                                                               "x!2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "S!1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "xyx_R?")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "S!1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "xyx_R?")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil)))))))))))))))))
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "S!1")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "xyx_R?")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil)))))))))))
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "S!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "xyx_R?")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "S!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "xyx_R?")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil)))))))))))))))))))))))))))))))))))))))))))))
                                         ("2"
                                          (lemma yxy_is_y)
                                          (("2"
                                            (inst
                                             -1
                                             "nzx!1"
                                             "x!1"
                                             "S!1")
                                            (("2"
                                              (expand "remove")
                                              (("2"
                                                (expand "member")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (hide (-2 -3))
                                                    (("2"
                                                      (lemma
                                                       times_associative)
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "x!1*nzx!1"
                                                         "x!1"
                                                         "x!2")
                                                        (("2"
                                                          (replaces
                                                           -2
                                                           -1)
                                                          (("2"
                                                            (lemma
                                                             cancel_right_plus)
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "x!1 * x!2"
                                                               "x!1 * nzx!1 * (x!1 * x!2)"
                                                               "inv(x!1 * nzx!1 * (x!1 * x!2))")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   -2)
                                                                  (("2"
                                                                    (lemma
                                                                     times_negative)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "x!1 * nzx!1"
                                                                       "x!1 * x!2")
                                                                      (("2"
                                                                        (replace
                                                                         -1
                                                                         -2
                                                                         rl)
                                                                        (("2"
                                                                          (hide
                                                                           -1)
                                                                          (("2"
                                                                            (lemma
                                                                             right_distributive)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "x!1"
                                                                               "x!2"
                                                                               "nzx!1 * inv(x!1 * x!2)")
                                                                              (("2"
                                                                                (lemma
                                                                                 times_associative)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "x!1"
                                                                                   "nzx!1"
                                                                                   "inv(x!1 * x!2)")
                                                                                  (("2"
                                                                                    (replaces
                                                                                     -1
                                                                                     -3)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -2
                                                                                       -1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         nz_times_is_zero)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "S!1"
                                                                                           "x!1"
                                                                                           "x!2+nzx!1*inv(x!1 * x!2)")
                                                                                          (("2"
                                                                                            (lemma
                                                                                             xyx_is_x_nz_closed)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "S!1")
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 R_sum_star_closed)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "S!1"
                                                                                                   "x!2"
                                                                                                   "nzx!1*inv(x!1*x!2)")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     R_prod_star_closed)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "S!1"
                                                                                                       "nzx!1"
                                                                                                       "inv(x!1*x!2)")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         inv_is_member_R)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "S!1"
                                                                                                           "x!1*x!2")
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             R_prod_star_closed)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "S!1"
                                                                                                               "x!1"
                                                                                                               "x!2")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (hide-all-but
                                                                                                                       (-7
                                                                                                                        1
                                                                                                                        2))
                                                                                                                      (("2"
                                                                                                                        (split)
                                                                                                                        (("1"
                                                                                                                          (reveal
                                                                                                                           -23)
                                                                                                                          (("1"
                                                                                                                            (replaces
                                                                                                                             -2
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))))
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           times_negative)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "nzx!1"
                                                                                                                             "x!1*x!2")
                                                                                                                            (("2"
                                                                                                                              (replaces
                                                                                                                               -1
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 cancel_right_plus)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "x!2+inv(nzx!1*(x!1*x!2))"
                                                                                                                                   "zero"
                                                                                                                                   "nzx!1*(x!1*x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         plus_associative)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "x!2"
                                                                                                                                           "inv(nzx!1 * (x!1 * x!2))"
                                                                                                                                           "nzx!1 * (x!1 * x!2)")
                                                                                                                                          (("2"
                                                                                                                                            (replaces
                                                                                                                                             -2
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 times_associative)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "nzx!1"
                                                                                                                                                   "x!1"
                                                                                                                                                   "x!2")
                                                                                                                                                  (("2"
                                                                                                                                                    (replaces
                                                                                                                                                     -2
                                                                                                                                                     -1)
                                                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                     ("2"
                                      (lemma R_prod_star_closed)
                                      (("2"
                                        (inst -1 "S!1" "nzx!1" "x!1")
                                        (("2"
                                          (typepred "nzx!1" "x!1")
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (propax)
                                              nil)))))))))))))))))))
                           ("2" (expand "remove")
                            (("2" (assert) nil)))))))))))))))))
             ("2" (typepred "S!1")
              (("2" (expand "xyx_R?") (("2" (assert) nil)))))))))))
       ("2" (prop) nil))))
    nil)
   nil nil)))

